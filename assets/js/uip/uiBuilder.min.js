const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{createApp,getCurrentInstance,defineComponent,defineAsyncComponent,reactive}from"./../libs/vue-esm.js";import{VueDraggableNext}from"./../libs/VueDraggableNext.js";import{createRouter,createWebHistory,createWebHashHistory}from"./../libs/vue-router-esm.js";const pluginVersion=import.meta.url.split("?ver=")[1];import"./blocks/layout/loader.min.js?ver=3.3.1";import"./blocks/elements/loader.min.js?ver=3.3.1";import"./blocks/inputs/loader.min.js?ver=3.3.1";import"./blocks/dynamic/loader.min.js?ver=3.3.1";import"./blocks/analytics/loader.min.js?ver=3.3.1";import"./blocks/storeanalytics/loader.min.js?ver=3.3.1";let AllBlocks=wp.hooks.applyFilters("uipress.blocks.register",[]);const uniqueModuleNames=new Set;AllBlocks=AllBlocks.filter(e=>!uniqueModuleNames.has(e.moduleName)&&(uniqueModuleNames.add(e.moduleName),!0));import blockGroups from"./blocks/block-settings-groups.min.js?ver=3.3.1";wp.hooks.addFilter("uipress.blocks.groups.register","uipress",e=>({...e,...blockGroups}));const AllBlockGroups=wp.hooks.applyFilters("uipress.blocks.groups.register",{});wp.hooks.addFilter("uipress.app.plugins.register","uipress",e=>[...e,[]]);const AllPlugins=wp.hooks.applyFilters("uipress.app.plugins.register",[]);import{processSettings}from"./options/dynamic-settings.min.js?ver=3.3.1";const dynamic_settings=processSettings(uip_ajax.uipAppData.options.dynamicData);wp.hooks.addFilter("uipress.uibuilder.dynamicdata.register","uipress",e=>({...e,...dynamic_settings}));const AllDynamics=wp.hooks.applyFilters("uipress.uibuilder.dynamicdata.register",{});import themeStyles from"./options/theme-styles.min.js?ver=3.3.1";wp.hooks.addFilter("uipress.app.variables.register","uipress",e=>({...e,...themeStyles}));const AllThemeStyles=wp.hooks.applyFilters("uipress.app.variables.register");import{templategroups,templateSettings}from"./settings/template-settings-groups.min.js?ver=3.3.1";wp.hooks.addFilter("uipress.uibuilder.templatesettings.groups.register","uipress",e=>({...e,...templategroups})),wp.hooks.addFilter("uipress.uibuilder.templatesettings.options.register","uipress",e=>[...e,...templateSettings]);let TemplateGroupOptions=wp.hooks.applyFilters("uipress.uibuilder.templatesettings.groups.register",{}),options=wp.hooks.applyFilters("uipress.uibuilder.templatesettings.options.register",[]);for(let[e,i]of Object.entries(TemplateGroupOptions)){const i=options.filter(i=>i.group===e);TemplateGroupOptions[e].settings=i}import{globalSettingsGroups,globalSettings,processGlobalGroups}from"./settings/global-settings-groups.min.js?ver=3.3.1";wp.hooks.addFilter("uipress.app.sitesettings.groups.register","uipress",e=>({...e,...globalSettingsGroups})),wp.hooks.addFilter("uipress.app.sitesettings.options.register","uipress",e=>[...e,...globalSettings]);let SiteSettingsGroups=wp.hooks.applyFilters("uipress.app.sitesettings.groups.register",{}),SiteSettingsOptions=wp.hooks.applyFilters("uipress.app.sitesettings.options.register",[]);SiteSettingsGroups=processGlobalGroups(SiteSettingsGroups,SiteSettingsOptions);const appArgs=defineComponent({components:{Notify:defineAsyncComponent(()=>import(`./v3.5/utility/notify.min.js?ver=${pluginVersion}`)),Tips:defineAsyncComponent(()=>import(`./uibuilder/tips.min.js?ver=${pluginVersion}`))},data:()=>({}),watch:{$route(e,i){const o=new Event("uip-frame-hash-change");window.dispatchEvent(o)}},template:"\n    <router-view/>\n    <Notify/>\n    <Tips/>"}),BuilderSettings=()=>import(`./uibuilder/builder-settings.min.js?ver=${pluginVersion}`),TemplateTable=()=>import(`./uibuilder/template-table.min.js?ver=${pluginVersion}`),SetupWizard=()=>import(`./uibuilder/setup-wizard.min.js?ver=${pluginVersion}`),GlobalExport=()=>import(`./uibuilder/global-export.min.js?ver=${pluginVersion}`),GlobalImport=()=>import(`./uibuilder/global-import.min.js?ver=${pluginVersion}`),SiteSync=()=>import(`./uibuilder/site-sync.min.js?ver=${pluginVersion}`),SiteSettings=()=>import(`./uibuilder/site-settings.min.js?ver=${pluginVersion}`).catch(e=>console.error("Failed to load BuilderSettings",e)),Framework=()=>import(`./uibuilder/framework.min.js?ver=${pluginVersion}`),Errorlog=()=>import(`./tools/error-log.min.js?ver=${pluginVersion}`),routes=[{path:"/",name:__("List View","uipress-lite"),component:TemplateTable,query:{page:"1",search:""},children:[{name:__("Setup wizard","uipress-lite"),path:"/setupwizard/",component:SetupWizard},{name:__("Global export","uipress-lite"),path:"/globalexport/",component:GlobalExport},{name:__("Global import","uipress-lite"),path:"/globalimport/",component:GlobalImport},{name:__("Site sync","uipress-lite"),path:"/sitesync/",component:SiteSync},{name:__("Site settings","uipress-lite"),path:"/site-settings/",component:SiteSettings},{name:__("Error log","uipress-lite"),path:"/errorlog/",component:Errorlog}]},{path:"/uibuilder/:templateID/",name:"Builder",component:Framework,children:[{name:__("Block Settings","uipress-lite"),path:"settings/blocks/:uid",redirect:e=>`/uibuilder/${e.params.templateID}/`},{name:"templateSettings",path:"settings/template",component:BuilderSettings}]}],Router=createRouter({history:createWebHashHistory(),routes:routes}),app=createApp(appArgs);app.use(Router);const DropZone=defineAsyncComponent(()=>import(`./uibuilder/block-drop-zone.min.js?ver=${pluginVersion}`)),DropDown=defineAsyncComponent(()=>import(`./components/dropdown.min.js?ver=${pluginVersion}`)),MultiSelect=defineAsyncComponent(()=>import(`./components/multiselect.min.js?ver=${pluginVersion}`)),UserMultiSelect=defineAsyncComponent(()=>import(`./components/user-role-multiselect.min.js?ver=${pluginVersion}`)),UserSearch=defineAsyncComponent(()=>import(`./components/user-role-search.min.js?ver=${pluginVersion}`)),PostTypeMultiselect=defineAsyncComponent(()=>import(`./components/post-type-select.min.js?ver=${pluginVersion}`)),Accordion=defineAsyncComponent(()=>import(`./components/accordion.min.js?ver=${pluginVersion}`)),SwitchToggle=defineAsyncComponent(()=>import(`./components/switch-toggle.min.js?ver=${pluginVersion}`)),Tooltip=defineAsyncComponent(()=>import(`./components/tooltip.min.js?ver=${pluginVersion}`)),LoadingChart=defineAsyncComponent(()=>import(`./components/loading-chart.min.js?ver=${pluginVersion}`)),Offcanvas=defineAsyncComponent(()=>import(`./components/offcanvas.min.js?ver=${pluginVersion}`)),SaveButton=defineAsyncComponent(()=>import(`./components/save-button.min.js?ver=${pluginVersion}`)),ChartComp=defineAsyncComponent(()=>import(`./components/chart.min.js?ver=${pluginVersion}`)),FloatingPanel=defineAsyncComponent(()=>import(`./components/floating-panel.min.js?ver=${pluginVersion}`)),Modal=defineAsyncComponent(()=>import(`./v3.5/utility/modal.min.js?ver=${pluginVersion}`)),MediaLibrary=defineAsyncComponent(()=>import(`./v3.5/utility/media-library.min.js?ver=${pluginVersion}`));app.component("multi-select",MultiSelect),app.component("user-role-select",UserMultiSelect),app.component("user-role-search",UserSearch),app.component("post-type-select",PostTypeMultiselect),app.component("accordion",Accordion),app.component("uip-tooltip",Tooltip),app.component("uip-content-area",DropZone),app.component("loading-chart",LoadingChart),app.component("uip-offcanvas",Offcanvas),app.component("uip-save-button",SaveButton),app.component("dropdown",DropDown),app.component("uip-chart",ChartComp),app.component("uip-floating-panel",FloatingPanel),app.component("uipMediaLibrary",MediaLibrary),app.component("uipModal",Modal);const UIbuilderInlineImageSelect=defineAsyncComponent(()=>import(`./options/inline-image-select.min.js?ver=${pluginVersion}`)),UIbuilderBackgroundPosition=defineAsyncComponent(()=>import(`./options/background-position.min.js?ver=${pluginVersion}`)),UIbuilderSwitch=defineAsyncComponent(()=>import(`./options/switch-select.min.js?ver=${pluginVersion}`)),UIbuilderValueUnits=defineAsyncComponent(()=>import(`./options/value-units.min.js?ver=${pluginVersion}`)),UIbuilderUnits=defineAsyncComponent(()=>import(`./options/units.min.js?ver=${pluginVersion}`)),UIbuilderColorSelect=defineAsyncComponent(()=>import(`./options/color-select.min.js?ver=${pluginVersion}`)),UIbuilderInput=defineAsyncComponent(()=>import(`./options/input.min.js?ver=${pluginVersion}`)),UIbuilderTextarea=defineAsyncComponent(()=>import(`./options/textarea.min.js?ver=${pluginVersion}`)),UIbuilderNumber=defineAsyncComponent(()=>import(`./options/number.min.js?ver=${pluginVersion}`)),UIbuilderPostTypes=defineAsyncComponent(()=>import(`./options/post-types.min.js?ver=${pluginVersion}`)),UIbuilderParagraphInput=defineAsyncComponent(()=>import(`./options/paragraph-input.min.js?ver=${pluginVersion}`)),UIbuilderDynamicInput=defineAsyncComponent(()=>import(`./options/dynamic-input.min.js?ver=${pluginVersion}`)),UIbuilderIconSelect=defineAsyncComponent(()=>import(`./options/icon-select.min.js?ver=${pluginVersion}`)),UIbuilderInlineIconSelect=defineAsyncComponent(()=>import(`./options/inline-icon-select.min.js?ver=${pluginVersion}`)),UIbuilderChoiceSelect=defineAsyncComponent(()=>import(`./options/choice-select.min.js?ver=${pluginVersion}`)),UIbuilderDefaultSelect=defineAsyncComponent(()=>import(`./options/default-select.min.js?ver=${pluginVersion}`)),UIbuilderLinkSelect=defineAsyncComponent(()=>import(`./options/link-select.min.js?ver=${pluginVersion}`)),UIbuilderTabBuilder=defineAsyncComponent(()=>import(`./options/tab-builder.min.js?ver=${pluginVersion}`)),UIbuilderHiddenToolbarItems=defineAsyncComponent(()=>import(`./options/hidden-toolbar-items-select.min.js?ver=${pluginVersion}`)),UIbuilderEditToolbarItems=defineAsyncComponent(()=>import(`./options/edit-toolbar-items.min.js?ver=${pluginVersion}`)),MultiSelectOption=defineAsyncComponent(()=>import(`./options/multi-select.min.js?ver=${pluginVersion}`)),UIbuilderCodeEditor=defineAsyncComponent(()=>import(`./options/code-editor.min.js?ver=${pluginVersion}`)),UIbuilderSubmitAction=defineAsyncComponent(()=>import(`./options/submit-action.min.js?ver=${pluginVersion}`)),UIbuilderSelectOptionBuilder=defineAsyncComponent(()=>import(`./options/select-option-builder.min.js?ver=${pluginVersion}`)),UIbuilderArrayList=defineAsyncComponent(()=>import(`./options/array-list.min.js?ver=${pluginVersion}`)),UIbuilderSelectPostTypes=defineAsyncComponent(()=>import(`./options/select-post-types.min.js?ver=${pluginVersion}`)),UIbuilderEffects=defineAsyncComponent(()=>import(`./options/effects.min.js?ver=${pluginVersion}`));app.component("background-position",UIbuilderBackgroundPosition),app.component("switch-select",UIbuilderSwitch),app.component("value-units",UIbuilderValueUnits),app.component("units-select",UIbuilderUnits),app.component("color-select",UIbuilderColorSelect),app.component("toggle-switch",SwitchToggle),app.component("uip-input",UIbuilderInput),app.component("uip-textarea",UIbuilderTextarea),app.component("post-types",UIbuilderPostTypes),app.component("uip-number",UIbuilderNumber),app.component("uip-paragraph-input",UIbuilderParagraphInput),app.component("uip-dynamic-input",UIbuilderDynamicInput),app.component("icon-select",UIbuilderIconSelect),app.component("inline-icon-select",UIbuilderInlineIconSelect),app.component("choice-select",UIbuilderChoiceSelect),app.component("default-select",UIbuilderDefaultSelect),app.component("hiden-toolbar-items-select",UIbuilderHiddenToolbarItems),app.component("edit-toolbar-items",UIbuilderEditToolbarItems),app.component("multi-select-option",MultiSelectOption),app.component("code-editor",UIbuilderCodeEditor),app.component("submit-actions",UIbuilderSubmitAction),app.component("link-select",UIbuilderLinkSelect),app.component("tab-builder",UIbuilderTabBuilder),app.component("select-option-builder",UIbuilderSelectOptionBuilder),app.component("array-list",UIbuilderArrayList),app.component("uip-select-post-types",UIbuilderSelectPostTypes),app.component("inline-image-select",UIbuilderInlineImageSelect),app.component("uip-effects",UIbuilderEffects),app.component("uip-draggable",VueDraggableNext);import{ensureNestedObject,hasNestedPath,prepareJSON,deepClone,copyToClipboard,isObject,isUnDefined,get_block_option,createUID,sendServerRequest,updateAppPage,saveUserPreference,updateActiveLink,uipParseJson}from"./v3.5/utility/functions.min.js?ver=3.3.1";app.config.globalProperties.ensureNestedObject=ensureNestedObject,app.config.globalProperties.hasNestedPath=hasNestedPath,app.config.globalProperties.prepareJSON=prepareJSON,app.config.globalProperties.deepClone=deepClone,app.config.globalProperties.copyToClipboard=copyToClipboard,app.config.globalProperties.isObject=isObject,app.config.globalProperties.isUnDefined=isUnDefined,app.config.globalProperties.get_block_option=get_block_option,app.config.globalProperties.createUID=createUID,app.config.globalProperties.uipParseJson=uipParseJson,app.config.globalProperties.sendServerRequest=sendServerRequest,app.config.globalProperties.updateAppPage=updateAppPage.bind({adminURL:uip_ajax.uipAppData.options.adminURL,isBuilder:!0}),app.config.globalProperties.updateActiveLink=updateActiveLink.bind({adminURL:uip_ajax.uipAppData.options.adminURL,isBuilder:!0}),app.config.globalProperties.saveUserPreference=saveUserPreference;const plugindata={defineAsyncComponent:defineAsyncComponent,liteVersion:pluginVersion,reactive:reactive};window.uipress=isObject(window.uipress)?{...window.uipress,...plugindata}:plugindata;const menuScript=document.querySelector("#uip-admin-menu"),uipMasterMenu=menuScript?uipParseJson(menuScript.getAttribute("data-menu")):{menu:[]},toolbarScript=document.querySelector("#uip-admin-toolbar"),uipMasterToolbar=toolbarScript?uipParseJson(toolbarScript.getAttribute("data-toolbar")):[];let RTL=document.documentElement.getAttribute("dir");RTL="rtl"===RTL,app.config.globalProperties.uipApp=reactive({scrolling:!1,litePath:uip_ajax.uipAppData.options.pluginURL,isRTL:RTL,data:{plugins:AllPlugins,blockGroups:AllBlockGroups,blocks:AllBlocks,options:uip_ajax.uipAppData.options,userPrefs:isObject(uip_ajax.uipAppData.userPrefs)?uip_ajax.uipAppData.userPrefs:{},adminMenu:uipMasterMenu,toolbar:uipMasterToolbar,globalGroupOptions:SiteSettingsGroups,dynamicOptions:AllDynamics,themeStyles:AllThemeStyles,templateGroupOptions:TemplateGroupOptions,templateDarkMode:!1,darkMode:!1,enviroment:"builder"}});const injectAppBlocks=e=>{for(const i of e){if(!("path"in i))continue;const e=i.moduleName,o=defineAsyncComponent(()=>new Promise(async(e,o)=>{const n=await import(`${i.path}?ver=${pluginVersion}`);e("moduleData"in n?n.moduleData():n)}));app.component(e,o)}},injectAppPlugins=e=>{for(const i of e){if(!("path"in i))continue;const e=i.component,o=defineAsyncComponent(()=>new Promise(async(e,o)=>{const n=await import(`${i.path}?ver=${pluginVersion}`);e("moduleData"in n?n.moduleData():n)}));app.component(e,o)}},mountApp=async()=>{await injectAppBlocks(AllBlocks),await injectAppPlugins(AllPlugins),app.mount("#uip-ui-builder")};mountApp();