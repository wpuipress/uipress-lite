const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm-dev.js";const BlockStyleHandler={emits:["update"],inject:["uipress"],components:{flexLayout:defineAsyncComponent(()=>import("../options/flex-layout.min.js?ver=3.2.12")),contextmenu:defineAsyncComponent(()=>import("../v3.5/utility/contextmenu.min.js?ver=3.2.12")),Dimensions:defineAsyncComponent(()=>import("../options/dimensions.min.js?ver=3.2.12")),Styles:defineAsyncComponent(()=>import("../options/styles.min.js?ver=3.2.12")),Spacing:defineAsyncComponent(()=>import("../options/spacing.min.js?ver=3.2.12")),TextFormat:defineAsyncComponent(()=>import("../options/text-format.min.js?ver=3.2.12")),PositionDesigner:defineAsyncComponent(()=>import("../options/position-designer.min.js?ver=3.2.12")),EffectsDesigner:defineAsyncComponent(()=>import("../options/effects.min.js?ver=3.2.12"))},props:{styleSettings:Object,component:String,title:String,startOpen:Boolean,styleName:String},data:()=>({blockStyle:{},open:!1,activeState:"default",colorTheme:"light",loading:!1,strings:{toggleColour:__("Toggle dark / light mode","uipress-lite"),resetSection:__("Reset section","uipress-lite")},pseudoSelectors:[{value:"default",label:__("Default","uipress-lite")},{value:":active",label:__(":active","uipress-lite")},{value:":focus",label:__(":focus","uipress-lite")},{value:":hover",label:__(":hover","uipress-lite")},{value:":visited",label:__(":visited","uipress-lite")},{value:"::before",label:__("::before","uipress-lite")},{value:"::after",label:__("::after","uipress-lite")},{value:":menu-collapsed",label:__("Menu collapsed","uipress-lite")},{value:"tablet",label:__("Tablet","uipress-lite")},{value:"mobile",label:__("Mobile","uipress-lite")}]}),watch:{styleSettings:{handler(){this.injectPropValue()},deep:!0,immediate:!0}},computed:{returnVisibilityIcon(){return this.open?"expand_more":this.open?void 0:"chevron_left"},returnCurrentBlockStyle(){let e;switch(this.activeState){case"default":e="light"==this.colorTheme?this.blockStyle.value:this.blockStyle.darkValue;break;default:const t=this.activeState,i=this.colorTheme;this.ensureNestedObject(this.blockStyle,"pseudo",i,t),e=this.blockStyle.pseudo[i][t]}return e||(e={}),e},returnActiveState(){const e=this.pseudoSelectors.findIndex(e=>e.value==this.activeState);return this.pseudoSelectors[e].label},returnThemeIcon(){return"light"==this.colorTheme?"light_mode":"dark_mode"}},mounted(){this.startOpen&&(this.open=!0)},methods:{injectPropValue(){if(!this.uipress.isObject(this.styleSettings))return this.blockStyle={};this.blockStyle=this.styleSettings},ensureNestedObject(e,...t){t.reduce((e,t,i,s)=>(e[t]||(e[t]={}),e[t]),e)},hasNestedPath(e,...t){for(let i of t){if(!e.hasOwnProperty(i))return!1;e=e[i]}return e},toggleVisibility(){this.open=!this.open},handleStyleUpdate(e){switch(this.blockStyle.settingName||(this.blockStyle.settingName=this.styleName),this.activeState){case"default":const t="light"==this.colorTheme?"value":"darkValue";this.blockStyle[t]=e,this.break;default:const i=this.activeState,s=this.colorTheme;this.ensureNestedObject(this.blockStyle,"pseudo",s,i),this.blockStyle.pseudo[s][i]=e}},itemHasPseudo(e){const t=this.colorTheme;let i=this.hasNestedPath(this.blockStyle,"pseudo",t,e);return!!i&&0!==Object.keys(i).length},toggleColorMode(){const e="light"==this.colorTheme?"dark":"light";this.colorTheme=e},clearPseudo(e){this.hasNestedPath(this.blockStyle,"pseudo","light",e)&&delete this.blockStyle.pseudo.light[e],this.hasNestedPath(this.blockStyle,"pseudo","dark",e)&&delete this.blockStyle.pseudo.dark[e]},resetStyleSection(){delete this.blockStyle.value,delete this.blockStyle.darkValue,delete this.blockStyle.pseudo,this.$refs.styleoptions.close()}},template:'\n  \n    <div class="uip-flex uip-flex-column uip-row-gap-s">\n    \n      \x3c!-- Title --\x3e\n      <div class="uip-flex uip-gap-s uip-flex-center uip-flex-between" @contextmenu.prevent.stop="$refs.styleoptions.show($event)">\n        \n       \n        <div class="uip-flex uip-gap-xxs uip-flex-center uip-cursor-pointer uip-flex-between"\n        :class="{\'uip-flex-grow\' : !open}"\n        @click="toggleVisibility()">\n          \n          \n          <span class="uip-text-bold uip-text-emphasis">{{ title }}</span> \n          \n          <a class="uip-link-muted uip-icon">{{ returnVisibilityIcon }}</a>\n          \n          \n        </div>\n        \n        \n        <div @click.prevent.stop="$refs.blockstates.show($event)" \n        class="uip-flex uip-gap-xs uip-fade-in" v-if="open">\n        \n          <span @click.prevent.stop="toggleColorMode" :title="strings.toggleColour"\n          class="uip-link-default hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs uip-padding-top-xxxs uip-padding-bottom-xxxs">\n            {{returnThemeIcon}}\n          </span>\n        \n          <div @click.prevent.stop="$refs.blockstates.show($event)" \n          class="uip-text-xs uip-padding-xxxs uip-padding-left-xs uip-padding-right-xxs uip-border-rounder uip-background-muted uip-link-default uip-flex uip-gap-xxs uip-flex-center">\n            <span>{{returnActiveState}}</span>\n            <a class="uip-link-muted uip-icon">expand_more</a>\n          </div>\n        \n        </div>\n      \n      </div>\n      \n      <div v-if="open" class="uip-padding-left-s">\n        <component :is="component" :value="returnCurrentBlockStyle" @update="handleStyleUpdate"/>\n      </div>\n      \n      \n      <contextmenu ref="blockstates">\n      \n        <div class="uip-padding-xs uip-flex uip-flex-column uip-text-weight-normal uip-text-s">\n        \n          <template v-for="item in pseudoSelectors">\n          \n            <a @click="activeState = item.value; $refs.blockstates.close()"\n            :class="activeState == item.value ? \'uip-background-muted uip-text-emphasis\' : \'hover:uip-background-muted\'"\n            class="uip-link-default uip-padding-xxs uip-border-rounder uip-text-s uip-no-wrap uip-flex uip-flex-center uip-flex-between uip-gap-s">\n              \n              \n              <span>{{ item.label }}</span>\n              \n              \n              <a v-if="itemHasPseudo(item.value)" \n              @click.prevent.stop="clearPseudo(item.value)" class="uip-link-muted uip-icon uip-link-muted">close</a>\n            \n            </a>\n            \n          </template>\n        \n        </div>\n      \n      </contextmenu>\n      \n      \n      <contextmenu ref="styleoptions">\n      \n        <div class="uip-padding-xs uip-flex uip-flex-column uip-text-weight-normal uip-text-s">\n        \n          <a @click="resetStyleSection"\n          class="hover:uip-background-muted uip-link-danger uip-padding-xxs uip-border-rounder uip-text-s uip-no-wrap uip-flex uip-flex-center uip-flex-between uip-gap-s">\n          \n            <span>{{ strings.resetSection }}</span>\n            \n            <span class="uip-icon">delete</span>\n          \n          </a>\n        \n        </div>\n      \n      </contextmenu>\n    \n    </div>\n  \n  '};export default{inject:["uipData","uipress","uiTemplate"],components:{QueryBuilder:defineAsyncComponent(()=>import("../options/query-builder.min.js?ver=3.2.12")),responsiveControls:defineAsyncComponent(()=>import("../options/responsive.min.js?ver=3.2.12")),BlockStyleHandler:BlockStyleHandler},data(){return{block:{},uid:this.$route.params.uid,mode:"light",section:"style",missing:!0,groups:[],loading:!0,options:{},activeTab:!1,buildingSettings:!1,switchingComponent:!1,componenetSettings:{},block_preset_styles:{},activeSelector:"style",newPresetName:"",firstLoad:!1,showSettings:!1,strings:{missingMessage:__("This block no longer exists","uipress-lite"),goBack:__("Go back","uipress-lite"),blockID:__("Block ID","uipress-lite"),proOption:__("This is a pro option. Upgrade to unlock","uipress-lite"),theme:__("Theme","uipress-lite"),options:__("Options","uipress-lite"),buildingSettings:__("Building settings object...","uipress-lite"),blockUniqueID:__("Block unique id. If you change this it must remain unique and can not be blank","uipress-lite"),hiddenOnDevice:__("Hidden on device","uipress-lite"),tooltip:__("Tooltip","uipress-lite"),tooltipMessage:__("Message","uipress-lite"),delay:__("Delay (ms)","uipress-lite"),styles:__("Styles","uipress-lite"),blockSettings:__("Block options","uipress-lite"),currentlyEditing:__("Currently editing","uipress-lite"),blockPart:__("Block part","uipress-lite"),blockRoot:__("root","uipress-lite"),options:__("Options","uipress-lite"),pseudoClasses:__("Element states","uipress-lite"),editingLightMode:__("Editing for light mode"),editingDarkMode:__("Editing for dark mode"),pseudoContent:__("Pseudo content","uipress-lite"),beforeContent:__("::before","uipress-lite"),afterContent:__("::after","uipress-lite"),queryLoop:__("Query loop","uipress-lite"),query:__("Query","uipress-lite"),stylePresets:__("Style presets","uipress-lite"),usePreset:__("Use preset","uipress-lite"),none:__("None","uipress-lite"),newPreset:__("New preset","uipress-lite"),createNewPreset:__("Create preset","uipress-lite"),name:__("Name","uipress-lite"),presetActive:__("You are currently editing a style preset. Changes made here will apply to all blocks using the same preset."),link:__("Link","uipress-lite"),menuCollapsed:__("Menu collapsed","uipress-lite"),tablet:__("Tablet","uipress-lite"),mobile:__("Mobile","uipress-lite"),clearState:__("Clear state","uipress-lite"),discontinued:__("This block has now been discontinued. We recommend replacing it with the new menu block from the blocks list.","uipress-lite"),general:__("General","uipress-lite"),layout:__("Layout","uipress-lite"),size:__("Size","uipress-lite"),style:__("Style","uipress-lite"),spacing:__("Spacing","uipress-lite"),text:__("Text","uipress-lite"),position:__("Position","uipress-lite"),effects:__("Effects","uipress-lite")},pseudoSelectors:[{value:":active",label:__(":active","uipress-lite")},{value:":focus",label:__(":focus","uipress-lite")},{value:":hover",label:__(":hover","uipress-lite")},{value:":visited",label:__(":visited","uipress-lite")},{value:"::before",label:__("::before","uipress-lite")},{value:"::after",label:__("::after","uipress-lite")},{value:":menu-collapsed",label:__("Menu collapsed","uipress-lite")},{value:"tablet",label:__("Tablet","uipress-lite")},{value:"mobile",label:__("Mobile","uipress-lite")}],enabledDisabled:{false:{value:!1,label:__("Disabled","uipress-lite")},true:{value:!0,label:__("Enabled","uipress-lite")}},optionsSections:{settings:{value:"settings",label:__("Settings","uipress-lite")},style:{value:"style",label:__("Style","uipress-lite")},advanced:{value:"advanced",label:__("Advanced","uipress-lite")}}}},watch:{"block.uid":{handler(e,t){""==e&&(this.block.uid=this.uipress.createUID())},deep:!0},block_preset_styles:{handler(e,t){this.uipress.uipAppData.options.block_preset_styles=this.block_preset_styles},deep:!0}},created(){this.uipApp.blockSettings=this},computed:{returnBlockQuerySettings(){return this.block.query||(this.block.query={settings:{}}),this.block.query.settings},returnBlock(){return this.block},returnSettings(){return this.componenetSettings},returnBlockPartsCount(){let e=Object.keys(this.returnSettings);const t=e.indexOf("advanced"),i=e.indexOf("style"),s=e.indexOf("block");return t>=0&&e.splice(t,1),i>=0&&e.splice(i,1),s>=0&&e.splice(s,1),e.length},returnCompSettings(){let e=this.uipress.checkNestedValue(this.componenetSettings[this.returnActiveComp],["preset"]);return e&&e in this.block_preset_styles?this.block_preset_styles[e].preset:this.componenetSettings[this.returnActiveComp]},ifUsingPreset(){let e=this.uipress.checkNestedValue(this.componenetSettings[this.returnActiveComp],["preset"]);return!!(e&&e in this.block_preset_styles)},ifBlockExists(){return!JSON.stringify(this.uiTemplate.content).includes(this.uid)},returnBlock(){return this.block},returnActiveComp(){return this.activeSelector},returnPresetLoading(){return this.uipress.checkNestedValue(this.componenetSettings[this.returnActiveComp],["preset","loading"])}},methods:{async show(e,t){this.block=e,await nextTick(),this.showSettings=!0,this.loading=!1},close(){this.showSettings=!1,this.block=null},passSettingsToBlock(){let e=this;if(!e.uipress.isObject(e.componenetSettings))return;let t=JSON.parse(JSON.stringify(e.componenetSettings));const i={};for(let s in t){let n=t[s];if(i[s]={},i[s].options={},"styleType"in n&&(i[s].styleType=n.styleType),"class"in n&&(i[s].class=n.class),"afterContent"in n&&(i[s].afterContent=n.afterContent),"beforeContent"in n&&(i[s].beforeContent=n.beforeContent),"preset"in n&&(i[s].preset=n.preset),"options"in n)for(let t in n.options)if("value"in n.options[t]||"darkValue"in n.options[t]||"pseudo"in n.options[t]){let o,l,r,p,u;"value"in n.options[t]&&(o=n.options[t].value),"darkValue"in n.options[t]&&(l=n.options[t].darkValue),"pseudo"in n.options[t]&&(r=n.options[t].pseudo),void 0!==o&&(p=e.uipress.isObject(o)?this.clear_empty_values_from_object(o):o),void 0!==l&&(u=e.uipress.isObject(o)?this.clear_empty_values_from_object(l):l),e.uipress.isObject(r)&&(r=this.clear_empty_values_from_object(r)),void 0===p&&void 0===u&&void 0===r||(i[s].options[t]={},i[s].options[t].settingName=n.options[t].settingName,void 0!==p&&(i[s].options[t].value=p),void 0!==u&&(i[s].options[t].darkValue=u),void 0!==r&&(i[s].options[t].pseudo=r))}}e.uipress.isObject(i)&&(e.block.settings=i)},clear_empty_values_from_object(e){let t=this;for(let i in e){let s=e[i];void 0===s&&delete e[i],""==s&&!1!==s&&0!==s&&"0"!==s&&delete e[i],t.uipress.isObject(s)&&(0===Object.keys(s).length?delete e[i]:(s=t.clear_empty_values_from_object(s),0===Object.keys(e[i]).length&&delete e[i]))}return e},async build_block_settings(e){let t=this,i=e.moduleName,s=this.uipData.blocks,n=e.settings,o=s.filter(e=>e.moduleName===i);if(o.length<1)return t.missing=!0,t.loading=!1,t.buildingSettings=!1,t.strings.missingMessage=__("This block has no settings","uipress-lite"),!1;if(void 0===o[0].optionsEnabled)return t.missing=!0,t.loading=!1,t.buildingSettings=!1,t.strings.missingMessage=__("This is a pro block. Upgrade to unlock","uipress-lite"),!1;let l=JSON.parse(JSON.stringify(o[0].optionsEnabled));JSON.parse(JSON.stringify(t.componenetSettings));for(var r=0;r<l.length;r++){let i=l[r],s=i.name,o={};s in n&&(o=n[s]),0===Object.keys(o).length&&(t.uipress.format_block_presets(i.options,e.settings,i),s in e.settings&&(o=e.settings[s])),t.uipress.format_block_option(i,o,t.componenetSettings)}return!0},componentExists(e){return!!this.$root._.appContext.components[e]},checkIfEmpty(e){let t=e.options;if("dark"!=this.mode)return!0;for(const[e,i]of Object.entries(t))if("dark"in t[e]&&t[e].dark)return!0;return!1},pushActiveSection(e){this.$router.push({query:{...this.$route.query,section:e}})},returnActivePart(){return"style"==this.activeSelector?this.block.name:this.returnSettings[this.activeSelector].label},setSubComponent(e){let t=this;t.activeSelector=e,t.switchingComponent=!0,setTimeout(function(){t.switchingComponent=!1},250)},returnLightModeSetting:e=>e&&void 0!==e?e:"light",formatPseudoValue(e){let t=this.uipress.checkNestedValue(e,["pseudo",this.returnOptionTheme(e),e.activePseudo]);return t||(this.uipress.createNestedObject(e,["pseudo",this.returnOptionTheme(e),e.activePseudo]),{})},returnOptionTheme(e){let t="light";return"dark"==e.themeMode&&(t="dark"),t},switchOptionTheme(e){e.loading=!0,"dark"==e.themeMode?e.themeMode="light":e.themeMode="dark",setTimeout(function(){e.loading=!1},250)},hasPseudo(){let e=JSON.stringify(this.componenetSettings[this.returnActiveComp]);if(void 0!==e)return!(!e.includes(":before")&&!e.includes(":after"))||void 0},switchPseudo(e,t){e.loading=!0,e.activePseudo=t,setTimeout(function(){e.loading=!1},250)},returnQueryVal(){return"query"in this.block?this.block.query.enabled:(this.block.query={enabled:!1,settings:{}},this.block.query.enabled)},createNewPreset(){if(""==this.newPresetName)return void this.uipress.notify(__("Preset name is required","uipress-lite"),"","error",!0);let e=this.uipress.createUID();this.block_preset_styles[e]={preset:this.componenetSettings[this.returnActiveComp],name:this.newPresetName},this.newPresetName="",this.saveStylePresets()},saveStylePresets(){let e=JSON.stringify(this.block_preset_styles,(e,t)=>"true"===t?"uiptrue":!0===t?"uiptrue":"false"===t?"uipfalse":!1===t?"uipfalse":""===t?"uipblank":t),t=new FormData;t.append("action","uip_save_site_option"),t.append("security",uip_ajax.security),t.append("option",e),t.append("optionName","block_preset_styles"),this.uipress.callServer(uip_ajax.ajax_url,t).then(e=>{e.success&&this.uipress.notify(__("Presets updated","uipress-lite"),"","success",!0)})},forceLoad(){let e=this;for(const t in e.returnCompSettings.options)e.returnCompSettings.options[t].loading=!0;setTimeout(function(){for(const t in e.returnCompSettings.options)e.returnCompSettings.options[t].loading=!1},250)},returnPresetName(){return this.componenetSettings[this.returnActiveComp].preset in this.block_preset_styles?this.block_preset_styles[this.componenetSettings[this.returnActiveComp].preset].name:__("Preset missing","uipress-lite")},updatePresetValue(e){this.componenetSettings[this.returnActiveComp].preset=e,this.forceLoad()},deleteStylePreset(e){let t=this;t.uipress.confirm(__("Are yous sure?","uipress-lite"),__("Are you sure you want to delete this style preset?","uipress-lite")).then(i=>{i&&e in this.block_preset_styles&&(delete t.block_preset_styles[e],t.saveStylePresets())})},optionFullWidth(e){return!!this.uipress.checkNestedValue(e,["args","fullWidth"])},clearStyles(){for(let e in this.componenetSettings[this.returnActiveComp].options)"value"in this.componenetSettings[this.returnActiveComp].options[e]&&(this.componenetSettings[this.returnActiveComp].options[e].loading=!0,delete this.componenetSettings[this.returnActiveComp].options[e].value),"pseudo"in this.componenetSettings[this.returnActiveComp].options[e]&&(this.componenetSettings[this.returnActiveComp].options[e].loading=!0,delete this.componenetSettings[this.returnActiveComp].options[e].pseudo);requestAnimationFrame(()=>{for(let e in this.componenetSettings[this.returnActiveComp].options)this.componenetSettings[this.returnActiveComp].options[e].loading=!1})},hasPseudoSpecific:(e,t)=>"pseudo"in t&&("light"in t.pseudo&&(e in t.pseudo.light&&0!==Object.keys(t.pseudo.light[e]).length)),clearPseudoState(e,t){delete t.pseudo.light[e]},handleActiveTabChange(e){this.section=e;const t={query:{...this.$route.query,section:section}};this.$router.push(t)},updateBlockStyle(e,t){},returnBlockStylePart(e){return this.block.settings||(this.block.settings={}),this.block.settings.style||(this.block.settings.style={}),this.block.settings.style.options||(this.block.settings.style.options={}),this.block.settings.style.options[e]||(this.block.settings.style.options[e]={}),this.block.settings.style.options[e]}},template:'\n    \n    \n    \n    <div v-if="showSettings" id="uip-block-settings"\n    class="uip-position-fixed uip-top-80 uip-right-16 uip-bottom-16 uip-background-default uip-w-320 uip-flex uip-flex-column uip-row-gap-s uip-overflow-auto uip-fade-in uip-shadow" style="border-radius: calc(var(--uip-border-radius-large) + var(--uip-padding-xs)); z-index: 2;">\n    \n        \n        <div class="uip-flex uip-flex-column uip-gap-m uip-padding-s">\n          \n          \x3c!-- Block settings header --\x3e\n          <div class="uip-flex uip-flex-between uip-flex-center">\n          \n            <div class="uip-flex uip-flex-column">\n              <input class="uip-text-bold uip-blank-input uip-text-l uip-text-emphasis" v-model="block.name">\n            </div>\n            \n            <a class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs" @click="close()">close</a>\n            \n          </div>\n          \x3c!-- End block settings header --\x3e\n          \n          \n          \x3c!-- Toggle active tab --\x3e\n          <toggle-switch :options="optionsSections" :activeValue="section" :returnValue="handleActiveTabChange"/>\n          \n          \x3c!-- Styles tab --\x3e\n          <template v-if="section == \'style\'">\n          \n            <div class="uip-flex uip-flex-column uip-gap-s">\n          \n              \x3c!-- Layout --\x3e\n              <BlockStyleHandler \n              v-if="block.content"\n              :startOpen="true"\n              :styleSettings="returnBlockStylePart(\'flexLayout\')" component="flexLayout" \n              styleName="flexLayout"\n              :title="strings.layout" @update="(emittedValue) => updateBlockStyle(\'flexLayout\', emittedValue)"/>\n              \n              <div v-if="block.content" class="uip-border-top"></div>\n              \n              \x3c!-- Dimensions --\x3e\n              <BlockStyleHandler \n              :startOpen="true"\n              styleName="dimensions"\n              :styleSettings="returnBlockStylePart(\'dimensions\')" component="Dimensions" \n              :title="strings.size" @update="(emittedValue) => updateBlockStyle(\'dimensions\', emittedValue)"/>\n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Styles --\x3e\n              <BlockStyleHandler \n              :startOpen="true"\n              styleName="styles"\n              :styleSettings="returnBlockStylePart(\'styles\')" component="Styles" \n              :title="strings.style" @update="(emittedValue) => updateBlockStyle(\'styles\', emittedValue)"/>\n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Spacing --\x3e\n              <BlockStyleHandler \n              :startOpen="true"\n              styleName="spacing"\n              :styleSettings="returnBlockStylePart(\'spacing\')" component="Spacing" \n              :title="strings.spacing" @update="(emittedValue) => updateBlockStyle(\'spacing\', emittedValue)"/>\n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Text --\x3e\n              <BlockStyleHandler \n              styleName="textFormat"\n              :styleSettings="returnBlockStylePart(\'textFormat\')" component="TextFormat" \n              :title="strings.text" @update="(emittedValue) => updateBlockStyle(\'textFormat\', emittedValue)"/>\n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Position --\x3e\n              <BlockStyleHandler \n              styleName="positionDesigner"\n              :styleSettings="returnBlockStylePart(\'positionDesigner\')" component="PositionDesigner" \n              :title="strings.position" @update="(emittedValue) => updateBlockStyle(\'positionDesigner\', emittedValue)"/>\n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Effects --\x3e\n              <BlockStyleHandler \n              styleName="effectsDesigner"\n              :styleSettings="returnBlockStylePart(\'effectsDesigner\')" component="EffectsDesigner" \n              :title="strings.effects" @update="(emittedValue) => updateBlockStyle(\'effectsDesigner\', emittedValue)"/>\n              \n            </div>  \n              \n              \n          </template>\n        \n        \n        </div>\n        \n        \n    </div>\n        \n        '};