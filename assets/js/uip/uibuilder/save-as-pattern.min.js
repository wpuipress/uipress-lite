const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";export default{components:{Modal:defineAsyncComponent(()=>import("../v3.5/utility/modal.min.js?ver=3.3.1"))},data(){return{modelOpen:!1,dropWidth:0,position:this.dropPos,saving:!1,theBlock:null,strings:{saveAsPattern:__("Save as pattern","uipress-lite"),patternTitle:__("Title","uipress-lite"),patternType:__("Type","uipress-lite"),patternDescription:__("Patterns can be either single components or entire layoutsd and are a great way of creating reusable blocks for your projects."),savePattern:__("Save pattern","uipress-lite"),description:__("Description","uipress-lite"),patternIcon:__("Icon","uipress-lite"),cancel:__("Cancel","uipress-lite")},newPattern:{name:"",description:"",type:"block",icon:{value:"interests"}},patternTypes:[{name:"layout",label:__("Layout","uipress-lite")},{name:"block",label:__("Block","uipress-lite")}]}},inject:["uiTemplate"],methods:{show(e){this.theBlock={},this.theBlock=e,this.$refs.saveaspattern.open()},async savePattern(){if(this.saving=!0,!this.newPattern.name||""==this.newPattern.name)return this.uipApp.notifications.notify(__("Pattern not saved","uipress-lite"),__("Pattern title is required","uipress-lite"),"warning",!0),void(this.saving=!1);this.savePatternToDb(this.theBlock)},async savePatternToDb(e){e.uid;let t=JSON.stringify(e,(e,t)=>"true"===t?"uiptrue":!0===t?"uiptrue":"false"===t?"uipfalse":!1===t?"uipfalse":""===t?"uipblank":t),n=new FormData;n.append("action","uip_save_ui_pattern"),n.append("security",uip_ajax.security),n.append("pattern",t),n.append("name",this.newPattern.name),n.append("type",this.newPattern.type),n.append("description",this.newPattern.description),n.append("icon",this.newPattern.icon.value);const i=await this.sendServerRequest(uip_ajax.ajax_url,n);if(i.error)return this.uipApp.notifications.notify(i.message,"uipress-lite","","error",!0),void(this.saving=!1);i.success||returnData(),this.uipApp.notifications.notify(__("Pattern saved","uipress-lite"),"","success",!0),this.saving=!1,this.uiTemplate.patterns=i.patterns;const s=i.patternid;e.patternID=s}},template:'\n  \n  <Modal ref="saveaspattern">\n  \n      <div  class="uip-flex uip-flex-column uip-row-gap-m uip-w-420 uip-padding-m">\n      \n            \x3c!-- title --\x3e\n            <div class="uip-flex uip-flex-between uip-flex-center">\n              <div class="uip-text-bold uip-text-emphasis">{{strings.saveAsPattern}}</div>\n              <div class="uip-icon uip-link-muted uip-padding-xxs uip-border-round hover:uip-background-muted" @click="$refs.saveaspattern.close()">close</div>\n            </div>\n      \n      \n            <div class="uip-grid-col-1-3 uip-padding-left-s">\n          \n            \n              <div class="uip-text-s uip-text-muted">{{strings.patternTitle}}</div>\n              <input class="uip-input" type="text" v-model="newPattern.name">\n            \n              <div class="uip-text-s uip-text-muted">{{strings.patternIcon}}</div>\n              <icon-select :value="newPattern.icon" :returnData="function(data) {newPattern.icon = data}"/>\n              \n              <div class="uip-text-s uip-text-muted">{{strings.patternType}}</div>\n              <select class="uip-input" v-model="newPattern.type">\n                <template v-for="option in patternTypes">\n                  <option :value="option.name">{{option.label}}</option>\n                </template>\n              </select>\n            \n              <div class="uip-text-s uip-text-muted">{{strings.description}}</div>\n              <textarea class="uip-input" rows="4" v-model="newPattern.description"></textarea>\n            \n            </div>\n            \n            <div class="uip-flex uip-flex-between uip-flex-center uip-gap-s">\n            \n              <button class="uip-button-default uip-flex-grow" @click="$refs.saveaspattern.close()">{{strings.cancel}}</button>\n            \n              <uip-save-button class="uip-flex-grow" :saving="saving" :buttonText="strings.savePattern" :saveFunction="savePattern"/>\n            \n            </div>\n          \n\t  </div>\n        \n  </Modal>'};