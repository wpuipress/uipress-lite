const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{args:Object,triggerClass:String},data:function(){return{modelOpen:!0,themeLoading:!1,themes:[],saving:!1,finished:!1,validDrop:!1,strings:{globalImport:__("Global import"),settingsExplanation:__("If you have global exported uiPress on another site then drag and select the .json file below to import.","uipress-lite")}}},inject:["uipress","uipData","uiTemplate","router"],watch:{currentStep:{handler(e,i){2==e&&this.fetchThemes()}}},mounted:function(){},computed:{isDisabledButton(){if(!(this.exportOptions.templates||this.exportOptions.siteSettings||this.exportOptions.themeStyles||this.exportOptions.adminMenus))return!0}},methods:{closeThisComponent(){document.documentElement.removeEventListener("click",this.onClickOutside,!1),this.router.push("/")},importEverything(e,i){let t=this;t.validDrop=!1;let r,n=t.uipress.notify(__("Importing uiPress content","uipress-lite"),"","default",!1,!0);if(i)r=e.dataTransfer.files[0];else{r=event.target.files[0]}if("application/json"!=r.type)return t.uipress.notify(__("Global exports must be in valid JSON format","uipress-lite"),"","error",!0,!1),void t.uipress.destroy_notification(n);let o=new FileReader;o.readAsText(r,"UTF-8"),o.onload=function(e){let i,r=e.target.result;try{i=JSON.parse(r)}catch(e){return t.uipress.notify(e,"","error",!0,!1),void t.uipress.destroy_notification(n)}if(!i)return t.uipress.notify(__("JSON parse failed","uipress-lite"),"","error",!0,!1),void t.uipress.destroy_notification(n);if(!Array.isArray(i)&&!t.uipress.isObject(i))return t.uipress.notify("Export is not valid","","error",!0,!1),void t.uipress.destroy_notification(n);let o=!1;if(!("uipGlobalExport"in i))return t.uipress.notify(__("Template mismatch","uipress-lite"),"","error",!0,!1),void t.uipress.destroy_notification(n);o=i.uipGlobalExport,t.sendImportToServer(o,n)}},sendImportToServer(e,i){let t=this,r=new FormData;r.append("action","uip_global_import"),r.append("security",uip_ajax.security),r.append("content",JSON.stringify(e)),t.uipress.callServer(uip_ajax.ajax_url,r).then(e=>{e.error?t.uipress.notify(e.message,"","error",!0):(t.uipress.notify(__("Content imported succesfully","uipress-lite"),"","success"),t.uipress.destroy_notification(i),t.router.push("/"),setTimeout(function(){location.reload()},600))})}},template:'\n    \n    \n      <div class="uip-position-fixed uip-top-0 uip-left-0 uip-h-viewport uip-w-vw uip-background-black-wash uip-flex uip-flex-center uip-flex-middle uip-fade-in uip-text-normal uip-z-index-1" tabindex="1">\n        <div ref="uipmodal" class="uip-background-default uip-border-rounder uip-border uip-flex uip-flex-column uip-row-gap-s uip-scale-in uip-w-400 uip-z-index-1 uip-transition-all uip-padding-s">\n          \n          \n          \x3c!-- title --\x3e\n          <div class="uip-flex uip-flex-between uip-flex-center">\n            <div class="uip-text-bold">{{strings.globalImport}}</div>\n            <div class="uip-icon uip-link-muted uip-padding-xxs uip-border-round hover:uip-background-muted" @click="closeThisComponent()">close</div>\n          </div>\n          \x3c!-- end title --\x3e\n          \n          <div class="uip-border-top"></div>\n          \n          <div class="uip-text-muted">{{strings.settingsExplanation}}</div>\n          \n          \n          <label @drop.prevent="importEverything($event, true)"\n          @dragenter.prevent="validDrop = true"\n          @dragleave.prevent="validDrop = false"\n          @dragover.prevent="validDrop = true"\n          :class="{\'uip-background-primary-wash\' : validDrop, \'uip-background-muted\' : !validDrop,  }"\n          class="uip-background-muted uip-border uip-border-rounder uip-padding-m uip-flex uip-flex-middle uip-flex-center uip-transition-all uip-link-muted">\n            \n            <div class="uip-icon uip-text-xl">file_upload</div>\n            <input hidden accept=".json" type="file" single="" id="uip-import-layout" @change="importEverything($event)">\n            \n          </label>\n          \n          \n        </div>\n      </div>\n    \n    '}};