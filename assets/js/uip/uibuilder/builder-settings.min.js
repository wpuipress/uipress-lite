import{defineAsyncComponent}from"../../libs/vue-esm.js";const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n,ToggleSection={props:{title:String,startOpen:Boolean},data:()=>({open:!1}),mounted(){this.startOpen&&(this.open=!0)},computed:{returnVisibilityIcon(){return this.open?"expand_more":this.open?void 0:"chevron_left"}},methods:{toggleVisibility(){this.open=!this.open}},template:'\n  \n    <div class="uip-flex uip-flex-column uip-row-gap-s">\n    \n      \x3c!-- Title --\x3e\n      <div class="uip-flex uip-gap-s uip-flex-center uip-flex-between">\n        \n       \n        <div class="uip-flex uip-gap-xxs uip-flex-center uip-cursor-pointer uip-flex-between uip-flex-grow"\n        @click="toggleVisibility()">\n          \n          \n          <span class="uip-text-bold uip-text-emphasis">{{ title }}</span> \n          \n          <a class="uip-link-muted uip-icon">{{ returnVisibilityIcon }}</a>\n          \n          \n        </div>\n      \n      </div>\n      \n      <div v-if="open" class="uip-padding-left-s">\n        <slot></slot>\n      </div>\n      \n    </div>\n  \n  '};export default{components:{globalVariables:defineAsyncComponent(()=>import("./variables.min.js?ver=3.3.1")),ToggleSection:ToggleSection},data(){return{loading:!0,templateID:this.$route.params.templateID,mode:"light",menu:this.uipApp.data.adminMenu.menu,ui:{sideBar:{activeTab:"settings"},strings:{themeStyles:__("Theme styles"),revertStyle:__("Revert style back to default","uipress-lite"),appliesTo:__("Applies to","uipress-lite"),excludes:__("Excludes","uipress-lite"),templateType:__("Template type","uipress-lite"),uiTemplate:__("User template (admin theme)","uipress-lite"),adminPage:__("Admin Page","uipress-lite"),toolBar:__("Frontend toolbar","uipress-lite"),loginPage:__("Login page","uipress-lite"),appliesToSelfTitle:__("Template will now load for you!","uipress-lite"),appliesToSelf:__("Take care not to revoke access to anything you may need in the admin.","uipress-lite"),appliesToSelfMeta:__("If you haven't already, we recommend setting up:","uipress-lite"),safeMode:__("safe mode","uipress-lite"),customCSS:__("CSS","uipress-lite"),customJS:__("Javascript","uipress-lite"),light:__("Light","uipress-lite"),dark:__("Dark","uipress-lite"),templateName:__("Template name","uipress-lite"),active:__("Active","uipress-lite"),selectUsersAndRoles:__("Users and roles","uipress-lite"),searchUsersAndRoles:__("Search users and roles","uipress-lite"),custom:__("custom","uipress-lite"),menuIcon:__("Menu icon","uipress-lite"),addToSubmenu:__("Add to submenu","uipress-lite"),noneTopLevel:__("None (top level)","uipress-lite"),applyToSubsites:__("Apply to subsites","uipress-lite"),watchOut:__("Is this an admin page?","uipress-lite"),watchOutDescription:__("This template does not contain a content block. The content block is key to navigating the admin. Setting this live as a uiTemplate can cause a lock out.","uipress-lite"),pageLink:__("Link","uipress-lite"),name:__("Name","uipress-lite"),type:__("Type","uipress-lite"),templateSettings:__("Template settings","uipress-lite"),status:__("Status","uipress-lite"),general:__("General","uipress-lite"),slug:__("Slug","uipress-lite"),content:__("Content","uipress-lite"),theme:__("Theme","uipress-lite"),helpTab:__("Help tab","uipress-lite"),screenOptions:__("Screen options","uipress-lite"),pluginNotices:__("Plugin notices","uipress-lite"),adminTheme:__("Admin theme","uipress-lite"),frameDescription:__("The following options will only take effect on live templates.","uipress-lite")}},enabledDisabled:{false:{value:!1,label:__("Disabled","uipress-lite")},true:{value:!0,label:__("Enabled","uipress-lite")}},showHide:{false:{value:!1,label:__("Hide","uipress-lite")},true:{value:!0,label:__("Show","uipress-lite")}},switchOptions:{light:{value:"light",label:__("Light","uipress-lite")},dark:{value:"dark",label:__("Dark","uipress-lite")}},newVariable:{label:"",var:""}}},inject:["uiTemplate"],watch:{"uiTemplate.globalSettings.slug":{handler(){this.handleSlugChange()}}},async mounted(){this.loading=!1,setTimeout(this.mountHandlers,100),this.setDefaults()},beforeUnmount(){document.removeEventListener("click",this.handleClickEvents)},computed:{returnFormatedMenu(){return this.menu.filter(e=>"sep"!==e.type).map(({uid:e,url:t,name:i})=>({name:e,url:t,label:i.replace(/<[^>]*>?/gm,"")}))},isTemplateWithoutFrame(){if("ui-template"!=this.uiTemplate.globalSettings.type)return!1;if(this.uiTemplate.content.length>0){if(!JSON.stringify(this.uiTemplate.content).includes("uip-content"))return!0}return!1},returnPageLink(){const e=this.uiTemplate.globalSettings.slug?this.uiTemplate.globalSettings.slug:this.uiTemplate.globalSettings.name+"-uiptp-"+this.$route.params.templateID;return this.uipApp.data.options.adminURL+"admin.php?page="+this.formatPageName(e)}},methods:{setDefaults(){this.isObject(this.uiTemplate.globalSettings)||(this.uiTemplate.globalSettings={}),"contentTheme"in this.uiTemplate.globalSettings||(this.uiTemplate.globalSettings.contentTheme=!0),"helpTab"in this.uiTemplate.globalSettings||(this.uiTemplate.globalSettings.helpTab=!1),"screenOptions"in this.uiTemplate.globalSettings||(this.uiTemplate.globalSettings.screenOptions=!1),"pluginNotices"in this.uiTemplate.globalSettings||(this.uiTemplate.globalSettings.pluginNotices=!1)},mountHandlers(){document.addEventListener("click",this.handleClickEvents)},handleClickEvents(e){const t=document.querySelector("#uip-preview-canvas");e.target&&t&&t.contains(e.target)&&this.goBack()},returnTemplateOption(e,{uniqueKey:t,accepts:i}){const n=this.uiTemplate.globalSettings.options;if(n.hasOwnProperty(e)||(n[e]={}),n[e].hasOwnProperty(t))return n[e][t];let s;switch(i){case String:s="";break;case Array:s=[];break;case Object:s={};break;default:s=""}return n[e][t]=s,n[e][t]},saveTemplateOption(e,t,i){this.uiTemplate.globalSettings.options[e][t]=i},formatPageName:e=>e?e=(e=(e=(e=(e=(e=e.toLowerCase()).replace("~[^pLd]+~u","-")).replace("~[^-w]+~","")).trim()).replace("~-+~","-")).replace(" ","-"):"",handleSlugChange(){const e=this.uiTemplate.globalSettings.slug;this.uiTemplate.globalSettings.slug=this.formatPageName(e)},goBack(){const e=this.$route.params.templateID;document.removeEventListener("click",this.handleClickEvents),this.$router.push({path:`/uibuilder/${e}/`,query:{...this.$route.query}})}},template:'\n      <div class="uip-position-fixed uip-top-80 uip-right-16 uip-bottom-16 uip-background-default uip-w-320 uip-flex uip-flex-column uip-row-gap-s uip-overflow-auto uip-fade-in uip-shadow" style="border-radius: calc(var(--uip-border-radius-large) + var(--uip-padding-xs)); z-index: 2;"\n      ref="uipTemplateSettings"\n      id="uip-template-settings">\n      \n        <div class="uip-h-100p uip-w-100p uip-max-h-100p uip-max-w-100p uip-overflow-hidden uip-flex-grow uip-flex uip-flex-column uip-border-rounder uip-shadow uip-background-default">\n        \n          \x3c!-- Block settings header --\x3e\n          <div class="uip-padding-s uip-padding-remove-bottom">\n          \n            <div class="uip-flex uip-gap-xxs uip-flex-center">\n            \n            \n              <div class="uip-flex uip-flex-column uip-flex-grow">\n                <div class="uip-text-bold uip-blank-input uip-text-l uip-text-emphasis">{{ui.strings.templateSettings}}</div>\n              </div>\n              \n              <a class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs" @click="goBack()">close</a>\n              \n            </div>\n            \n          </div>\n          \x3c!-- End block settings header --\x3e\n          \n          \n        \n          <div class="uip-flex uip-flex-column uip-gap-s uip-padding-s uip-flex-grow uip-overflow-auto">\n            \n            <div class=""></div>\n            \n            <ToggleSection :title="ui.strings.general" :startOpen="true">\n            \n              <div class="uip-flex uip-flex-column uip-row-gap-s">\n                \n                <div v-if="isTemplateWithoutFrame" class="uip-background-red-wash uip-border-rounder uip-text-s uip-padding-xs uip-scale-in-top uip-flex uip-flex-column uip-row-gap-xs">\n                  <div class="uip-text-bold uip-text-l uip-text-emphasis">{{ui.strings.watchOut}}</div>\n                  <div>{{ui.strings.watchOutDescription}}</div>\n                </div>\n                \n                \n                <div class="uip-grid-col-1-3">\n                \n                  \x3c!--Status--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.status}}</span>\n                  </div>\n                  <toggle-switch :options="enabledDisabled" :activeValue="uiTemplate.globalSettings.status" :dontAccentActive="true" :returnValue="function(data){ uiTemplate.globalSettings.status = data;}"/>\n                  \n                  \x3c!--Name--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.name}}</span>\n                  </div>\n                  <input class="uip-input uip-input-small uip-w-100p" type="text" v-model="uiTemplate.globalSettings.name" :placeholder="ui.strings.templateName">\n                  \n                  \x3c!--Type--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.type}}</span>\n                  </div>\n                  <select class="uip-input uip-input-small uip-w-100p" v-model="uiTemplate.globalSettings.type">\n                    <option value="ui-template">{{ui.strings.uiTemplate}}</option>\n                    <option value="ui-admin-page">{{ui.strings.adminPage}}</option>\n                    <option value="ui-front-template">{{ui.strings.toolBar}}</option>\n                  </select>\n                  \n                  \x3c!--Subsites multisite only--\x3e\n                  <template v-if="uipApp.data.options.multisite && uipApp.data.options.networkActivated && uipApp.data.options.primarySite">\n                    <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                      <span>{{ui.strings.applyToSubsites}}</span>\n                    </div>\n                    <toggle-switch :options="enabledDisabled" :activeValue="uiTemplate.globalSettings.applyToSubsites" :dontAccentActive="true" :returnValue="function(data){ uiTemplate.globalSettings.applyToSubsites = data;}"></toggle-switch>\n                  </template>\n                  \n                  \x3c!--Applies to--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    {{ui.strings.appliesTo}}\n                  </div>\n                  <user-role-select :selected="uiTemplate.globalSettings.rolesAndUsers" \n                  :placeHolder="ui.strings.selectUsersAndRoles" \n                  :searchPlaceHolder="ui.strings.searchUsersAndRoles" :single="false" \n                  :updateSelected="(d)=>uiTemplate.globalSettings.rolesAndUsers = d"></user-role-select>\n                  \n                  \x3c!--Excludes to--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    {{ui.strings.excludes}}\n                  </div>\n                  <user-role-select :selected="uiTemplate.globalSettings.excludesRolesAndUsers" \n                   :placeHolder="ui.strings.selectUsersAndRoles" \n                   :searchPlaceHolder="ui.strings.searchUsersAndRoles" :single="false" \n                  :updateSelected="(d)=>uiTemplate.globalSettings.excludesRolesAndUsers = d"></user-role-select>\n                  \n                  \n                  \x3c!-- Admin page specific options--\x3e\n                  <template v-if="uiTemplate.globalSettings.type == \'ui-admin-page\'">\n                  \n                    \x3c!--Slug--\x3e\n                    <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                      <span>{{ui.strings.slug}}</span>\n                    </div>\n                    <input class="uip-input uip-input-small uip-w-100p" type="text" v-model="uiTemplate.globalSettings.slug" :placeholder="ui.strings.slug">\n                  \n                    \x3c!--Menu Icon--\x3e\n                    <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                      <span>{{ui.strings.menuIcon}}</span>\n                    </div>\n                    <icon-select class="uip-w-100p" :value="uiTemplate.globalSettings.menuIcon" :returnData="function(e){uiTemplate.globalSettings.menuIcon = e}"></icon-select>\n                    \n                    \x3c!--Submenu--\x3e\n                    <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                      <span>{{ui.strings.addToSubmenu}}</span>\n                    </div>\n                    <select class="uip-input" v-model="uiTemplate.globalSettings.menuParent">\n                        <option value="">{{ui.strings.noneTopLevel}}</option>\n                        <template v-for="item in returnFormatedMenu">\n                          <option :value="item.url">{{item.label}}</option>\n                        </template>\n                    </select>\n                    \n                    \x3c!--Page link--\x3e\n                    <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-flex-start uip-padding-top-xxs">\n                      <span>{{ui.strings.pageLink}}</span>\n                    </div>\n                    <a :href="returnPageLink" target="_BLANK" class="uip-link-muted">\n                      {{returnPageLink}}\n                    </a>\n                  \n                  </template>\n                  \n                  \n                </div>\n                  \n                \n                \n              </div>  \n            </ToggleSection>\n            \n            \n            \x3c!--Frame settings--\x3e\n            <template v-if="uiTemplate.globalSettings.type == \'ui-template\'">\n            \n              <div class="uip-border-top"></div>\n              \n              <ToggleSection :title="ui.strings.content" :startOpen="true">\n              \n                <div class="uip-background-orange-wash uip-border-rounder uip-text-s uip-padding-xs uip-scale-in-top uip-flex uip-flex-column uip-row-gap-xs uip-margin-bottom-s uip-text-muted">\n                  {{ui.strings.frameDescription}}\n                </div>\n                \n                <div class="uip-grid-col-1-3">\n                \n                  \x3c!--Theme enabled--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.theme}}</span>\n                  </div>\n                  <toggle-switch :options="enabledDisabled" :activeValue="uiTemplate.globalSettings.contentTheme" :dontAccentActive="true" \n                  :returnValue="(data)=>{ uiTemplate.globalSettings.contentTheme = data}"/>\n                  \n                  \x3c!--Help tab--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.helpTab}}</span>\n                  </div>\n                  <toggle-switch :options="showHide" :activeValue="uiTemplate.globalSettings.helpTab" :dontAccentActive="true" \n                  :returnValue="(data)=>{ uiTemplate.globalSettings.helpTab = data}"/>\n                  \n                  \x3c!--Screen options--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.screenOptions}}</span>\n                  </div>\n                  <toggle-switch :options="showHide" :activeValue="uiTemplate.globalSettings.screenOptions" :dontAccentActive="true" \n                  :returnValue="(data)=>{ uiTemplate.globalSettings.screenOptions = data}"/>\n                  \n                  \x3c!--Plugin notices--\x3e\n                  <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-h-30 uip-gap-xs">\n                    <span>{{ui.strings.pluginNotices}}</span>\n                  </div>\n                  <toggle-switch :options="showHide" :activeValue="uiTemplate.globalSettings.pluginNotices" :dontAccentActive="true" \n                  :returnValue="(data)=>{ uiTemplate.globalSettings.pluginNotices = data}"/>  \n                \n                </div>\n              \n              \n              </ToggleSection>  \n              \n            </template>\n            \n            \n            <div class="uip-border-top"></div>\n            \n              \x3c!-- Theme styles --\x3e\n              <ToggleSection :title="ui.strings.themeStyles" :startOpen="true">\n                <globalVariables/>\n              </ToggleSection>  \n              \n              \n              <div class="uip-border-top"></div>\n              \n              \x3c!-- Dynamic settings --\x3e\n              <template v-for="group in uipApp.data.templateGroupOptions">\n              \n                <ToggleSection :title="group.label" :startOpen="false">\n                \n                    <div class="uip-grid-col-1-3">\n                    \n                      \x3c!--Loop through group settings --\x3e\n                      <template v-for="option in group.settings">\n                      \n                        <div class=" uip-flex uip-flex-center uip-flex uip-gap-xs">\n                          <span class="uip-text-muted uip-text-s">{{option.label}}</span>\n                          <uip-tooltip v-if="option.help" :message="option.help">\n                            <span class="uip-icon uip-border-circle uip-background-grey uip-cursor-pointer" style="font-size:12px">question_mark</span>\n                          </uip-tooltip>\n                        </div>\n                        \n                        <div class="uip-flex uip-flex-center">\n                          <component :is="option.component" :value="returnTemplateOption(group.name, option)" :args="option.args"\n                          :returnData="(data)=>{saveTemplateOption(group.name, option.uniqueKey, data)}"></component>\n                        </div>\n                        \n                      </template>\n                      \n                      \x3c!--End loop through group settings --\x3e\n                      \n                    </div>\n                    \n                </ToggleSection>\n                \n                <div class="uip-border-top"></div>\n                \n              </template>\n              \x3c!-- End dynamic settings --\x3e\n            \n          </div>\n          \n        </div>\n      \n      </div>'};