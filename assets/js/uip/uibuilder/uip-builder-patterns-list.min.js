import*as twoColumnPattern from"../patterns/2_column_layout.min.js";import*as threeColumnPattern from"../patterns/3_column_layout.min.js";import*as fourColumnPattern from"../patterns/4_column_layout.min.js";import*as adminBoilerPlate from"../patterns/admin_boilerplate.min.js";const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{mode:String,insertArea:Array},data:function(){return{loading:!0,categories:[],builtInLayouts:[{description:"",name:__("2 column","uipress-lite"),icon:"view_column_2",type:"layout",template:JSON.parse(twoColumnPattern.exportPattern())},{description:"",name:__("3 column","uipress-lite"),icon:"view_week",type:"layout",template:JSON.parse(threeColumnPattern.exportPattern())},{description:"",name:__("4 column","uipress-lite"),icon:"calendar_view_week",type:"layout",template:JSON.parse(fourColumnPattern.exportPattern())},{description:__("A basic sidebar, toolbar and content frame layout","uipress-lite"),name:__("Admin boilerplate","uipress-lite"),icon:"view_quilt",type:"layout",template:JSON.parse(adminBoilerPlate.exportPattern())}],search:"",patternTypes:[{name:"layout",label:__("Layout","uipress-lite")},{name:"block",label:__("Block","uipress-lite")}],strings:{proBlock:__("Pro","uipress-lite"),seachPatterns:__("Search patterns...","uipress-lite"),patternTitle:__("Pattern title","uipress-lite"),patternType:__("Pattern type","uipress-lite"),savePattern:__("Save pattern","uipress-lite"),description:__("Description","uipress-lite"),patternIcon:__("Pattern icon","uipress-lite"),import:__("Import","uipress-lite"),layouts:__("Layouts","uipress-lite"),patterns:__("Patterns","uipress-lite")}}},inject:["uipData","router","uipress","uiTemplate"],mounted:function(){this.loading=!1},computed:{returnPatterns(){return this.uiTemplate.patterns}},methods:{setDropAreaClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xxs uip-w-100p",e},clone(e){let t=this.duplicateBlock(e.template);return JSON.parse(JSON.stringify(t))},duplicateBlock(e){let t=Object.assign({},e);return t.uid=this.uipress.createUID(),t.options=[],t.settings=JSON.parse(JSON.stringify(t.settings)),t.content&&(t.content=this.duplicateChildren(t.content)),t},duplicateChildren(e){let t=[];for(let i of e){let e=Object.assign({},i);e.uid=this.uipress.createUID(),e.settings=JSON.parse(JSON.stringify(e.settings)),e.content&&(e.content=this.duplicateChildren(e.content)),t.push(e)}return t},setDragAreaClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xxxs uip-margin-bottom-s",e},insertAtPos(e){"click"==this.mode&&Array.isArray(this.insertArea)&&this.insertArea.push(this.clone(e))},inSearch(e){if(""==this.search)return!0;let t=this.search.toLowerCase();return!!e.name.toLowerCase().includes(t)||!!e.description.toLowerCase().includes(t)},returnIcon:e=>e.icon&&""!=e.icon?e.icon:"layout"==e.type?"account_tree":"block"==e.type?"add_box":"interests",getPatterns(){let e=this,t=new FormData;t.append("action","uip_get_ui_patterns_list"),t.append("security",uip_ajax.security),e.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{t.error&&e.uipress.notify(t.message,"uipress-lite","","error",!0),t.success&&(e.uiTemplate.patterns=t.patterns)})},deleteThisItem(e){let t=this;this.uipress.deletePost(e).then(e=>{e&&t.getPatterns()})},exportPattern(e,t){self=this;let i=JSON.stringify(e),n=e.name,s=new Date,p=String(s.getDate()).padStart(2,"0"),r="uip-ui-pattern-"+n+"-"+(String(s.getMonth()+1).padStart(2,"0")+"-"+p+"-"+s.getFullYear())+".json",a="data:text/json;charset=utf-8,"+encodeURIComponent(i),u=document.getElementById("uip-pattern-export-"+t);u.setAttribute("href",a),u.setAttribute("download",r),u.click(),self.uipress.notify(__("Pattern exported","uipress-lite"),"","success",!0)},importPattern(){let e=this,t=e.uipress.notify(__("Importing pattern","uipress-lite"),"","default",!1,!0),i=document.getElementById("uip-import-pattern").files[0];if("application/json"!=i.type)return void e.uipress.notify("Patterns must be in valid JSON format","","error",!0,!1);if(i.size>1e6)return void e.uipress.notify("Uploaded file is too big","","error",!0,!1);let n=new FileReader;n.readAsText(i,"UTF-8"),n.onload=function(i){let n,s=i.target.result;try{n=JSON.parse(s)}catch(i){return e.uipress.notify(i,"","error",!0,!1),void e.uipress.destroy_notification(t)}if(null!=n){if(!e.uipress.isObject(n))return e.uipress.notify("Pattern is not valid","","error",!0,!1),void e.uipress.destroy_notification(t);if(!("template"in n))return e.uipress.notify("Pattern is not valid","","error",!0,!1),void e.uipress.destroy_notification(t);e.uipress.validDateTemplate([n.template]).then(i=>{i.includes(!1)?(e.uipress.notify("File is not a valid JSON template","","error",!0,!1),e.uipress.destroy_notification(t)):e.savePatternToDb(n).then(i=>{i&&(e.uipress.notify("Pattern imported","","success",!0,!1),e.uipress.destroy_notification(t))})})}else e.uipress.notify("JSON parse failed","","error",!0,!1),e.uipress.destroy_notification(t)}},async savePatternToDb(e){let t=this,i=JSON.stringify(e.template,(e,t)=>"true"===t?"uiptrue":!0===t?"uiptrue":"false"===t?"uipfalse":!1===t?"uipfalse":""===t?"uipblank":t),n=new FormData;return n.append("action","uip_save_ui_pattern"),n.append("security",uip_ajax.security),n.append("pattern",i),n.append("name",e.name),n.append("type",e.type),n.append("description",e.description),n.append("icon",e.icon),await t.uipress.callServer(uip_ajax.ajax_url,n).then(e=>e.error?(t.uipress.notify(e.message,"uipress-lite","","error",!0),!1):e.success?(t.uiTemplate.patterns=e.patterns,!0):void 0)}},template:'<div class="">\n        <div class="uip-flex uip-flex-row uip-gap-xs uip-margin-bottom-s">\n          <div class="uip-flex uip-padding-xxs uip-border uip-search-block uip-border-round uip-flex-grow">\n            <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon uip-icon-medium">search</span>\n            <input class="uip-blank-input uip-flex-grow uip-text-s" type="search" :placeholder="strings.seachPatterns" autofocus="" v-model="search">\n          </div>\n          <label class="">\n            <div class="uip-button-default uip-padding-xs uip-flex uip-gap-xxs uip-flex-center uip-text-s">\n              <span class="uip-icon uip-icon-medium">file_upload</span>\n              <span class="">{{strings.import}}</span>\n            </div>\n            <input hidden accept=".json" type="file" single="" id="uip-import-pattern" @change="importPattern()">\n          </label>\n        </div>\n        \n        <div class="uip-margin-bottom-s uip-flex-wrap uip-flex-row">\n        \n          <div class="uip-flex uip-cursor-pointer uip-margin-bottom-s uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-bold uip-text-emphasis">{{strings.layouts}}</div>\n          \n          <draggable \n            v-model="builtInLayouts" \n            handle=".uip-pattern-drag"\n            :component-data="setDragAreaClasses()"\n            :group="{ name: \'uip-patterns\', pull: \'clone\', put: false, revertClone: true }"\n            @start="uiTemplate.drag = true" \n            @end="uiTemplate.drag = false" \n            ghost-class=""\n            :clone="clone"\n            itemKey="id">\n              <template #item="{element, index}">\n            \n                   <div v-if="inSearch(element)" class="uip-pattern-item" :block-name="element.description"\n                   @mouseenter="element.hover = true" @mouseleave="element.hover = false">\n                      <div @click="insertAtPos(element)" class="uip-border-round uip-padding-xxs hover:uip-background-muted uip-cursor-pointer uip-pattern-drag">\n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center">\n                          <div class="uip-icon uip-icon-large uip-text-xl uip-padding-xxxs uip-flex-center uip-flex-middle uip-border-round">\n                            {{returnIcon(element)}}\n                          </div> \n                          <div class="uip-flex uip-flex-column uip-flex-shrink">\n                            <div class="uip-flex uip-flex-between">\n                              <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                                <span class="uip-text-emphasis">{{element.name}}</span>\n                              </div>\n                            </div>\n                            <div class="uip-text-s uip-text-muted">{{element.description}}</div>\n                          </div>\n                      \n                        </div>\n                      </div>\n                  </div>\n              \n              </template>\n          </draggable>\n          \n          <div class="uip-flex uip-cursor-pointer uip-margin-bottom-s uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-bold uip-text-emphasis">{{strings.patterns}}</div>\n              \n          <draggable \n            v-model="uiTemplate.patterns" \n            handle=".uip-pattern-drag"\n            :component-data="setDragAreaClasses()"\n            :group="{ name: \'uip-patterns\', pull: \'clone\', put: false, revertClone: true }"\n            @start="uiTemplate.drag = true" \n            @end="uiTemplate.drag = false" \n            ghost-class=""\n            :clone="clone"\n            itemKey="id">\n              <template #item="{element, index}">\n            \n                   <div v-if="inSearch(element)" class="uip-pattern-item" :block-name="element.description"\n                   @mouseenter="element.hover = true" @mouseleave="element.hover = false">\n                      <div @click="insertAtPos(element)" class="uip-border-round uip-padding-xxs hover:uip-background-muted uip-cursor-pointer uip-pattern-drag">\n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center">\n                          <div class="uip-icon uip-icon-large uip-text-xl uip-padding-xxxs uip-flex-center uip-flex-middle uip-border-round">\n                            {{returnIcon(element)}}\n                          </div> \n                          <div class="uip-flex uip-flex-column uip-row-gap-xxxs uip-flex-shrink">\n                            <div class="uip-flex uip-flex-between">\n                              <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                                <span class="uip-text-emphasis">{{element.name}}</span>\n                                <span class="uip-text-xs uip-background-primary-wash uip-border-round uip-padding-xxxs uip-post-type-label">{{element.type}}</span>\n                              </div>\n                            </div>\n                            <div class="uip-text-s uip-text-muted">{{element.description}}</div>\n                          </div>\n                        \n                          <div class="uip-flex uip-flex-right uip-w-60 uip-flex-grow" >\n                            <dropdown pos="left center">\n                              <template v-slot:trigger>\n                                <span class="uip-icon uip-link-muted uip-text-l uip-icon-medium">more_vert</span>\n                              </template>\n                              <template v-slot:content>\n                            \n                                \x3c!--Pattern contextual options --\x3e\n                                  <div class="uip-flex uip-flex-row uip-gap-xxs uip-padding-xxxs">\n                                    <span @click="exportPattern(element, index)"\n                                    class="uip-icon uip-link-muted uip-text-l uip-icon-medium">file_download</span>\n                                    <a href="" :id="\'uip-pattern-export-\' + index" style="display:none"></a>\n                                    <dropdown pos="left center">\n                                      <template v-slot:trigger>\n                                        <span \n                                        class="uip-icon uip-link-muted uip-text-l uip-icon-medium ">edit_document</span>\n                                      </template>\n                                      <template v-slot:content>\n                                        <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-xs">\n                                          <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                            <div class="uip-text-s uip-text-muted">{{strings.patternTitle}}</div>\n                                            <input class="uip-input" type="text" v-model="element.name">\n                                          </div>\n                                          <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                            <div class="uip-text-s uip-text-muted">{{strings.patternIcon}}</div>\n                                            <icon-select :value="{value: element.icon}" :returnData="function(data) {element.icon = data.value}"></icon-select>\n                                          </div>\n                                          <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                            <div class="uip-text-s uip-text-muted">{{strings.description}}</div>\n                                            <textarea class="uip-input" rows="4" v-model="element.description"></textarea>\n                                          </div>\n                                          <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                            <div class="uip-text-s uip-text-muted">{{strings.patternType}}</div>\n                                            <select class="uip-input" v-model="element.type">\n                                              <template v-for="option in patternTypes">\n                                                <option :value="option.name">{{option.label}}</option>\n                                              </template>\n                                            </select>\n                                          </div>\n                                        </div>\n                                      </template>\n                                    </dropdown>\n                                    <span @click="deleteThisItem(element.id)"\n                                    class="uip-icon uip-link-danger uip-text-l uip-icon-medium">delete</span>\n                                  </div>\n                                \x3c!--End pattern contextual Options --\x3e\n                              \n                              </template>\n                            </dropdown>\n                          </div>\n                      \n                        </div>\n                      </div>\n                  </div>\n              \n              </template>\n          </draggable>\n                \n              \n        </div>\n      </div>'}};