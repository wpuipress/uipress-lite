const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{args:Object,triggerClass:String},data:function(){return{modelOpen:!0,themeLoading:!1,themes:[],saving:!1,finished:!1,strings:{setupWizard:__("Setup wizard","uipress-lite"),previous:__("Previous","uipress-lite"),next:__("Next","uipress-lite"),finish:__("Finish","uipress-lite"),siteLogo:__("Site logo","uipress-lite"),siteLogoDarkMode:__("Site logo dark mode"),appliesTo:__("Applies to","uipress-lite"),excludes:__("Excludes","uipress-lite"),selectUsersAndRoles:__("Select users and roles","uipress-lite"),searchUsersAndRoles:__("Search users and roles","uipress-lite"),loginLogo:__("Login logo","uipress-lite"),loginBackground:__("Login background","uipress-lite"),enableLoginTheme:__("Enable login theme","uipress-lite"),setupComplete:__("Setup complete!","uipress-lite"),finishedDescription:__("Settings from the wizard have been saved to your site. If you chose a admin template you will need to reload the page to use it."),newAdmin:__("Refresh admin","uipress-lite"),close:__("Exit","uipress-lite"),lightMode:__("Light mode","uipress-lite"),darkMode:__("Dark mode","uipress-lite")},currentStep:1,steps:[{key:1,title:__("Site logo","uipress-lite"),description:__("Choose a logo for the admin area.","uipress-lite")},{key:2,title:__("Template","uipress-lite"),description:__("Choose a template for the admin area. This can be editied after the intiial setup.","uipress-lite")},{key:3,title:__("Theme styles","uipress-lite"),description:__("Choose your colors and styles to run through the admin area.","uipress-lite")},{key:4,title:__("Applies to","uipress-lite"),description:__("Choose who you want to use the new admin template","uipress-lite")},{key:5,title:__("Login page","uipress-lite"),description:__("Use the options below to customise your login page.","uipress-lite")}],setupDetails:{logo:!1,darkLogo:!1,appliesTo:[],excludes:[],loginLogo:!1,loginBackground:!1,enableLoginTheme:!1,chosenTemplate:!1}}},inject:["uipress","uipData","uiTemplate","router"],watch:{currentStep:{handler(e,i){2==e&&this.fetchThemes()}}},mounted:function(){},computed:{returnThemes(){return console.log(this.themes),this.themes.filter(function(e){return"Layout"==e.type})}},methods:{returnFinished(){return this.finished},fetchThemes(){let e=this;e.themeLoading=!0;let i=new FormData;e.uipress.callServer("https://api.uipress.co/templates/list/?sort=newest&filter=ui-template&v321=true",i).then(i=>{i.error&&(e.uipress.notify(i.message,"uipress-lite","","error",!0),e.themeLoading=!1),e.themeLoading=!1,e.themes=i})},onClickOutside(e){if(!this.$refs.uipmodal)return;const i=e.path||(e.composedPath?e.composedPath():void 0);!i||i.includes(this.$refs.uipmodal)||this.$refs.uipmodal.contains(e.target)||this.closeThisComponent()},closeThisComponent(){document.documentElement.removeEventListener("click",this.onClickOutside,!1),this.router.push("/")},finishSetup(){let e=this;1!=e.saving&&(e.saving=!0,e.setupDetails.chosenTemplate?e.getTemplate():e.saveSettings())},getTemplate(){let e=this,i=new FormData,t="https://api.uipress.co/templates/get/?templateid="+e.setupDetails.chosenTemplate,n=e.uipress.notify(__("Importing template","uipress-lite"),"","default",!1,!0);e.uipress.callServer(t,i).then(i=>{i.error&&(e.uipress.notify(i.message,"","error",!0),e.uipress.destroy_notification(n),e.saveSettings()),e.uipress.destroy_notification(n),e.setupDetails.templateJSON=i,e.saveSettings()})},saveSettings(){let e=this,i=JSON.stringify(e.setupDetails,(e,i)=>"true"===i?"uiptrue":!0===i?"uiptrue":"false"===i?"uipfalse":!1===i?"uipfalse":""===i?"uipblank":i),t=this.formatStyles(),n=JSON.stringify(t,(e,i)=>"true"===i?"uiptrue":!0===i?"uiptrue":"false"===i?"uipfalse":!1===i?"uipfalse":""===i?"uipblank":i),s=e.uipress.notify(__("Confirguring settings","uipress-lite"),"","default",!1,!0),p=new FormData;p.append("action","uip_save_from_wizard"),p.append("security",uip_ajax.security),p.append("settings",i),p.append("styles",n),e.uipress.callServer(uip_ajax.ajax_url,p).then(i=>{e.uipress.destroy_notification(s),e.saving=!1,e.uipress.notify("Setup complete","","success",!0),e.finished=!0})},formatStyles(){let e=this.uipData.themeStyles,i={};for(let t in e)e[t].value&&(i[e[t].name]||(i[e[t].name]={}),i[e[t].name].value=e[t].value),e[t].darkValue&&(i[e[t].name]||(i[e[t].name]={}),i[e[t].name].darkValue=e[t].darkValue),e[t].user&&(i[e[t].name].user=e[t].user,i[e[t].name].label=e[t].label,i[e[t].name].name=e[t].name,i[e[t].name].type=e[t].type);return i},refreshAdmin(){window.location.assign(this.uipData.options.adminURL)},returnActiveIndex:e=>("activeIndex"in e||(e.activeIndex=0),e.activeIndex)},template:'\n    \n    \n      <div class="uip-position-fixed uip-top-0 uip-left-0 uip-h-viewport uip-w-vw uip-background-black-wash uip-flex uip-flex-center uip-flex-middle uip-fade-in uip-text-normal uip-z-index-1" tabindex="1">\n        <div ref="uipmodal" class="uip-background-default uip-border-rounder uip-border uip-flex uip-flex-column uip-row-gap-m uip-scale-in uip-w-500 uip-z-index-1 uip-transition-all">\n          \n          \n          \x3c!-- title --\x3e\n          <div class="uip-flex uip-flex-between uip-flex-center uip-padding-s uip-border-bottom">\n            <div class="uip-text-bold">{{strings.setupWizard}}</div>\n            <div class="uip-icon uip-link-muted uip-padding-xxs uip-border-round hover:uip-background-muted" @click="closeThisComponent()">close</div>\n          </div>\n          \x3c!-- end title --\x3e\n          \n          \n         \n          <template v-if="returnFinished()">\n          \n            <div class="uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-text-center uip-flex uip-flex-column uip-row-gap-s">\n              <div class="uip-icon uip-text-green" style="font-size:80px">check_circle</div>\n              <div class="uip-text-bold uip-margin-bottom-xxs uip-text-xl">{{strings.setupComplete}}</div>\n              <div class="uip-text-muted">{{strings.finishedDescription}}</div>\n            </div>\n            \n            <div class="uip-flex uip-gap-xs uip-padding-s uip-padding-remove-top uip-flex-between">\n            \n              <button class="uip-button-default" @click="closeThisComponent">{{strings.close}}</button>\n              \n              <button class="uip-button-primary" @click="refreshAdmin()">{{strings.newAdmin}}</button>\n                \n            </div>\n            \n          </template>\n          \n          <template v-else>\n          \n            \x3c!-- step display --\x3e \n            <div class="uip-flex uip-flex-middle">\n              <div class="uip-flex uip-flex-row uip-flex-between uip-flex-center uip-padding-s uip-padding-remove-top uip-padding-remove-bottom uip-w-250">\n                <template v-for="step in steps">\n                  <div class="uip-border-circle uip-w-22 uip-ratio-1-1 uip-background-muted uip-flex uip-flex-center uip-flex-middle uip-transition-all uip-link-default" :class="{\'uip-text-inverse uip-background-primary\' : currentStep == step.key || currentStep > step.key}" @click="currentStep = step.key">\n                    <span>{{step.key}}</span>\n                  </div>\n                  \n                  <div v-if="step.key < steps.length" class="uip-flex-grow uip-background-grey uip-transition-all"\n                  :class="{\'uip-background-primary\' : currentStep > step.key}" style="height:1px"></div>\n                </template>\n              </div>\n            </div>\n            \x3c!-- End step display --\x3e\n          \n            \x3c!-- Description --\x3e\n            \n            <div class="uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-text-center">\n              <div class="uip-text-bold uip-margin-bottom-xxs uip-text-l">{{steps[currentStep - 1].title}}</div>\n              <div class="uip-text-muted">{{steps[currentStep - 1].description}}</div>\n            </div>\n            \n            \x3c!-- End description --\x3e\n            \n            \x3c!--Step 1 --\x3e\n            <div v-if="currentStep == 1" class="uip-grid-col-1-3 uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-fade-in">\n            \n                <div class="uip-text-muted uip-flex uip-flex-center">{{strings.lightMode}}</div>\n                <inline-image-select :value="setupDetails.logo" :returnData=\'function(d){ setupDetails.logo = d}\' :args="{ hasPositioning: false }"></inline-image-select>\n                \n                <div class="uip-text-muted uip-flex uip-flex-center">{{strings.darkMode}}</div>\n                <inline-image-select :value="setupDetails.darkLogo" :returnData=\'function(d){ setupDetails.darkMode = d}\' :args="{ hasPositioning: false }"></inline-image-select>\n                \n            </div>\n            \n            \x3c!--Step 2 --\x3e\n            <div v-if="currentStep == 2" class="uip-flex uip-flex-column uip-row-gap-m uip-max-h-500 uip-overflow-auto uip-scrollbar uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-fade-in uip-max-w-100p">\n              \n              <div v-if="themeLoading" class="uip-padding-m uip-flex uip-flex-center uip-flex-middle"><loading-chart></loading-chart></div>\n              \n              <div v-else class="uip-flex uip-flex-column uip-row-gap-m uip-flex-grow uip-max-w-100p" >\n                <template v-for="theme in returnThemes">\n                \n                    <div class="uip-border-round uip-cursor-pointer uip-pattern-drag">\n                      <div class="uip-flex uip-flex-column uip-row-gap-xs uip-flex-left">\n                        <img :src="theme.images[returnActiveIndex(theme)]" :alt="theme.theme_title" class="uip-w-100p uip-h-100p uip-border uip-border-round uip-ratio-16-10">\n                        \n                        <div class="uip-flex uip-flex-row uip-gap-xs">\n                          <template v-for="(item, index) in theme.images">\n                            <div class="uip-w-32 uip-ratio-1-1 uip-border-round uip-background-muted uip-background-cover uip-border uip-border-box" @click="theme.activeIndex = index"\n                            :style="\'background-image: url(\' + item + \')\'" :class="{\'uip-border-primary\' : returnActiveIndex(theme) == index}"></div>\n                          </template>\n                        </div>\n                        \n                        <div class="uip-flex uip-flex-column uip-row-gap-xxxs uip-flex-shrink">\n                          <div class="uip-flex uip-flex-between uip-margin-bottom-xs">\n                            <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                              <span class="uip-text-emphasis uip-text-bold uip-text-l">{{theme.name}}</span>\n                              <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                                <span class="uip-text-xs uip-background-primary-wash uip-border-round uip-padding-xxxs uip-post-type-label">{{theme.type}}</span>\n                                <uip-tooltip :message="strings.downloadcount">\n                                  <div class="uip-text-xs uip-background-primary-wash uip-border-round uip-padding-xxxs uip-post-type-label uip-flex uip-flex-row uip-gap-xxxs">\n                                    <span class="uip-icon">file_download</span>\n                                    {{theme.downloads}}\n                                  </div>\n                                </uip-tooltip>\n                              </div>\n                            </div>\n                          </div>\n                          <div class="uip-text-s uip-text-muted uip-max-w-100p uip-margin-bottom-xs">{{theme.description}}</div>\n                          <button v-if="setupDetails.chosenTemplate != theme.ID" class="uip-button-default uip-flex-left" @click="setupDetails.chosenTemplate = theme.ID">Select this template</button>\n                          <button v-else class="uip-button-secondary uip-flex-left">Selected</button>\n                        </div>\n                      </div>\n                    </div>\n                    \n                </template>\n              </div>\n              \n            </div>\n            \n            \x3c!--Step 3 --\x3e\n            <div v-if="currentStep == 3" class="uip-flex uip-flex-column uip-row-gap-m uip-max-h-500 uip-overflow-auto uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-fade-in">\n              <list-variables></list-variables>\n            </div>\n            \n            \n            \x3c!--Step 4 --\x3e\n            <div v-if="currentStep == 4" class="uip-grid-col-1-3 uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-fade-in">\n                \n                <div class="uip-text-muted uip-flex uip-flex-center">{{strings.appliesTo}}</div>\n                <user-role-select :selected="setupDetails.appliesTo" \n                :placeHolder="strings.selectUsersAndRoles" \n                :searchPlaceHolder="strings.searchUsersAndRoles" :single="false" \n                :updateSelected="function(data){setupDetails.appliesTo = data}"></user-role-select>\n              \n                <div class="uip-text-muted uip-flex uip-flex-center">{{strings.excludes}}</div>\n                <user-role-select :selected="setupDetails.excludes" \n                :placeHolder="strings.selectUsersAndRoles" \n                :searchPlaceHolder="strings.searchUsersAndRoles" :single="false" \n                :updateSelected="function(data){setupDetails.excludes = data}"></user-role-select>\n                \n                \n            </div>\n            \n            \x3c!--Step 5 --\x3e\n            <div v-if="currentStep == 5" class="uip-grid-col-1-3 uip-padding-s uip-padding-remove-bottom uip-padding-remove-top uip-fade-in">\n              \n              <div class="uip-text-muted uip-flex uip-flex-center">{{strings.enableLoginTheme}}</div>\n              <switch-select :value="setupDetails.enableLoginTheme" :returnData=\'function(d){ setupDetails.enableLoginTheme = d}\' :args="{asText: true}"></switch-select>\n            \n              <div class="uip-text-muted uip-flex uip-flex-center">{{strings.loginLogo}}</div>\n              <inline-image-select :value="setupDetails.loginLogo" :returnData=\'function(d){ setupDetails.loginLogo = d}\' :args="{ hasPositioning: false }"></inline-image-select>\n           \n              <div class="uip-text-muted uip-flex uip-flex-center">{{strings.loginBackground}}</div>\n              <inline-image-select :value="setupDetails.loginBackground" :returnData=\'function(d){ setupDetails.loginBackground = d}\' :args="{ hasPositioning: false }"></inline-image-select>\n              \n            </div>\n            \n            \n            \n            \x3c!--Navigation --\x3e\n            \n            <div class="uip-flex uip-gap-xs uip-padding-s uip-padding-remove-top">\n              <button class="uip-button-default" @click="currentStep -= 1"\n              :disabled="currentStep <= 1">{{strings.previous}}</button>\n              <button v-if="currentStep < steps.length" class="uip-button-default" @click="currentStep += 1">{{strings.next}}</button>\n              \n              <button type="button" v-if="currentStep == steps.length" class="uip-button-primary uip-flex- uip-flex-center uip-gap-xxs uip-position-relative" @click="finishSetup()">\n              \n                <span v-if="!saving">{{strings.finish}}</span>\n                <div class="uip-position-relative" v-if="saving">\n                  <span class="uip-load-spinner"></span>\n                </div>\n              \n              </button>\n              \n            </div>\n          \n          </template>\n          \n          \x3c!--End of navigation--\x3e\n          \n          \n        </div>\n      </div>\n    \n    '}};