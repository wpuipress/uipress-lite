const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";export default{components:{globalVariables:defineAsyncComponent(()=>import("./variables.min.js?ver=3.3.1")),LicenceManager:defineAsyncComponent(()=>import("./licence-manager.min.js?ver=3.3.1"))},data:()=>({loading:!1,globalSettings:{},search:"",render:!0,ui:{strings:{siteSettings:__("Site settings","uipress-lite"),saveSettings:__("Save settings","uipress-lite"),settingsSaved:__("Settings saved","uipress-lite"),proOption:__("This is a pro option. Upgrade to unlock","uipress-lite"),searchSettings:__("Search settings","uipress-lite"),licence:__("Licence","uipress-lite")}}}),mounted(){this.loading=!1,this.getSettings()},watch:{"uiTemplate.globalSettings":{handler(i,e){},deep:!0},"uiTemplate.globalSettings":{handler(i,e){},deep:!0}},computed:{proPluginActivated(){let i=this.uipApp.data.options.activePlugins;return(i=this.isObject(i)?Object.values(i):i).includes("uipress-pro/uipress-pro.php")}},methods:{async getSettings(){this.loading=!0;let i=new FormData;i.append("action","uip_get_global_settings"),i.append("security",uip_ajax.security);const e=await this.sendServerRequest(uip_ajax.ajax_url,i);this.loading=!1,e.error?this.uipApp.notifications.notify(e.message,"","error",!0):(await this.getUserStyles(),e.options&&this.isObject(e.options)&&Object.keys(e.options).length>0&&(this.globalSettings=e.options))},async getUserStyles(){let i=new FormData;i.append("action","uip_get_ui_styles"),i.append("security",uip_ajax.security);const e=await this.sendServerRequest(uip_ajax.ajax_url,i);e.error||e.styles&&(this.uipApp.data.themeStyles={...this.uipApp.data.themeStyles,...e.styles})},returnTemplateOption(i,e){let t=e.uniqueKey,n=this.globalSettings;if(i in n||(n[i]={}),t in n[i])return n[i][t];switch(e.accepts){case String:n[i][t]="";break;case Array:n[i][t]=[];break;case Object:n[i][t]={};break;case Boolean:n[i][t]=!1}return n[i][t]},saveTemplateOption(i,e,t){this.globalSettings[i][e]=t},async saveSettings(){let i=this.prepareJSON(this.globalSettings),e=new FormData;e.append("action","uip_save_global_settings"),e.append("security",uip_ajax.security),e.append("settings",i);const t=await this.sendServerRequest(uip_ajax.ajax_url,e);t.error?this.uipApp.notifications.notify(t.message,"","error",!0):this.uipApp.notifications.notify(this.ui.strings.settingsSaved,"","success",!0)},conditionalShowGroup(i){return!("condition"in i)||i.condition(this.globalSettings)},inSearch(i){const e=this.search.toLowerCase(),t=i.label.toLowerCase(),n=i.help.toLowerCase();return!(!t.includes(e)&&!n.includes(e))},exportSettings(){const i=JSON.stringify({uipSettings:this.globalSettings}),e=new Date,t=`uip-site-settings-${`${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}-${e.getFullYear()}`}.json`,n=`data:text/json;charset=utf-8,${encodeURIComponent(i)}`,s=this.$refs.exporter;s.setAttribute("href",n),s.setAttribute("download",t),s.click();const p=__("Settings exported","uipress-lite");this.uipApp.notifications.notify(p,"","success",!0)},importSettings(i){const e=this.uipApp.notifications.notify(__("Importing settings","uipress-lite"),"","default",!1,!0),t=i.target.files[0],n=i=>{this.uipApp.notifications.notify(i,"","error",!0,!1),this.uipApp.notifications.remove(e)};if("application/json"!==t.type)return n(__("Settings must be in valid JSON format","uipress-lite"));if(t.size>1e6)return n(__("Uploaded file is too big","uipress-lite"));const s=new FileReader;s.readAsText(t,"UTF-8"),s.onload=(i=>{try{const t=JSON.parse(i.target.result);if(!t||!t.uipSettings||!this.isObject(t.uipSettings))return n(__("Settings mismatch","uipress-lite"));this.globalSettings=t.uipSettings,this.uipApp.notifications.notify(__("Settings imported","uipress-lite"),"","success",!0,!1),this.uipApp.notifications.remove(e),this.render=!1,this.$nextTick(()=>{this.render=!0})}catch(i){n(__("JSON parse failed","uipress-lite"))}})}},template:'\n    \n      <uip-floating-panel ref="panel" closeRoute="/" id="uip-global-settings">\n      \n      \n        \x3c!-- Site settings --\x3e\n        <div class="uip-flex uip-w-100p uip-h-100p">\n        \n          <div class="uip-flex uip-flex-column uip-w-100p uip-max-h-100p uip-flex-no-wrap uip-row-gap-m uip-padding-m">\n          \n            <div class="uip-flex uip-flex-between uip-flex-center">\n              <div class="uip-text-l uip-text-emphasis">{{ui.strings.siteSettings}}</div>\n              <a @click="$refs.panel.close()" class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs">close</a>\n            </div>\n            \n            \n            <div v-if="loading" class="uip-w-100p uip-flex uip-flex-middle uip-flex-center uip-padding-s"><loading-chart></loading-chart></div>\n            \n            <div v-if="!loading" class="uip-border-rounder uip-flex uip-flex-center uip-gap-xs uip-background-muted uip-padding-xs"> \n              <div class="uip-icon uip-icon-l uip-text-muted">search</div>\n              <input class="uip-blank-input uip-flex-grow" type="text" v-model="search" :placeholder="ui.strings.searchSettings">\n            </div>\n            \n            <div v-if="!loading" class="uip-flex-grow uip-flex uip-flex-column uip-row-gap-s" style="overflow:auto">\n              \n              \n              \n              \x3c!--Searching Dynamic settings --\x3e\n              <div  v-if="search != \'\'" class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-m">\n                <template v-for="group in uipApp.data.globalGroupOptions">\n                    \n                      \x3c!--Loop through group settings --\x3e\n                      \n                      <template v-for="option in group.settings">\n                        <template v-if="conditionalShowGroup(option) && inSearch(option)">\n                          <div class="uip-flex uip-flex-column uip-row-gap-xs uip-flex-start">\n                          \n                            \n                            <div class="uip-flex uip-gap-xxxs uip-flex-center">\n                              <div class="uip-text-bold uip-text-muted">{{group.label}}</div>\n                              <div class="uip-icon uip-text-muted">chevron_right</div>\n                              <div class="uip-text-bold">{{option.label}}</div>\n                            </div>\n                            <div v-if="option.help" class="uip-text-s uip-text-muted">{{option.help}}</div>\n                            \n                            <a href="https://uipress.co?utm_source=uipressupgrade&utm_medium=referral" target="_BLANK" v-if="option.proOption" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-s uip-link-default uip-no-underline">\n                              {{ui.strings.proOption}}\n                            </a>\n                            \n                            <component v-else :is="option.component" :value="returnTemplateOption(group.name, option)" :args="option.args"\n                            :returnData="function(data){saveTemplateOption(group.name, option.uniqueKey, data)}" class="uip-inline-flex"></component>\n                          \n                          </div>\n                          \n                        </template>\n                        \n                      </template>\n                    \n                </template>\n              </div>\n              \n              \n              <template v-if="proPluginActivated">\n                <accordion v-if="!search" :openOnTick="false" :startOpen="true">\n                \n                  <template #title>\n                    <div class="uip-flex-grow uip-flex uip-gap-xxs uip-flex-center uip-text-bold">\n                      <div class="">{{ui.strings.licence}}</div>\n                    </div>\n                  </template>\n                  \n                  <template #content>\n                  \n                    <LicenceManager/>\n                  \n                  </template>\n                \n                </accordion>\n                \n                <div class="uip-border-top"></div>\n                \n              </template>\n              \n             \n              \n              \x3c!-- Dynamic settings --\x3e\n              <template v-if="!search" v-for="(group, index) in uipApp.data.globalGroupOptions">\n                <accordion :openOnTick="false" v-if="conditionalShowGroup(group)">\n                  <template v-slot:title>\n                    <div class="uip-flex-grow uip-flex uip-gap-xxs uip-flex-center uip-text-bold">\n                      <div class="">{{group.label}}</div>\n                    </div>\n                  </template>\n                  <template v-slot:content>\n                    <div class="uip-padding-xs uip-padding-left-m uip-flex uip-flex-column uip-row-gap-s">\n                      \x3c!--Loop through group settings --\x3e\n                      \n                      <template v-for="option in group.settings" v-if="render">\n                        <div v-if="conditionalShowGroup(option)"  class="uip-grid-col-4-6">\n                          \n                          <div class="uip-flex uip-flex-center uip-gap-xs uip-h-30">\n                          \n                              <div class="uip-text-muted uip-flex uip-flex-center uip-flex uip-gap-xs uip-position-relative">\n                              \n                                \n                                \n                                <dropdown v-if="option.help" pos="left center" :openOnHover="true" class="uip-flex-no-shrink uip-position-absolute uip-left--32" :hover="true">\n                                  <template class="uip-flex-no-shrink" v-slot:trigger>\n                                    <div class="uip-link-muted hover:uip-background-grey uip-text-center uip-border-round uip-background-muted uip-text-bold uip-text-xs uip-w-16 uip-ratio-1-1 uip-text-s uip-flex-no-shrink">i</div>\n                                  </template>\n                                  <template v-slot:content>\n                                    <div class="uip-text-s uip-padding-xs uip-max-w-200">{{option.help}}</div>\n                                  </template>\n                                </dropdown>\n                                \n                                <span>{{option.label}}</span>\n                                \n                              </div>\n                            \n                          </div>\n                          \n                          \n                          <div class="uip-w-100p">\n                            <a href="https://uipress.co?utm_source=uipressupgrade&utm_medium=referral" target="_BLANK" v-if="option.proOption" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-s uip-link-default uip-no-underline uip-w-100p uip-text-center uip-flex">\n                              {{ui.strings.proOption}}\n                            </a>\n                            <component v-else :is="option.component" :value="returnTemplateOption(group.name, option)" :args="option.args"\n                            :returnData="function(data){saveTemplateOption(group.name, option.uniqueKey, data)}"></component>\n                          </div>\n                        \n                        </div>\n                        \n                      </template>\n                      \n                      <template v-if="group.name == \'theme\'">\n                        <globalVariables/>\n                      </template>\n                      \x3c!--End loop through group settings --\x3e\n                    </div>\n                  </template>\n                </accordion>\n                <div class="uip-border-top" v-if="conditionalShowGroup(group)"></div>\n              </template>\n              \x3c!-- End dynamic settings --\x3e\n            </div>\n            \n            <div v-if="!loading" class="uip-flex uip-flex-between">\n            \n              <div class="uip-flex uip-gap-xs">\n                <button class="uip-button-default uip-icon" @click="exportSettings()">download</button>\n                <a class="uip-hidden" ref="exporter"></a>\n                \n                <label class="uip-button-default">\n                  \n                  <div class="uip-icon">upload</div>\n                  <input hidden accept=".json" type="file" single="" id="uip-import-layout" @change="importSettings($event)">\n                  \n                </label>\n              </div>\n            \n              <button class="uip-button-primary" @click="saveSettings()">{{ui.strings.saveSettings}}</button>\n              \n            </div>\n            \n            \n          </div>\n        </div>\n        \n        \x3c!-- site settings --\x3e\n      \n      </uip-floating-panel>\n      '};