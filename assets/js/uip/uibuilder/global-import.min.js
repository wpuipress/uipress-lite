const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";export default{components:{Modal:defineAsyncComponent(()=>import("../v3.5/utility/modal.min.js?ver=3.3.1"))},props:{args:Object,triggerClass:String},data:()=>({modelOpen:!0,themeLoading:!1,themes:[],saving:!1,finished:!1,validDrop:!1,strings:{globalImport:__("Global import"),settingsExplanation:__("If you have global exported uiPress on another site then drag and select the .json file below to import.","uipress-lite")}}),watch:{currentStep:{handler(e,i){2==e&&this.fetchThemes()}}},computed:{isDisabledButton(){if(!(this.exportOptions.templates||this.exportOptions.siteSettings||this.exportOptions.themeStyles||this.exportOptions.adminMenus))return!0}},methods:{importEverything(e,i){this.validDrop=!1;const t=this.uipApp.notifications.notify(__("Importing uiPress content","uipress-lite"),"","default",!1,!0);let r;if(i)r=e.dataTransfer.files[0];else{r=event.target.files[0]}if("application/json"!=r.type)return this.uipApp.notifications.notify(__("Global exports must be in valid JSON format","uipress-lite"),"","error",!0,!1),void this.uipApp.notifications.remove(t);let s=new FileReader;s.readAsText(r,"UTF-8"),s.onload=(e=>this.handleReaderLoad(e,t))},handleReaderLoad(e,i){let t,r=e.target.result;try{t=JSON.parse(r)}catch(e){return this.uipApp.notifications.notify(e,"","error",!0,!1),void this.uipApp.notifications.remove(i)}if(!t)return this.uipApp.notifications.notify(__("JSON parse failed","uipress-lite"),"","error",!0,!1),void this.uipApp.notifications.remove(i);if(!Array.isArray(t)&&!this.isObject(t))return this.uipApp.notifications.notify("Export is not valid","","error",!0,!1),void this.uipApp.notifications.remove(i);let s=!1;if(!("uipGlobalExport"in t))return this.uipApp.notifications.notify(__("Template mismatch","uipress-lite"),"","error",!0,!1),void this.uipApp.notifications.remove(i);s=t.uipGlobalExport,this.sendImportToServer(s,i)},async sendImportToServer(e,i){let t=new FormData;t.append("action","uip_global_import"),t.append("security",uip_ajax.security),t.append("content",JSON.stringify(e));const r=await this.sendServerRequest(uip_ajax.ajax_url,t);r.error?this.uipApp.notifications.notify(r.message,"","error",!0):(this.uipApp.notifications.notify(__("Content imported succesfully","uipress-lite"),"","success"),this.uipApp.notifications.remove(i),this.$router.push("/"),setTimeout(function(){location.reload()},600))}},template:'\n    \n    \n    <Modal :startOpen="true" ref="globalimportwrap">\n      \n      <div ref="uipmodal" class="uip-flex uip-flex-column uip-row-gap-m uip-w-400 uip-padding-m">\n          \n          \n          \x3c!-- title --\x3e\n          <div class="uip-flex uip-flex-between uip-flex-center">\n            <div class="uip-text-bold">{{strings.globalImport}}</div>\n            <div class="uip-icon uip-link-muted uip-padding-xxs uip-border-round hover:uip-background-muted" @click="$refs.globalimportwrap.close();this.$router.push(\'/\');">close</div>\n          </div>\n          \x3c!-- end title --\x3e\n          \n          <div class="uip-text-muted">{{strings.settingsExplanation}}</div>\n          \n          \n          <label @drop.prevent="importEverything($event, true)"\n          @dragenter.prevent="validDrop = true"\n          @dragleave.prevent="validDrop = false"\n          @dragover.prevent="validDrop = true"\n          :class="{\'uip-background-primary-wash\' : validDrop, \'uip-background-muted\' : !validDrop,  }"\n          class="uip-background-muted uip-border uip-border-rounder uip-padding-m uip-flex uip-flex-middle uip-flex-center uip-transition-all uip-link-muted">\n            \n            <div class="uip-icon uip-text-xl">file_upload</div>\n            <input hidden accept=".json" type="file" single="" id="uip-import-layout" @change="importEverything($event)">\n            \n          </label>\n          \n          \n        </div>\n        \n      </Modal>\n    \n    '};