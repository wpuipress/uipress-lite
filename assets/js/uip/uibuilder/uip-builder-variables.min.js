<<<<<<< HEAD
const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent}from"../../libs/vue-esm-dev.js";export default{components:{colourManager:defineAsyncComponent(()=>import("../v3.5/styles/color-style-editor.min.js"))},props:{},data:function(){return{loading:!0,ui:{mode:"light",search:"",strings:{theme:__("Theme","uipress"),add:__("Add","uipress"),variableLabel:__("Variable label","uipress"),variableName:__("Variable name","uipress"),deleteVariable:__("Delete variable","uipress"),custom:__("custom","uipress-lite"),revertStyle:__("Revert style back to default","uipress-lite"),searchVariables:__("Search variables...","uipress-lite"),new:__("New variable","uipress-lite"),editStyle:__("Edit style","uipress-lite")},switchOptions:{light:{value:"light",tip:__("Light","uipress-lite"),icon:"light_mode"},dark:{value:"dark",tip:__("Dark","uipress-lite"),icon:"dark_mode"}},varTypeSelected:"color",varTypes:{color:{value:"color",label:__("Colour","uipress-lite")},units:{value:"units",label:__("Units","uipress-lite")},font:{value:"font",label:__("Font","uipress-lite")}},fonts:[{value:"Arial, Helvetica, sans-serif",label:__("Arial / Helvetica","uipress-lite")},{value:"Times New Roman, Times, serif",label:__("Times New Roman","uipress-lite")},{value:"Courier New / Courier, Monospace",label:__("Courier New","uipress-lite")},{value:"Tahoma, sans-serif",label:__("Tahoma","uipress-lite")},{value:"Trebuchet MS, sans-serif",label:__("Trebuchet MS","uipress-lite")},{value:"Verdana, sans-serif",label:__("Verdana","uipress-lite")},{value:"Georgia, serif",label:__("Georgia","uipress-lite")},{value:"Garamond, serif",label:__("Garamond","uipress-lite")},{value:"Arial Black, sans-serif",label:__("Arial Black","uipress-lite")},{value:"Impact, sans-serif",label:__("Impact","uipress-lite")},{value:"Brush Script MT, cursive",label:__("Brush Script MT","uipress-lite")},{value:"Material Symbols Rounded",label:__("UiPress icons","uipress-lite")},{value:"inherit",label:__("Inherit","uipress-lite")}]},newVariable:{label:"",var:"",type:"color"}}},inject:["uipData","uipress","uiTemplate"],watch:{"newVariable.var":{handler(e,i){if(e&&e.length>2){let i=e.slice(0,2),t=e.slice(0,2),a="";a=(a="--"!=i?"-"!=t?"--"+e:"-"+e:e).replace(" ","-"),this.newVariable.var=a}},deep:!0}},mounted:function(){this.uipData.userPrefs.darkTheme&&(this.ui.mode="dark")},computed:{returnActiveMode(){return this.uipData.userPrefs.darkTheme?this.uipData.userPrefs.darkTheme?"darkValue":void 0:"value"}},methods:{returnVar(e){return"light"==this.ui.mode?e.value:e.darkValue},splitUnitVal(e){let i=!1;if(!(i="light"==this.ui.mode?e.value:e.darkValue)||""==i)return{units:"px",value:""};let t=i.replace(/\D/g,"");return""==t?{units:"px",value:""}:{value:t,units:i.split(t)[1]}},setVar(e,i){"light"==this.ui.mode?i.value=e:i.darkValue=e},setUnitVal(e,i){"light"==this.ui.mode?e.value?i.value=e.value+e.units:i.value="":e.darkValue?i.darkValue=e.value+e.units:i.darkValue=""},clearVar(e){"light"==this.ui.mode?delete e.value:delete e.darkValue},deleteVar(e,i){delete this.uipData.themeStyles[i],this.uipress.notify(__("Variable deleted","uipress-lite"),"","success",!0)},createVariable(){if(""==this.newVariable.label)return void this.uipress.notify(__("Variable label is required","uipress-lite"),"","error",!0);if(""==this.newVariable.var)return void this.uipress.notify(__("Variable name is required","uipress-lite"),"","error",!0);console.log(this.newVariable.type);let e={label:this.newVariable.label,darkValue:"",value:"",type:this.newVariable.type,name:this.newVariable.var,user:!0};this.uipData.themeStyles[this.newVariable.var]=e,this.uipress.notify(__("Variable created!","uipress-lite"),"","success",!0),this.newVariable.label="",this.newVariable.var=""},customSet(e){return!("light"!=this.ui.mode||!e.value||""==e.value)||!("dark"!=this.ui.mode||!e.darkValue||""==e.darkValue)},inSearch(e){if(""==this.ui.search)return!0;let i=this.ui.search.toLowerCase();return!!e.name.toLowerCase().includes(i)||!!e.label.toLowerCase().includes(i)},returnStyleBackground(e){const i=this.returnActiveMode;return e[i]?e[i].includes("--")?`var(${e[i]})`:e[i]:`var(${e.name})`}},template:'\n\t\t  <div class="uip-flex uip-flex-column uip-row-gap-s">\n      \n        \n        \x3c!-- Var types --\x3e\n        <div class="">\n          <toggle-switch :options="ui.varTypes" :activeValue="ui.varTypeSelected" :returnValue="function(data){ ui.varTypeSelected = data}"></toggle-switch>\n        </div>\n        \n        \n        \n        \n        \n        <div class="uip-padding-right-remove">\n          <div class="uip-flex uip-flex-column uip-gap-xxs">\n          \n\t\t\t      <template v-for="(item, index) in uipData.themeStyles">\n              \n              <template v-if="item.type == ui.varTypeSelected && inSearch(item)">\n              \n                <div class="uip-flex uip-gap-xs uip-flex-center uip-gap-xxxs">\n                \n                  <div class="uip-w-100p uip-flex-grow uip-flex-center">\n                    \n                      \n                    \x3c!--Color picker dropdown--\x3e\n                    <dropdown v-if="item.type == \'color\'" :ref="\'coloreditor-\'+index" pos="left center" :offsetX="56">\n                    \n                      <template #trigger>\n                      \n                        <div class="uip-flex uip-gap-s uip-flex-center uip-padding-xxs uip-padding-left-xs uip-link-default uip-border-rounder hover:uip-background-muted">\n                        \n                          <div class="uip-w-16 uip-border-circle uip-ratio-1-1 uip-background-checkered">\n                            <div class="uip-w-16 uip-border-circle uip-ratio-1-1 uip-border" :style="{background:returnStyleBackground(item)}">\n                            \n                            </div>\n                          </div>\n                          \n                          <div class="">{{item.name}}</div>\n                        \n                        </div>\n                        \n                      </template>\n                      \n                      <template #content>\n                      \n                        <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-xs uip-w-240">\n                        \n                          <div class="uip-flex uip-flex-between uip-flex-center">\n                            <div class="uip-text-emphasis uip-text-bold uip-text-s">{{ui.strings.editStyle}}</div>\n                            \n                            <div @click="$refs[\'coloreditor-\'+index][0].close()" \n                            class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n                              <span class="uip-icon">close</span>\n                            </div>\n                          </div>\n                          \n                          <colourManager :value="item" :returnData="false"/>\n                        \n                        </div>\n                        \n                      </template>\n                      \n                    </dropdown>  \n                    \n                    \x3c!--Value vars--\x3e\n                    <template v-if="item.type == \'units\'">\n                    \n                      <value-units :value="splitUnitVal(item)" size="xsmall" :returnData="function(data){ setUnitVal(data, item)}"></value-units>\n                    \n                    </template>\n                    \n                    \n                    \x3c!--Font vars--\x3e\n                    <template v-if="item.type == \'font\'">\n                    \n                      <select v-if="ui.mode == \'light\'" v-model="item.value" class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" \n                      style="padding-top: 2px; padding-bottom: 2px; border-radius: var(--uip-border-radius-large);">\n                        <template v-for="font in ui.fonts">\n                          <option vlass="font.value" >{{font.label}}</option>\n                        </template>\n                      </select>\n                      \n                      <select v-else v-model="item.darkValue" class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" \n                      style="padding-top: 2px; padding-bottom: 2px; border-radius: var(--uip-border-radius-large);">\n                        <template v-for="font in ui.fonts">\n                          <option vlass="font.value" >{{font.label}}</option>\n                        </template>\n                      </select>\n                    \n                    </template>\n                    \n                    \n                  </div>\n                  \n                  <uip-tooltip :message="ui.strings.revertStyle" :delay="1000" v-if="!item.user && customSet(item)">\n                   <a @click="clearVar(item)" class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-text-s">format_color_reset</a>\n                  </uip-tooltip>\n                  \n                  <uip-tooltip :message="ui.strings.revertStyle" :delay="1000" v-if="item.user">\n                   <a @click="deleteVar(item, index)" class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-text-s">delete</a>\n                  </uip-tooltip>\n                  \n                </div>\n                \n\t\t          </template>\n              \n\t\t\t      </template>\n          </div>\n        \n        </div>\n        \n     </div>'};
=======
const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{},data:function(){return{loading:!0,ui:{mode:"light",search:"",strings:{theme:__("Theme","uipress"),add:__("Add","uipress"),variableLabel:__("Variable label","uipress"),variableName:__("Variable name","uipress"),deleteVariable:__("Delete variable","uipress"),custom:__("custom","uipress-lite"),revertStyle:__("Revert style back to default","uipress-lite"),searchVariables:__("Search variables...","uipress-lite"),new:__("New variable","uipress-lite")},switchOptions:{light:{value:"light",tip:__("Light","uipress-lite"),icon:"light_mode"},dark:{value:"dark",tip:__("Dark","uipress-lite"),icon:"dark_mode"}},varTypeSelected:"color",varTypes:{color:{value:"color",label:__("Colour","uipress-lite")},units:{value:"units",label:__("Units","uipress-lite")},font:{value:"font",label:__("Font","uipress-lite")}},fonts:[{value:"Arial, Helvetica, sans-serif",label:__("Arial / Helvetica","uipress-lite")},{value:"Times New Roman, Times, serif",label:__("Times New Roman","uipress-lite")},{value:"Courier New / Courier, Monospace",label:__("Courier New","uipress-lite")},{value:"Tahoma, sans-serif",label:__("Tahoma","uipress-lite")},{value:"Trebuchet MS, sans-serif",label:__("Trebuchet MS","uipress-lite")},{value:"Verdana, sans-serif",label:__("Verdana","uipress-lite")},{value:"Georgia, serif",label:__("Georgia","uipress-lite")},{value:"Garamond, serif",label:__("Garamond","uipress-lite")},{value:"Arial Black, sans-serif",label:__("Arial Black","uipress-lite")},{value:"Impact, sans-serif",label:__("Impact","uipress-lite")},{value:"Brush Script MT, cursive",label:__("Brush Script MT","uipress-lite")},{value:"Material Symbols Rounded",label:__("UiPress icons","uipress-lite")},{value:"inherit",label:__("Inherit","uipress-lite")}]},newVariable:{label:"",var:"",type:"color"}}},inject:["uipData","uipress","uiTemplate"],watch:{"newVariable.var":{handler(e,i){if(e&&e.length>2){let i=e.slice(0,2),t=e.slice(0,2),a="";a=(a="--"!=i?"-"!=t?"--"+e:"-"+e:e).replace(" ","-"),this.newVariable.var=a}},deep:!0}},mounted:function(){this.uipData.userPrefs.darkTheme&&(this.ui.mode="dark")},computed:{},methods:{returnVar(e){return"light"==this.ui.mode?e.value:e.darkValue},splitUnitVal(e){let i=!1;if(!(i="light"==this.ui.mode?e.value:e.darkValue)||""==i)return{units:"px",value:""};let t=i.replace(/\D/g,"");return""==t?{units:"px",value:""}:{value:t,units:i.split(t)[1]}},setVar(e,i){"light"==this.ui.mode?i.value=e:i.darkValue=e},setUnitVal(e,i){"light"==this.ui.mode?e.value?i.value=e.value+e.units:i.value="":e.darkValue?i.darkValue=e.value+e.units:i.darkValue=""},clearVar(e){"light"==this.ui.mode?delete e.value:delete e.darkValue},deleteVar(e,i){delete this.uipData.themeStyles[i],this.uipress.notify(__("Variable deleted","uipress-lite"),"","success",!0)},createVariable(){if(""==this.newVariable.label)return void this.uipress.notify(__("Variable label is required","uipress-lite"),"","error",!0);if(""==this.newVariable.var)return void this.uipress.notify(__("Variable name is required","uipress-lite"),"","error",!0);console.log(this.newVariable.type);let e={label:this.newVariable.label,darkValue:"",value:"",type:this.newVariable.type,name:this.newVariable.var,user:!0};this.uipData.themeStyles[this.newVariable.var]=e,this.uipress.notify(__("Variable created!","uipress-lite"),"","success",!0),this.newVariable.label="",this.newVariable.var=""},customSet(e){return!("light"!=this.ui.mode||!e.value||""==e.value)||!("dark"!=this.ui.mode||!e.darkValue||""==e.darkValue)},inSearch(e){if(""==this.ui.search)return!0;let i=this.ui.search.toLowerCase();return!!e.name.toLowerCase().includes(i)||!!e.label.toLowerCase().includes(i)}},template:'\n\t\t  <div class="uip-flex uip-flex-column uip-row-gap-xs">\n      \n        \n        \x3c!-- Var types --\x3e\n        <div class="">\n          <toggle-switch :options="ui.varTypes" :activeValue="ui.varTypeSelected" :returnValue="function(data){ ui.varTypeSelected = data}"></toggle-switch>\n        </div>\n        \n        \n        \x3c!-- theme switch --\x3e\n\t\t\t  <div class="uip-flex uip-gap-xs uip-flex-center">\n\t\t\t   <toggle-switch :options="ui.switchOptions" :activeValue="ui.mode" :returnValue="function(data){ ui.mode = data}"></toggle-switch>\n         \n         <dropdown pos="left center">\n           <template v-slot:trigger>\n            <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xs uip-link-muted">add</button>\n           </template>\n           <template v-slot:content>\n             <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xs">\n             <input type="text" :placeholder="ui.strings.variableLabel" class="uip-input uip-input-small" v-model="newVariable.label">\n             <input type="text" :placeholder="ui.strings.variableName" class="uip-input uip-input-small" v-model="newVariable.var">\n             \n             <select v-model="newVariable.type" class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p">\n               <template v-for="varType in ui.varTypes">\n                 <option :value="varType.value" >{{varType.label}}</option>\n               </template>\n             </select>\n             \n             <button @click="createVariable()" class="uip-button-secondary uip-text-xs">{{ui.strings.add}}</button>\n             </div>\n           </template>\n         </dropdown>\n         \n\t\t\t  </div>\n        \n        \n        \n        \n        <div class="uip-padding-xs uip-padding-right-remove">\n          <div class="uip-grid-col-1-3">\n\t\t\t      <template v-for="(item, index) in uipData.themeStyles">\n            \n            \n\t\t\t        <component is="style" scoped v-if="item.value">\n\t\t\t        .{{item.name}}[data-theme="light"] { {{item.name}}:{{item.value}} };\n\t\t\t        </component>\n\t\t\t        <component is="style" scoped v-if="item.darkValue">\n\t\t\t        .{{item.name}}[data-theme="dark"] { {{item.name}}:{{item.darkValue}} };\n\t\t\t        </component>\n              \n              <template v-if="item.type == ui.varTypeSelected">\n              \n                \x3c!--Color vars--\x3e\n\t\t\t          <template v-if="inSearch(item)" class="uip-max-w-100p" :class="item.name">\n                \n                  <div class="uip-flex uip-gap-xxs uip-flex-center uip-text-xs uip-text-muted">\n                    \n                    <span>{{item.label}}</span>\n                    \n                    <span v-if="customSet(item)" class="uip-w-8 uip-ratio-1-1 uip-background-green uip-border-circle"></span>\n                    \n                  </div>\n                  \n                  <div class="uip-flex uip-gap-xs uip-flex-center uip-gap-xxxs">\n                  \n                    <div class="uip-w-100p uip-flex-grow uip-flex-center">\n                      \n                      \x3c!--Color vars--\x3e\n                      <template v-if="item.type == \'color\'">\n                        \n                        <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-gap-xxs uip-flex-center">\n                      \n                          <color-picker :value="returnVar(item)" :returnData="function(data){ setVar(data, item)}" class="uip-max-w-100p">\n                            <template v-slot:trigger>\n                             <div :data-theme="ui.mode" class="uip-border uip-border-round uip-w-18 uip-ratio-1-1 uip-flex" \n                             :class="item.name" :style="\'background-color:var(\' + item.name + \')\'"></div>\n                            </template>\n                          </color-picker>\n                        \n                          <div class="uip-text-xs uip-no-wrap uip-text-overflow-ellipsis uip-overflow-hidden" style="width:auto">{{item.name}}</div>\n                          \n                        \n                        </div>\n                        \n                      </template>\n                      \n                      \x3c!--Value vars--\x3e\n                      <template v-if="item.type == \'units\'">\n                      \n                        <value-units :value="splitUnitVal(item)" size="xsmall" :returnData="function(data){ setUnitVal(data, item)}"></value-units>\n                      \n                      </template>\n                      \n                      \n                      \x3c!--Font vars--\x3e\n                      <template v-if="item.type == \'font\'">\n                      \n                        <select v-if="ui.mode == \'light\'" v-model="item.value" class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" \n                        style="padding-top: 2px; padding-bottom: 2px; border-radius: var(--uip-border-radius-large);">\n                          <template v-for="font in ui.fonts">\n                            <option vlass="font.value" >{{font.label}}</option>\n                          </template>\n                        </select>\n                        \n                        <select v-else v-model="item.darkValue" class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" \n                        style="padding-top: 2px; padding-bottom: 2px; border-radius: var(--uip-border-radius-large);">\n                          <template v-for="font in ui.fonts">\n                            <option vlass="font.value" >{{font.label}}</option>\n                          </template>\n                        </select>\n                      \n                      </template>\n                      \n                      \n                    </div>\n                    \n                    <uip-tooltip :message="ui.strings.revertStyle" :delay="1000" v-if="!item.user && customSet(item)">\n                     <a @click="clearVar(item)" class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-text-s">format_color_reset</a>\n                    </uip-tooltip>\n                    \n                    <uip-tooltip :message="ui.strings.revertStyle" :delay="1000" v-if="item.user">\n                     <a @click="deleteVar(item, index)" class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-text-s">delete</a>\n                    </uip-tooltip>\n                    \n                  </div>\n                  \n\t\t\t          </template>\n                \n              \n              </template>\n              \n              \n              \n              \n\t\t\t      </template>\n          </div>\n        \n        </div>\n        \n        \n\t\t  </div>'}};
>>>>>>> main
