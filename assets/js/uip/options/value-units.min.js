export default{props:{returnData:Function,value:Object},data:()=>({option:{value:"",units:"px"},focus:!1,rendered:!1}),inject:["uipress"],watch:{option:{handler(t,i){this.setReturnUnits()},deep:!0},value:{handler(t,i){JSON.stringify(t)!==JSON.stringify(this.option)&&this.formatValue()},deep:!0}},mounted(){this.formatValue()},computed:{returnUnits(){return this.option.units}},methods:{formatValue(){this.isObject(this.value)&&(this.option={...this.option,...this.value})},setReturnUnits(){let t=this.option;"auto"==t.units&&(t={value:" ",units:"auto"}),this.returnData(t)}},template:'\n    <div class="uip-flex uip-background-muted uip-border-rounder uip-padding-left-xs uip-padding-right-xxs" :class="{\'uip-active-outline\' : focus}">\n    \n      <input v-if="option.units != \'auto\'" @focus="focus = true" @blur="focus = false" style="width:30px" type="text" class="uip-input-small uip-blank-input uip-remove-steps uip-background-remove uip-flex-grow" v-model="option.value">\n      \n      <units-select :value="returnUnits" :returnData="(e)=>{option.units = e}" :class=" option.units == \'auto\' ? \'uip-flex-grow\' : \'\' "/>\n      \n    </div>'};