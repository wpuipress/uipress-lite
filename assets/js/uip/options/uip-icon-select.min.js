const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent}from"../../libs/vue-esm-dev.js";export default{components:{IconPicker:defineAsyncComponent(()=>import("../v3.5/styles/icon-picker.min.js"))},props:{returnData:Function,value:Object},data:()=>({icon:{value:""},strings:{add:__("Add","uipress-lite"),iconSelect:__("Icon select","uipress-lite")}}),inject:["uipress"],watch:{icon:{handler(n,e){this.returnData(n)},deep:!0}},mounted:function(){this.formatIcon(this.value)},computed:{returnIcon(){return this.icon.value?this.icon.value:"category"}},methods:{formatIcon(n){this.uipress.isObject(n)&&(this.icon={...this.icon,...n})}},template:'\n    \n        <dropdown pos="left center" class="uip-w-100p" :offsetX="56" ref="iconselect">\n        \n            <template #trigger>\n                \n                <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-flex-center uip-gap-xs uip-cursor-pointer">\n                \n                  <div class="uip-background-primary uip-text-inverse uip-border-round uip-padding-xxxs">\n                    <span class="uip-icon">{{ returnIcon }}</span>\n                  </div>\n                  \n                  <div v-if="!icon.value" class="uip-text-muted uip-flex-grow">{{strings.add}}...</div>\n                  \n                  <div v-else class="uip-no-wrap uip-text-ellipsis uip-overflow-hidden uip-w-80 uip-flex-grow">{{ icon.value }}</div>\n                  \n                  <a @click.stop.prevent="icon.value = \'\'"\n                  class="uip-no-underline uip-border-rounder uip-padding-xxxs uip-link-muted uip-text-s">\n                  <span class="uip-icon">close</span>\n                  </a>\n                  \n                </div>\n                \n            </template>\n            \n            <template #content>\n            \n              <div class="uip-w-240 uip-padding-s uip-flex uip-row-gap-s uip-flex-column">\n              \n                <div class="uip-flex uip-flex-between uip-flex-center">\n                  <div class="uip-text-emphasis uip-text-bold uip-text-s">{{strings.iconSelect}}</div>\n                  \n                  <div @click="$refs.iconselect.close()" \n                  class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n                    <span class="uip-icon">close</span>\n                  </div>\n                </div>\n                \n                <IconPicker :value="icon.value" :returnData="(d)=>{icon.value=d}"/>\n                \n              </div>\n            </template>\n            \n        </dropdown>\n        \n      \n      '};