const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{returnData:Function,value:Object},data:function(){return{open:!1,input:{string:"",dynamicPos:"left"},dynamics:this.uipData.dynamicOptions,strings:{dynamicData:__("Dynamic data","uipress-lite"),currentValue:__("Current value","uipress-lite"),select:__("select","uipress-lite"),dataPos:__("Dynamic data position","uipress-lite")},positionOptions:{left:{label:__("Left","uipress-lite"),value:"left",placeHolder:""},right:{label:__("Right","uipress-lite"),value:"right",placeHolder:""}}}},inject:["uipData","uipress"],watch:{input:{handler(i,n){this.returnData({string:this.input.string,dynamic:this.input.dynamic,dynamicKey:this.input.dynamicKey,dynamicPos:this.input.dynamicPos,dynamicType:"text"})},deep:!0}},mounted:function(){this.formatValue(this.value)},computed:{},methods:{createOptionObject:()=>({value:"",dynamic:!1,dynamicKey:"",dynamicPos:""}),formatValue(i){this.uipress.isObject(i)&&(this.input={...this.input,...i})},chooseItem(i){i.key!=this.input.dynamicKey&&(this.input.dynamic=!0,this.input.dynamicKey=i.key,this.returnData({string:this.input.string,dynamic:this.input.dynamic,dynamicKey:this.input.dynamicKey,dynamicPos:this.input.dynamicPos}))},removeDynamicItem(){this.input.dynamic=!1,this.input.dynamicKey="",this.returnData({string:this.input.string,dynamic:this.input.dynamic,dynamicKey:this.input.dynamicKey,dynamicPos:this.input.dynamicPos})}},template:'\n    <div class="uip-flex uip-gap-xxs uip-w-100p uip-flex-wrap">\n    \n        \x3c!--Old dynamic data only show if data has been set--\x3e\n        <dropdown pos="left center" v-if="input.dynamic">\n            <template v-slot:trigger>\n                <span class="uip-border-rounder uip-text-l uip-flex uip-icon uip-padding-xxxs uip-text-center uip-link-default uip-background-muted"\n                :class="{\'uip-background-primary uip-text-inverse\' : this.input.dynamic}">\n                  database\n                </span>\n            </template>\n            <template v-slot:content>\n              <div class="uip-padding-xs uip-max-w-260">\n                <div class="uip-flex uip-flex-wrap uip-flex-start uip-gap-xs uip-row-gap-xs uip-w-250 uip-max-h-200 uip-scrollbar uip-overflow-auto">\n                  <template v-for="dynamic in dynamics">\n                   <div v-if="dynamic.type == \'text\'" class="uip-border-round hover:uip-background-muted uip-border-round uip-padding-xxs uip-flex uip-flex-between uip-flex-center uip-flex-middle uip-cursor-pointer uip-w-100p"  :class="{\'uip-background-primary-wash\' : this.input.dynamicKey == dynamic.key}">\n                     <div class="">\n                      <div class="uip-text-s uip-text-bold">{{dynamic.label}}</div>\n                      <div class="uip-text-xs uip-text-muted">{{strings.currentValue + \': \' + dynamic.value}}</div>\n                     </div>\n                     <span v-if="this.input.dynamicKey == dynamic.key" @click="removeDynamicItem()"\n                     class="uip-padding-xxs uip-border-round uip-background-muted hover:uip-background-grey uip-cursor-pointer uip-flex uip-flex-middle uip-flex-center">\n                      <span class="uip-icon">delete</span>\n                     </span>\n                     <span v-else @click="chooseItem(dynamic)"\n                      class="uip-padding-xxs uip-border-round uip-background-muted hover:uip-background-grey uip-cursor-pointer uip-flex uip-flex-middle uip-flex-center">\n                       {{strings.select}}\n                      </span>\n                   </div>\n                  </template>\n                </div>\n              </div>\n            </template>\n        </dropdown>\n                \n        \n        <input type="text" class="uip-input-small uip-border-left-remove uip-flex-grow"  v-model="input.string">\n        \n        \n        <div v-if="input.dynamic" class="uip-w-100p">\n          <div class="uip-text-s uip-text-muted uip-margin-bottom-xxs uip-margin-top-xs">\n            {{strings.dataPos}}\n          </div>\n          <div>\n            <toggle-switch :options="positionOptions" :activeValue="input.dynamicPos" :returnValue="function(data){ input.dynamicPos = data}"></toggle-switch>\n          </div>\n        </div>\n        \n    </div>\n        '}};