export default{props:{returnData:Function,value:[String,Number],placeHolder:String,customStep:[String,Number]},data:()=>({option:"",step:1}),watch:{option:{handler(i,t){this.returnData(this.option)},deep:!0}},mounted(){this.initialiseNumber()},methods:{initialiseNumber(){void 0!==this.value&&(this.option=this.value),this.customStep&&(this.step=this.customStep)},stepUpNumber(){const i=parseFloat(this.option||0)+parseFloat(this.step);this.option=i,Number.isInteger(this.option)||(this.option=this.option.toFixed(2))},stepDownNumber(){const i=parseFloat(this.option||0)-parseFloat(this.step);this.option=i,Number.isInteger(this.option)||(this.option=this.option.toFixed(2))}},template:'\n      \n      \n      <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center uip-w-100p">\n      \n        <input type="number" class="uip-input-small uip-w-100p uip-flex-grow" v-model="option" :placeholder="placeHolder">\n        \n        <div class="uip-padding-xxxs uip-border-rounder uip-background-muted uip-flex uip-gap-xxs uip-no-text-select">\n          <div class="uip-link-muted uip-icon uip-text-l" @click="stepDownNumber()">remove</div>\n          <div class="uip-border-right"></div>\n          <div class="uip-link-muted uip-icon uip-text-l" @click="stepUpNumber()">add</div>\n        </div>\n        \n      </div>\n      \n      '};