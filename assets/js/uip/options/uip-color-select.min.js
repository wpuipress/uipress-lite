const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent}from"../../libs/vue-esm-dev.js";export function moduleData(){return{components:{},props:{returnData:Function,value:Object,args:Object},data:function(){return{open:!1,placeHolder:this.value,colour:{value:"",type:"solid"},manualColorInput:"",variables:this.uipData.themeStyles,strings:{colorValue:__("Colour value","uipress-lite"),themeVariables:__("Theme variables","uipress-lite"),type:__("Type","uipress-lite"),angle:__("Angle","uipress-lite"),positionX:__("Position X","uipress-lite"),positionY:__("Position Y","uipress-lite"),colour:__("Colour","uipress-lite"),location:__("Location","uipress-lite"),manageVariables:__("Manage variables","uipress-lite"),colourCode:__("Colour code","uipress-lite"),applyGradient:__("Apply gradient","uipress-lite")},gradient:{type:"linear",angle:0,positionX:50,positionY:50,colours:[{value:"#18208d",location:0,type:"solid",supports:["solid"]},{value:"rgb(108, 76, 203)",location:100,type:"solid",supports:["solid"]}]},pickerObject:"",mode:"solid",gradientTypes:{linear:{value:"linear",label:__("Linear","uipress-lite")},radial:{value:"radial",label:__("Radial","uipress-lite")}},modes:{solid:{value:"solid",label:__("Solid","uipress-lite")},gradient:{value:"gradient",label:__("Gradient","uipress-lite")}}}},inject:["uipData","uipress","openModal"],watch:{value:{handler(i,e){this.uipress.assignBlockValues(this.colour,i)},deep:!0},manualColorInput:{handler(i,e){let t=this;t.colour.value=i;let n=t.colour.value;if(t.colour.value.includes("--")){n=getComputedStyle(document.body).getPropertyValue(t.colour.value).trim(),t.colour.type="variable"}else t.colour.type="solid";void 0!==t.pickerObject.color?(t.pickerObject.color.set(n),t.returnData(this.colour)):t.returnData(this.colour)}}},mounted:function(){this.formatValue(this.value),this.setMode()},computed:{returnTheme(){return this.uipData.templateDarkMode?"dark":"light"},returnModes(){let i=this.modes;return this.uipress.isObject(this.args)?("modes"in this.args&&(this.args.modes.includes("solid")?this.args.modes.includes("gradient")||delete i.gradient:delete i.solid),i):i},returnColorValue(){let i=this.returnColor;return i?i.value.includes("--")?"var("+i.value+");":i.value:""},returnColor(){return this.colour},returnGradientObj(){return this.gradient}},methods:{resetColor(){this.colour.value="",this.colour.type="solid",this.manualColorInput="",this.returnData(this.colour)},formatValue(i){if(void 0!==i)return this.uipress.isObject(i)?(this.colour={...this.colour,...i},void(this.manualColorInput=this.colour.value)):void 0},setMode(){"linear"==this.colour.type||"radial"==this.colour.type?this.mode="gradient":this.mode="solid"},mountPicker(){let i=this,e=this.colour.value,t=this.$refs.uippicker;void 0!==this.value&&this.value;let n=new iro.ColorPicker(t,{width:240,margin:5,color:e,padding:0,handleSvg:"#uip-color-handle",layout:[{component:iro.ui.Box},{component:iro.ui.Slider,options:{id:"hue-slider",sliderType:"hue",width:240}},{component:iro.ui.Slider,options:{sliderType:"alpha",width:240}}]});i.pickerObject=n,n.on("color:change",function(e){i.colour.value.includes("--")||(i.colour.value=e.rgbaString,i.colour.type="solid",i.manualColorInput=i.colour.value),i.returnData(i.colour)}),n.on("input:start",function(e){i.colour.value=e.rgbaString,i.colour.type="solid",i.manualColorInput=i.colour.value,i.returnData(i.colour)})},returnGradient(){if("linear"==this.gradient.type){let i=JSON.parse(JSON.stringify(this.gradient.colours)).sort((i,e)=>parseFloat(i.location)-parseFloat(e.location)),e="linear-gradient("+this.gradient.angle+"deg,";for(let[t,n]of i.entries())e+=n.value+" "+n.location+"%",t<this.gradient.colours.length-1&&(e+=",");return e+=")"}if("radial"==this.gradient.type){let i=JSON.parse(JSON.stringify(this.gradient.colours)).sort((i,e)=>parseFloat(i.location)-parseFloat(e.location)),e="radial-gradient(circle at "+this.gradient.positionX+"% "+this.gradient.positionY+"%,";for(let[t,n]of i.entries())e+=n.value+" "+n.location+"%",t<this.gradient.colours.length-1&&(e+=",");return e+=")"}},ifEnabled(i){let e=this.modes;return this.uipress.isObject(this.args)?!("modes"in this.args)||!!this.args.modes.includes(i):"solid"==i&&(delete e.gradient,!0)},returnVariable(i){this.colour.value=i.name,this.colour.type="variable",this.colour.gradObject="",this.manualColorInput=this.colour.value},getPreviewBG(){return"background:"+this.returnColorValue+";"},applyGradient(){this.colour.value=this.returnGradient(),this.colour.type=this.gradient.type,this.colour.gradObject=this.gradient,this.returnData(this.colour)},addNewGradCol(){let i=JSON.parse(JSON.stringify(this.gradient.colours[1]));this.gradient.colours.push(i)}},template:'\n    \n    \n    <dropdown pos="left center" :onOpen="mountPicker" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p">\n            <template v-slot:trigger>\n                <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-gap-xxs uip-w-100p">\n                  <div class="uip-border uip-border-round  uip-w-18 uip-ratio-1-1 uip-flex uip-user-frame" :style="getPreviewBG()">\n                  </div>\n                  <input type="text" class="uip-flex-grow uip-input-small uip-blank-input uip-w-100 " style="line-height:1.2em!important;" v-model="manualColorInput">\n                </div>\n            </template>\n            <template v-slot:post-trigger>\n                <button class="uip-button-default uip-border-rounder uip-icon uip-padding-xxs uip-link-muted uip-margin-left-xs" @click="resetColor()">close</button>\n            </template>\n          \n            <template v-slot:content>\n              <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s">\n            \n                <div class="" v-if="args && args.modes.includes(\'solid\') && args.modes.includes(\'gradient\')">\n                  <toggle-switch :options="returnModes" :activeValue="mode" :returnValue="function(data){ mode = data}"></toggle-switch>\n                </div>\n              \n                <div v-if="ifEnabled(\'solid\')" v-show="mode == \'solid\'" class="uip-flex uip-flex-column uip-row-gap-s">\n                  <div class="">\n                    <div class="uip-color-picker" ref="uippicker"></div>\n                    <svg style="display:none">\n                      <defs>\n                        <g id="uip-color-handle">\n                          <circle cx="8" cy="8" r="8" fill="rgba(0,0,0,0)" stroke-width="2" stroke="#fff"></circle>\n                        </g>\n                      </defs>\n                    </svg>\n                  </div>\n                \n                  <div class="uip-flex uip-flex-row uip-gap-xs  uip-padding-bottom-remove uip-flex-start">\n                    <input type="text" class="uip-input uip-flex-grow uip-input-small uip-text-bold uip-w-100p uip-text-muted" :placeholder="strings.colorValue" v-model="manualColorInput">\n                    <div class="uip-border-rounder uip-border uip-w-26 uip-ratio-1-1" :style="getPreviewBG()"></div>\n                  </div>\n                \n                  <div class="uip-flex uip-flex-column uip-row-gap-s" v-if="ifEnabled(\'variables\')">\n                    <div class=" uip-text-bold">{{strings.themeVariables}}</div>\n                    \n                    <div class=" uip-flex uip-flex-row uip-flex-wrap uip-gap-xs uip-row-gap-xs uip-w-240 uip-border-box">\n                        <uip-tooltip :message="strings.manageVariables" :delay="500">\n                          <div>\n                            <div @click="openModal(\'list-variables\', strings.manageVariables)" class="uip-border-rounder uip-background-muted uip-w-18 uip-ratio-1-1 uip-border uip-cursor-pointer uip-flex uip-flex-center uip-flex-middle"><span class=" uip-icon">tune</span></div>\n                          </div>\n                        </uip-tooltip>\n                      <template v-for="item in variables">\n                        <component is="style" scoped v-if="item.value">\n                        .{{item.name}} { {{item.name}}:{{item.value}} };\n                        </component>\n                        <component is="style" scoped v-if="item.darkValue">\n                        .{{item.name}} [data-theme="dark"] { {{item.name}}:{{item.darkValue}} };\n                        </component>\n                        <uip-tooltip v-if="item.type == \'color\'"  :message="item.name" :delay="00">\n                          <div :class="item.name">\n                            <div @click="returnVariable(item)" :data-theme="returnTheme" v-if="item.type = \'color\'" class="uip-border-rounder uip-w-18 uip-ratio-1-1 uip-border uip-cursor-pointer" :style="\'background-color:var(\' + item.name + \')\'"></div>\n                          </div>\n                        </uip-tooltip>\n                      </template>\n                    </div>\n                  </div >\n                </div>\n              \n                \x3c!--Gradient --\x3e\n                <div v-if="ifEnabled(\'gradient\')" v-show="mode == \'gradient\'" class="uip-w-250 uip-padding-xs">\n                  \n                  \x3c!--preview--\x3e\n                  <div class="uip-w-100p uip-ratio-16-10 uip-border-round uip-margin-bottom-xs" :style="\'background:\' + returnGradient()">\n                  </div>\n                  \n                  \x3c!--options--\x3e\n                  <div class="uip-flex uip-flex-column uip-row-gap-s">\n                    <div>\n                      <div class="uip-margin-bottom-xxs uip-text-s">\n                        {{strings.type}}\n                      </div>\n                      <toggle-switch :options="gradientTypes" :activeValue="gradient.type" :returnValue="function(data){ gradient.type = data}"></toggle-switch>\n                    </div>\n                    \n                    <div>\n                      <div class="uip-margin-bottom-xxs uip-text-s">\n                        {{strings.angle}}\n                      </div>\n                      <input class="uip-range uip-w-100p" v-model="gradient.angle" type="range" min="0" max="360">\n                    </div>\n                    \n                    \x3c!--RADIAL Y AND X--\x3e\n                    <div v-if="gradient.type == \'radial\'" class="uip-grid-small uip-flex uip-flex-wrap uip-row-gap-xxs">\n                      <div class="uip-width-medium uip-text-s">\n                        {{strings.positionX}}\n                      </div>\n                      <div class="uip-width-medium uip-text-s">\n                        {{strings.positionY}}\n                      </div>\n                      <div class="uip-width-medium">\n                        <input class="uip-input-small" v-model="gradient.positionX" type="number" min="0" max="100">\n                      </div>\n                      <div class="uip-width-medium">\n                        <input class="uip-input-small" v-model="gradient.positionY" type="number" min="0" max="100">\n                      </div>\n                    </div>\n                    \n                    <div>\n                        <div class="uip-grid-small uip-flex uip-flex-wrap uip-row-gap-xxs">\n                          <div class="uip-width-medium uip-text-s">\n                            {{strings.colour}}\n                          </div>\n                          <div class="uip-width-medium uip-text-s">\n                            {{strings.location}}\n                          </div>\n                          <template v-for="(colorStop, index) in gradient.colours" :key="index">\n                            <div class="uip-width-medium uip-flex uip-flex-row uip-gap-xxs uip-flex-center" >\n                              <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-background-muted uip-border-round uip-overflow-hidden uip-colour-select uip-padding-xxs">\n                                <color-picker :value="colorStop.value" :returnData="function(data){ colorStop.value = data}">\n                                  <template v-slot:trigger>\n                                       <div class="uip-border-round uip-w-18 uip-ratio-1-1 uip-border" :style="\'background-color:\' + colorStop.value"></div>\n                                  </template>\n                                </color-picker>\n                                <input v-model="colorStop.value" type="text" class="uip-blank-input uip-text-s" style="line-height: 1.2em !important">\n                              </div>\n                              <div v-if="gradient.colours.length > 2" class="uip-icon uip-text-l uip-link-muted" @click="gradient.colours.splice(index, 1);">delete</div>\n                            </div>\n                            <div class="uip-width-medium">\n                              <input class="uip-range" v-model="colorStop.location" type="range" min="0" max="100" style="min-width:100%">\n                            </div>\n                          </template>\n                          <div class="uip-width-medium uip-text-s">\n                           <button class="uip-button-default" @click="addNewGradCol()"><span class="uip-icon">add</span></button>\n                          </div>\n                        </div>\n                      </div>\n                    <button class="uip-button-default" @click="applyGradient()">{{strings.applyGradient}}</button>\n                  </div>\n                  \x3c!--End grad options--\x3e\n                </div>\n                \x3c!--End Gradient --\x3e\n              \n              </div>\n            </template>\n          \n        </dropdown>\n      '}};