const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{nextTick}from"../../libs/vue-esm.js";export default{emits:["update"],props:{value:Object},data(){return{spacing:this.returnDefaultOptions,strings:{right:__("Right","uipress-lite"),left:__("Left","uipress-lite"),top:__("Top","uipress-lite"),bottom:__("Bottom","uipress-lite"),custom:__("Custom","uipress-lite"),padding:__("Paddding","uipress-lite"),margin:__("Margin","uipress-lite")},syncOptions:{true:{value:!0,icon:"crop_square",tip:__("Synced","uipress-lite")},false:{value:!1,icon:"crop_free",tip:__("Per side","uipress-lite")}},spacingOptions:{0:{value:"0",label:"0",tip:__("Remove","uipress-lite")},XS:{value:"XS",label:"XS",tip:__("Extra small","uipress-lite")},S:{value:"S",label:"S",tip:__("Small","uipress-lite")},M:{value:"M",label:"M",tip:__("Medium","uipress-lite")},L:{value:"L",label:"L",tip:__("Large","uipress-lite")},XL:{value:"XL",label:"XL",tip:__("Extra large","uipress-lite")},custom:{value:"custom",icon:"more_vert",tip:__("Custom","uipress-lite")}}}},watch:{value:{handler(i,e){this.updating||this.injectProp()},deep:!0,immediate:!0},spacing:{handler(i,e){this.maybeSyncSides(),this.updating||this.$emit("update",this.spacing)},deep:!0}},computed:{returnDefaultOptions:()=>({padding:{preset:"0",sync:!0,units:"px"},margin:{preset:"0",sync:!0,units:"px"}})},methods:{maybeSyncSides(){1==this.spacing.padding.sync&&(this.spacing.padding.right=this.spacing.padding.left,this.spacing.padding.top=this.spacing.padding.left,this.spacing.padding.bottom=this.spacing.padding.left),1==this.spacing.margin.sync&&(this.spacing.margin.right=this.spacing.margin.left,this.spacing.margin.top=this.spacing.margin.left,this.spacing.margin.bottom=this.spacing.margin.left)},async injectProp(){this.updating=!0;const i=this.returnDefaultOptions;switch(this.spacing={...i},this.isObject(this.value)&&("padding"in this.value&&(this.spacing.padding={...i.padding,...this.value.padding}),"margin"in this.value&&(this.spacing.margin={...i.margin,...this.value.margin})),this.spacing.margin.preset){case"remove":this.spacing.margin.preset="0";break;case"small":this.spacing.margin.preset="S";break;case"medium":this.spacing.margin.preset="M";break;case"large":this.spacing.margin.preset="L"}switch(this.spacing.padding.preset){case"remove":this.spacing.padding.preset="0";break;case"small":this.spacing.padding.preset="S";break;case"medium":this.spacing.padding.preset="M";break;case"large":this.spacing.padding.preset="L"}await nextTick(),this.updating=!1},handleUnitChange(i,e){i.left=e.value,i.units=e.units}},template:'\n    \n    \n    <div class="uip-flex uip-flex-column uip-row-gap-xs">\n    \n    \n      \x3c!--Padding --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-flex-start uip-padding-top-xxs"><span>{{strings.padding}}</span></div>\n        \n        <div class="uip-flex uip-flex-column uip-row-gap-xs">\n        \n          <toggle-switch :options="spacingOptions" :activeValue="spacing.padding.preset" :returnValue="function(data){ spacing.padding.preset = data}"></toggle-switch>\n          \n          <div class="uip-flex uip-gap-xs uip-flex-center" v-if="spacing.padding.preset == \'custom\'">\n          \n            <value-units :value="{value: spacing.padding.left, units:spacing.padding.units}" :returnData="(data)=>{handleUnitChange(spacing.padding, data)}" class="uip-flex-grow"/>\n            <toggle-switch :options="syncOptions" :activeValue="spacing.padding.sync" :returnValue="(data)=>{ spacing.padding.sync = data}" style="width:50%"></toggle-switch>\n            \n          </div>\n          \n          <div v-if="!spacing.padding.sync" class="uip-flex uip-flex-row uip-gap-xxxs">\n                  \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.padding.top" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">T</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.padding.right" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">R</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.padding.bottom" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">B</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.padding.left" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">L</div>\n              </div>\n            \n          </div>\n      \n        </div>\n        \n        \n        \n        \n        \x3c!-- Margin --\x3e\n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s uip-flex-start uip-padding-top-xxs"><span>{{strings.margin}}</span></div>\n        \n        <div class="uip-flex uip-flex-column uip-row-gap-xs">\n        \n          <toggle-switch :options="spacingOptions" :activeValue="spacing.margin.preset" :returnValue="function(data){ spacing.margin.preset = data}"></toggle-switch>\n          \n          <div class="uip-flex uip-gap-xs uip-flex-center" v-if="spacing.margin.preset == \'custom\'">\n          \n            <value-units :value="{value: spacing.margin.left, units:spacing.margin.units}" :returnData="(data)=>{handleUnitChange(spacing.margin, data)}" class="uip-flex-grow"/>\n            <toggle-switch :options="syncOptions" :activeValue="spacing.margin.sync" :returnValue="(data)=>{ spacing.margin.sync = data}" style="width:50%"></toggle-switch>\n            \n          </div>\n          \n          <div v-if="!spacing.margin.sync" class="uip-flex uip-flex-row uip-gap-xxxs">\n                  \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.margin.top" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">T</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.margin.right" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">R</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.margin.bottom" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">B</div>\n              </div>\n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-flex-grow">\n                <input class="uip-input-small uip-text-center uip-text-s uip-w-100p uip-flex-grow uip-remove-steps" type="number" v-model="spacing.margin.left" >\n                <div class="uip-text-muted uip-text-xxs uip-text-center">L</div>\n              </div>\n            \n          </div>\n        \n        </div>\n        \n      </div>  \n    \n    </div>\n    \n    '};