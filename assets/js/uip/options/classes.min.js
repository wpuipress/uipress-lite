export default{props:{returnData:Function,value:String,placeHolder:String,args:Object,size:String},inject:["uipData","uipress"],data:()=>({option:"",userInput:"",selected:[],rendered:!1,search:"",allRules:[],strings:{manualPlaceHolder:__("Enter classes seperated by a space","uipress-lite"),searchClasses:__("Search classes","uipress-lite"),search:__("Search","uipress-lite")}}),watch:{option:{handler(e,s){this.returnData(this.option)},deep:!0},userInput:{handler(e,s){if(!e||!this.rendered)return;if(!e.includes(" "))return;let i=e.split(" ");for(const e of i)e&&this.selected.push(e);this.userInput=""}},selected:{handler(e,s){this.returnData(this.selected.join(" "))},deep:!0}},created(){this.parseInput(),this.getClassNames()},computed:{allClasses(){return this.allRules}},methods:{parseInput(){if(!this.value)return;if(this.option=this.value,!this.option.includes(" "))return void this.selected.push(this.option);const e=this.option.split(" ");for(const s of e)s&&this.selected.push(s)},submiteNewClass(e){let s=this.userInput;if(!s)return;if(!s.includes(" "))return this.selected.push(s),void(this.userInput="");let i=s.split(" ");for(const e of i)e&&this.selected.push(e);this.userInput=""},getClassNames(){const e=[],s=Array.from(document.styleSheets);for(const i of s){let s;try{s=Array.from(i.cssRules)}catch(e){continue}for(const i of s){const s=i.selectorText;if(!this.isValidClassSelector(s))continue;const t=s.slice(1);e.push(t)}}e.sort();const i=this.uipData.options.customClasses;Array.isArray(i)&&(i.sort(),e.unshift(...i)),this.allRules=[...new Set(e)]},isValidClassSelector(e){if(!e)return!1;const s=["::"," ","[",">",":","~","#"].some(s=>e.includes(s));return e.startsWith(".")&&!s&&!e.slice(1).includes(".")},removeSelected(e){this.selected.splice(e,1)},inSearch(e){if(!this.search)return!0;let s=e.toLowerCase(),i=this.search.toLowerCase();return!!s.includes(i)||void 0}},template:'\n    <div class="uip-flex uip-flex-column uip-gap-xs uip-w-100p">\n      <div class="uip-flex uip-gap-xxs uip-w-100p uip-flex-wrap">\n      \n        <dropdown pos="left center"  :snapX="[\'#uip-block-settings\', \'#uip-template-settings\', \'#uip-global-settings\']"\n        ref="classDrop">\n          <template v-slot:trigger>\n            <div class="uip-button-default uip-border-rounder uip-icon uip-padding-xxs uip-link-muted">search</div>\n          </template>\n          \n          <template v-slot:content>\n          \n            <div class="uip-flex uip-flex-column uip-row-gap-s uip-padding-s uip-w-240">\n            \n              <div class="uip-flex uip-flex-between uip-flex-center">\n                <div class="uip-text-emphasis uip-text-bold uip-text-s">{{strings.searchClasses}}</div>\n                <div @click.prevent.stop="$refs.classDrop.close()"\n                class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n                  <span class="uip-icon">close</span>\n                </div>\n              </div>\n              \n              <div class="uip-flex uip-background-muted uip-border-rounder uip-padding-xxs uip-flex-center">\n               <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n               <input class="uip-blank-input uip-flex-grow uip-text-s" type="search"  \n               :placeholder="strings.search" v-model="search" autofocus>\n              </div>\n            \n              \n              <div class="uip-flex uip-flex-column uip-max-h-400" style="overflow:auto">\n              \n                <template v-for="className in allClasses">\n                  <div  v-if="inSearch(className)" class="uip-link-muted uip-flex-between uip-flex uip-padding-xxs uip-border-rounder hover:uip-background-muted uip-flex-center"\n                  @click="selected.push(className)">\n                    <div class="">{{className}}</div>\n                    <div class="uip-icon">add</div>\n                  </div>\n                </template>\n              \n              </div>\n              \n            </div>\n          \n          </template>\n        </dropdown>\n        \n        \n        <input type="text" class="uip-input-small uip-flex-grow" v-model="userInput" @keyup.enter.prevent="submiteNewClass($event)" :placeholder="strings.manualPlaceHolder">\n        \n      </div>  \n        \n      <div class="uip-flex uip-gap-xxs uip-w-100p uip-flex-wrap" v-if="selected.length">  \n        <template v-for="(item, index) in selected">\n          <div class="uip-padding-left-xxs uip-padding-right-xxs uip-background-muted uip-border-rounder hover:uip-background-grey uip-flex uip-gap-xxs uip-flex-center">\n            <span class="uip-text-s">{{item}}</span>\n            <a class="uip-link-muted uip-no-underline uip-icon" @click="removeSelected(index)">close</a>\n          </div>\n        </template>\n      </div>\n        \n      </div>\n    '};