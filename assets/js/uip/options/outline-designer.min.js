const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";export default{components:{colorBox:defineAsyncComponent(()=>import("../v3.5/utility/color-box.min.js?ver=3.3.1"))},props:{returnData:Function,value:Object},data(){return{updating:!1,outlineOptions:this.returnDefault,strings:{topleft:__("Top left","uipress-lite"),topright:__("Top right","uipress-lite"),bottomleft:__("Bottom left","uipress-lite"),bottomright:__("Bottom right","uipress-lite"),colour:__("Colour","uipress-lite"),style:__("Style","uipress-lite"),width:__("Width","uipress-lite"),offset:__("Offset","uipress-lite"),outlineColour:__("Outline colour","seql")},borderTypes:[{label:__("Solid","uipress-lite"),value:"solid"},{label:__("Dashed","uipress-lite"),value:"dashed"},{label:__("Dotted","uipress-lite"),value:"dotted"},{label:__("Double","uipress-lite"),value:"double"},{label:__("Groove","uipress-lite"),value:"groove"},{label:__("Ridge","uipress-lite"),value:"ridge"},{label:__("Inset","uipress-lite"),value:"inset"}]}},watch:{value:{handler(t,e){this.updating||this.injectProp(t)},deep:!0,immediate:!0},outlineOptions:{handler(t,e){this.updating||this.returnData(t)},deep:!0}},computed:{returnDefault:()=>({width:{value:"",units:"px"},offset:{value:"",units:"px"},style:"solid",color:{type:"solid",value:""}}),returnOutlineColor(){if(this.outlineOptions.color.value)return this.outlineOptions.color.value.startsWith("--")?`background-color:var(${this.outlineOptions.color.value})`:`background-color:${this.outlineOptions.color.value}`},returnFillScreen(){return{component:"ColorPicker",label:this.strings.outlineColour,value:this.outlineOptions.color.value,returnData:t=>{t.startsWith("--")?this.outlineOptions.color.type="variable":this.outlineOptions.color.type="solid",this.outlineOptions.color.value=t}}}},methods:{async injectProp(){this.updating=!0,this.outlineOptions=this.isObject(this.value)?{...this.returnDefault,...this.value}:this.returnDefault,await this.$nextTick(),this.updating=!1}},template:'\n    \n    \n    <div class="uip-grid-col-1-3">\n    \n    \n      \x3c!--Color --\x3e\n      \n      <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.colour}}</span></div>\n      \n      <colorBox @click="$emit(\'request-screen\', returnFillScreen)"\n      :backgroundStyle="returnOutlineColor" :text="outlineOptions.color.value" :remove="()=>{outlineOptions.color = {}}"/>\n        \n      \n      \n      \x3c!--Style --\x3e\n      \n      <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.style}}</span></div>\n      <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="outlineOptions.style">\n        <template v-for="item in borderTypes">\n          <option :value="item.value">{{item.label}}</option>\n        </template>\n      </select>\n    \n      \n      \x3c!--Width --\x3e\n      \n      <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.width}}</span></div>\n      \n      <value-units :value="outlineOptions.width" :returnData="function(data){outlineOptions.width = data}" class="uip-w-100p"></value-units>\n      \n        \n      \n      \n      \x3c!--offset --\x3e\n      <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.offset}}</span></div>\n      \n      <value-units :value="outlineOptions.offset" :returnData="function(data){outlineOptions.offset = data}" class="uip-w-100p"></value-units>\n      \n      \n        \n          \n    </div>'};