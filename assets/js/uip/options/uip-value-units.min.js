export function moduleData(){return{props:{returnData:Function,value:Object},data:function(){return{option:{value:"",units:"px"},focus:!1,rendered:!1}},inject:["uipress"],watch:{option:{handler(t,e){this.rendered&&("auto"==t.units?this.returnData({value:" ",units:"auto"}):this.returnData(t))},deep:!0},value:{handler(t,e){JSON.stringify(t)!=JSON.stringify(this.option)&&this.formatValue(this.value)},deep:!0}},mounted:function(){this.formatValue(this.value)},computed:{returnOption(){return this.formatValue(this.value),this.option},returnUnits(){return this.option.units}},methods:{formatValue(t){this.uipress.isObject(t)&&(this.option={...this.option,...t}),this.$nextTick(()=>{this.rendered=!0})}},template:'\n    <div v-if="rendered" class="uip-flex uip-background-muted uip-border-rounder uip-padding-left-xs uip-flex-content-stretch uip-w-100p" :class="{\'uip-active-outline\' : focus}">\n      <input v-if="option.units != \'auto\'" @focus="focus = true" @blur="focus = false" style="width:30px" type="text" class="uip-input-small uip-blank-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" v-model="option.value">\n      <units-select :value="returnUnits" :returnData="function(e){option.units = e}" :class=" option.units == \'auto\' ? \'uip-flex-grow\' : \'\' "></units-select>\n    </div>'}};