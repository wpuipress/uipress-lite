const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";import BorderPositions from"../v3.5/lists/border_positions.min.js";import BorderTypes from"../v3.5/lists/border_types.min.js";export default{components:{colorBox:defineAsyncComponent(()=>import("../v3.5/utility/color-box.min.js?ver=3.3.1"))},props:{returnData:Function,value:Object},data(){return{borderOptions:this.returnDefault,strings:{radius:__("Radius","uipress-lite"),topleft:__("Top left","uipress-lite"),topright:__("Top right","uipress-lite"),bottomleft:__("Bottom left","uipress-lite"),bottomright:__("Bottom right","uipress-lite"),colour:__("Colour","uipress-lite"),style:__("Style","uipress-lite"),width:__("Width","uipress-lite"),position:__("Position","uipress-lite"),borderColor:__("Border colour","uipress-lite")},borderPositions:BorderPositions,borderTypes:BorderTypes,updating:!1}},watch:{value:{handler(i,t){this.updating||this.injectProp(i)},deep:!0,immediate:!0},borderOptions:{handler(i,t){this.updating||this.returnData(i)},deep:!0},"borderOptions.radius.value.topleft":{handler(i,t){this.borderOptions.radius.value.sync&&(this.borderOptions.radius.value.topright=this.borderOptions.radius.value.topleft,this.borderOptions.radius.value.bottomleft=this.borderOptions.radius.value.topleft,this.borderOptions.radius.value.bottomright=this.borderOptions.radius.value.topleft)},deep:!0}},computed:{returnDefault:()=>({width:{value:"",units:"px"},style:"solid",color:{type:"solid",value:""},position:"solid",radius:{value:{sync:!0,topleft:"",topright:"",bottomleft:"",bottomright:"",units:"px"}}}),returnBorderColor(){if(this.borderOptions.color.value)return this.borderOptions.color.value.startsWith("--")?`background-color:var(${this.borderOptions.color.value})`:`background-color:${this.borderOptions.color.value}`},returnFillScreen(){return{component:"ColorPicker",label:this.strings.borderColor,value:this.borderOptions.color.value,returnData:i=>{i.startsWith("--")?this.borderOptions.color.type="variable":this.borderOptions.color.type="solid",this.borderOptions.color.value=i}}}},methods:{async injectProp(){this.updating=!0,this.borderOptions=this.isObject(this.value)?{...this.returnDefault,...this.value}:this.returnDefault,await this.$nextTick(),this.updating=!1}},template:'\n    \n    \n    <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-left-xs">\n    \n    \n      \x3c!--Color --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.colour}}</span></div>\n        \n        <colorBox @click="$emit(\'request-screen\', returnFillScreen)"\n        :backgroundStyle="returnBorderColor" :text="borderOptions.color.value" :remove="()=>{borderOptions.color.value = \'\'}"/>\n        \n      </div>\n    \n    \n      \x3c!--Position --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.position}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <toggle-switch :options="borderPositions" :activeValue="borderOptions.position" :returnValue="function(data){ borderOptions.position = data}"></toggle-switch>\n      \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--Style --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.style}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="borderOptions.style">\n            <template v-for="item in borderTypes">\n              <option :value="item.value">{{item.label}}</option>\n            </template>\n          </select>\n      \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--Width --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.width}}</span></div>\n        <value-units :value="borderOptions.width" :returnData="function(data){borderOptions.width = data}" class="uip-w-100p"></value-units>\n        \n      </div>\n      \n      \n      \x3c!--Radius --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.radius}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-right uip-flex-column uip-row-gap-xs">\n        \n          <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right">\n          \n            <div class="uip-flex uip-flex-row uip-padding-xxxs uip-background-muted uip-border-round">\n              <div class="uip-icon uip-icon-m uip-text-xl uip-link-muted  uip-border-round" @click="borderOptions.radius.value.sync = true"\n              :class="{\'uip-background-default uip-text-emphasis\' : borderOptions.radius.value.sync}">crop_square</div>\n              <div class="uip-icon uip-icon-m uip-text-xl uip-link-muted  uip-border-round" @click="borderOptions.radius.value.sync = false"\n              :class="{\'uip-background-default uip-text-emphasis\' : !borderOptions.radius.value.sync}">crop_free</div>\n            </div>\n            \n            <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center uip-flex-grow" v-if="borderOptions.radius.value.sync">\n                <input class="uip-blank-input uip-text-center uip-w-60 uip-text-s" v-model="borderOptions.radius.value.topleft" >\n            </div>\n            \n            <div class="uip-background-muted uip-border-round">\n             <units-select :value="borderOptions.radius.value.units" :returnData="function(e){borderOptions.radius.value.units = e}"></units-select>\n            </div>\n          \n          </div>\n        \n        </div>  \n        \n        \x3c!--Spacer--\x3e\n        <div v-if="!borderOptions.radius.value.sync"></div>\n        \n        \n        <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right" v-if="!borderOptions.radius.value.sync">\n        \n          <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right">\n            \n              <uip-tooltip :message="strings.topleft" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="borderOptions.radius.value.topleft" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.topright" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="borderOptions.radius.value.topright" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.bottomleft" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="borderOptions.radius.value.bottomleft" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.bottomright" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center" >\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="borderOptions.radius.value.bottomright" >\n                </div>\n              </uip-tooltip>\n            \n            </div>\n          \n          </div>\n        \n        </div>\n        \n          \n    </div>'};