const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm-dev.js";export default{components:{colorBox:defineAsyncComponent(()=>import("../v3.5/utility/color-box.min.js?ver=3.2.12")),screenControl:defineAsyncComponent(()=>import("../v3.5/utility/screen-control.min.js?ver=3.2.12")),colorPicker:defineAsyncComponent(()=>import("../v3.5/styles/color-picker.min.js?ver=3.2.12")),colourStyleEditor:defineAsyncComponent(()=>import("../v3.5/styles/color-style-editor.min.js?ver=3.2.12"))},props:{returnData:Function,value:Object,args:Object},data:()=>({colour:{value:"",type:"solid"},strings:{colorPicker:__("Colour picker","uipress-lite")}}),watch:{value:{handler(e,n){this.formatValue()}}},mounted(){this.formatValue()},computed:{returnFillStyle(){if(!("value"in this.colour))return;if(!this.colour.value)return;const e=this.colour.value;return e.includes("--")?`background:var(${e})`:`background:${e}`},colourPickerScreen(){return{component:"colorPicker",value:this.colour.value,label:this.strings.colorPicker,returnData:e=>{this.colour.value=e}}}},methods:{formatValue(){this.isObject(this.value)&&(this.colour={...this.colour,...this.value})}},template:'\n    \n    \n    <dropdown pos="left center" \n    :snapX="[\'#uip-block-settings\', \'#uip-template-settings\', \'#uip-global-settings\']" \n    ref="fillDrop" class="uip-w-100p">\n    \n      <template #trigger>\n        <colorBox :backgroundStyle="returnFillStyle" :text="this.colour.value" :remove="()=>{this.colour.value = \'\'}"/>\n      </template>\n      \n      <template #content>\n      \n        <div class="uip-padding-s uip-w-240">\n        \n          <screenControl :startScreen="colourPickerScreen" :homeScreen="colourPickerScreen.component" :closer="$refs.fillDrop.close" :showNavigation="true">\n            \n            <template #componenthandler="{ processScreen, currentScreen, goBack }">\n              <KeepAlive>\n                <component @request-screen="(d)=>{processScreen(d)}" @go-back="goBack()"\n                :returnData="currentScreen.returnData"\n                :value="currentScreen.value"\n                :args="currentScreen.args"\n                :is="currentScreen.component"/>\n              </KeepAlive>\n            </template>\n            \n          </screenControl>\n        </div>\n        \n      </template>\n      \n    </dropdown>\n      '};