const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{defineAsyncComponent,nextTick}from"../../libs/vue-esm.js";import"../../libs/ace-editor.min.js";import"../../libs/ace-editor-css.min.js";import"../../libs/ace-editor-javascript.min.js";import"../../libs/ace-editor-html.min.js";import"../../libs/ace-theme-dracular.min.js";import"../../libs/ace-editor-beautify.min.js";import"../../libs/ace-theme-xcode.min.js";export default{components:{Modal:defineAsyncComponent(()=>import("../v3.5/utility/modal.min.js?ver=3.3.1"))},props:{returnData:Function,value:String,args:Object},data(){return{option:"",editor:Object,language:this.args.language,fullScreen:!1,finalVal:"",modalOpen:!1,updating:!1,changed:!1,strings:{openFullscreen:__("Fullscreen","uipress-lite"),closeFullscreen:__("Exit fullscreen","uipress-lite"),codeEditor:__("Code editor","uipress-lite"),editCode:__("Edit code","uipress-lite"),add:__("Add","uipress-lite"),updateCode:__("Update code","uipress-lite"),discard:__("Discard changes","uipress-lite")}}},mounted(){this.option=this.value},watch:{value:{handler(e,i){this.updating||this.injectProp()},deep:!0,immediate:!0},option:{handler(e,i){this.updating||this.returnData(this.option)},deep:!0}},computed:{returnCode(){return this.option}},methods:{async injectProp(){this.updating=!0,this.option=this.value,await this.$nextTick(),this.updating=!1},initiateEditor(){switch(this.beautify=ace.require("ace/ext/beautify"),this.editor=ace.edit(this.$refs.codeeditor),this.editor.setTheme("ace/theme/xcode"),this.editor.session.setUseWrapMode(!0),this.editor.setShowPrintMargin(!1),this.editor.container.style.lineHeight=1.6,this.editor.renderer.updateFontSize(),this.editor.setHighlightActiveLine(!1),this.changed=!1,this.editor.setOptions({maxLines:1/0,tabSize:3,wrap:1,indentedSoftWrap:!1,fontSize:"0.8rem",indentedSoftWrap:!0,useWorker:!1,fontSize:"12px"}),this.language||(this.language="css"),this.language){case"css":this.editor.session.setMode("ace/mode/css");break;case"javascript":this.editor.session.setMode("ace/mode/javascript");break;case"html":this.editor.session.setMode("ace/mode/html")}const e=structuredClone(this.option);this.editor.setValue(e,-1),this.beautify.beautify(this.editor.session);this.editor.session.on("change",()=>{this.changed=!0,this.finalVal=this.editor.getValue()})},saveCode(){this.option=this.changed?this.finalVal:this.option,this.$refs.codemodal.close(),this.uipApp.notifications.notify(__("Code updated","uipress-lite"),"","success")},clearCode(){this.option=""},async showModal(){this.$refs.codemodal.open(),await nextTick(),this.initiateEditor()}},template:'\n    \n    \n    <div class="uip-w-100p">\n    \n        <component is="style">\n          .ace-xcode .ace_gutter{background:transparent;}\n          .ace_gutter-cell{color:var(--uip-text-color-muted);opacity:0.6}\n          .ace-xcode .ace_gutter-active-line {\n              background:transparent;\n              color: var(--uip-text-color-emphasis);\n              font-weight: bolder;\n              opacity:1;\n          }\n          .ace_scrollbar {\n              display: none;\n          }\n          .ace_editor:hover .ace_scrollbar {\n              display: block;\n          }\n          .ace_editor {background:transparent}\n          html[data-theme="dark"] .ace_editor .ace_scroller{filter: invert(100%) saturate(0.8);}\n        </component>\n    \n        <button class="uip-button-default uip-border-rounder uip-padding-xxs uip-w-100p uip-flex uip-gap-xs uip-flex-center uip-text-left" @click="showModal">\n        \n          <div class="uip-background-primary uip-text-inverse uip-border-round uip-padding-xxxs"><span class="uip-icon">code</span></div>\n          \n          <span v-if="!returnCode" class="uip-text-s uip-link-muted uip-flex-grow">{{strings.add}}...</span>\n          <span v-else class="uip-text-s uip-flex-grow">{{strings.editCode}}</span>\n          \n          <a @click.prevent.stop="clearCode"\n          v-if="returnCode"\n          class="uip-no-underline uip-border-rounder uip-padding-xxxs uip-link-muted uip-text-s"><span class="uip-icon">close</span></a>\n          \n        </button>\n        \n        \n        <Modal ref="codemodal">\n            \n            <div class="uip-padding-m uip-w-600 uip-flex uip-flex-column uip-row-gap-m">\n            \n              <div class="uip-flex uip-flex-between uip-flex-center">\n                <span class="uip-text-bold">{{strings.codeEditor}}</span>\n                <span class="uip-icon uip-link-muted hover:uip-background-muted uip-padding-xxs uip-border-rounder" @click="$refs.codemodal.close()">close</span>\n              </div>\n            \n              \n              <div class="uip-max-h-500 uip-min-h-400" style="overflow:scroll">\n                <div class="" ref="codeeditor">\n                </div>\n              </div>\n              \n              \n              <div class="uip-flex uip-flex-between">\n                <button class="uip-button-default uip-background-grey" @click="$refs.codemodal.close()">{{strings.discard}}</button>\n                <button class="uip-button-primary" @click="saveCode()">{{strings.updateCode}}</button>\n              </div>\n            \n            </div> \n            \n          \n        </Modal>\n          \n          \n         \n    \n    \n    </div>\n    \n    '};