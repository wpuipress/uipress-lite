const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{returnData:Function,value:Object,blockSettings:Object},data:function(){return{open:!1,options:{type:"post",postType:["post"],order:"DESC",orderBy:"date",roles:[],orderBykEY:"",perPage:20,status:["publish"],relation:"AND",taxRelation:"AND",offset:"",taxQuery:[],metaQuery:[],limitToAuthor:!1,showPagination:!1,search:!1},strings:{type:__("Type","uipress-lite"),postType:__("Post type","uipress-lite"),orderBy:__("Order by","uipress-lite"),perPage:__("Per page","uipress-lite"),offset:__("Offset","uipress-lite"),metaQuery:__("Meta query","uipress-lite"),taxQuery:__("Tax query","uipress-lite"),postTypes:__("Post types","uipress-lite"),searchPostTypes:__("Search post types","uipress-lite"),metaKey:__("Meta key","uipress-lite"),metaValue:__("Meta value","uipress-lite"),terms:__("Terms","uipress-lite"),compare:__("Compare","uipress-lite"),order:__("Order","uipress-lite"),metaKey:__("Meta key","uipress-lite"),status:__("Status","uipress-lite"),relation:__("Relation","uipress-lite"),postStatus:__("Post statuses","uipress-lite"),seacrhPostStatus:__("Search post statuses","uipress-lite"),pagination:__("Pagination","uipress-lite"),roles:__("Roles","uipress-lite"),searchRoles:__("Search roles","uipress-lite"),search:__("Search","uipress-lite"),usersOwnContent:__("Limit to users own content","uipress-lite"),taxonomy:__("Taxonomy","uipress-lite"),field:__("Field","uipress-lite"),taxValue:__("Tax value","uipress-lite"),includeChildren:__("Include children","uipress-lite")},fieldTypes:{term_id:{value:"term_id",label:"term_id"},name:{value:"name",label:"name"},slug:{value:"slug",label:"slug"},term_taxonomy_id:{value:"term_taxonomy_id",label:"term_taxonomy_id"}},queryType:{post:{value:"post",label:__("Posts","uipress-lite")},user:{value:"user",label:__("Users","uipress-lite")}},relationOptions:{AND:{value:"AND",label:__("AND","uipress-lite")},OR:{value:"OR",label:__("OR","uipress-lite")}},comparisons:[{value:"=",label:__("Equal","uipress-lite")},{value:"!=",label:__("Not equal","uipress-lite")},{value:">",label:__("Greater than","uipress-lite")},{value:">=",label:__("Greater than or equal","uipress-lite")},{value:"<",label:__("Lesser than","uipress-lite")},{value:"<=",label:__("Lesser than or equal","uipress-lite")},{value:"LIKE",label:__("LIKE","uipress-lite")},{value:"NOT LIKE",label:__("NOT LIKE","uipress-lite")},{value:"IN",label:__("IN","uipress-lite")},{value:"NOT IN",label:__("NOT IN","uipress-lite")}],dataTypes:[{value:"NUMERIC",label:__("NUMERIC","uipress-lite")},{value:"CHAR",label:__("CHAR","uipress-lite")},{value:"DATE",label:__("DATE","uipress-lite")},{value:"DATETIME",label:__("DATETIME","uipress-lite")},{value:"DECIMAL",label:__("DECIMAL","uipress-lite")},{value:"SIGNED",label:__("SIGNED","uipress-lite")},{value:"TIME",label:__("TIME","uipress-lite")},{value:"UNSIGNED",label:__("UNSIGNED","uipress-lite")}],orderDirectionsOptions:{DESC:{value:"DESC",label:__("Descending","uipress-lite")},ASC:{value:"ASC",label:__("Ascending","uipress-lite")}},showPagination:{false:{value:!1,label:__("Hide","uipress-lite")},true:{value:!0,label:__("Show","uipress-lite")}},orderByOptions:[{value:"none",label:__("None","uipress-lite")},{value:"ID",label:__("ID","uipress-lite")},{value:"author",label:__("Author","uipress-lite")},{value:"title",label:__("Title","uipress-lite")},{value:"name",label:__("Name","uipress-lite")},{value:"type",label:__("Poast type","uipress-lite")},{value:"date",label:__("Date","uipress-lite")},{value:"modified",label:__("Modified","uipress-lite")},{value:"rand",label:__("Random","uipress-lite")},{value:"comment_count",label:__("Commend count","uipress-lite")},{value:"meta_value",label:__("Meta value","uipress-lite")}],orderByOptionsUser:[{value:"none",label:__("None","uipress-lite")},{value:"ID",label:__("ID","uipress-lite")},{value:"display_name",label:__("Name","uipress-lite")},{value:"user_name",label:__("Username","uipress-lite")},{value:"user_login",label:__("User login","uipress-lite")},{value:"user_nicename",label:__("Nicename","uipress-lite")},{value:"user_email",label:__("Email","uipress-lite")},{value:"user_registered",label:__("Registered date","uipress-lite")},{value:"post_count",label:__("Post count","uipress-lite")},{value:"rand",label:__("Random","uipress-lite")},{value:"meta_value",label:__("Meta value","uipress-lite")}],orderByOptionsSites:[{value:"none",label:__("None","uipress-lite")},{value:"ID",label:__("ID","uipress-lite")},{value:"domain",label:__("Domain","uipress-lite")},{value:"path",label:__("Path","uipress-lite")},{value:"network_id",label:__("Network ID","uipress-lite")},{value:"last_updated",label:__("Last updated","uipress-lite")},{value:"registered",label:__("Registered","uipress-lite")},{value:"domain_length",label:__("Domain length","uipress-lite")},{value:"path_length",label:__("Path length","uipress-lite")}]}},inject:["uipress","uipData"],watch:{options:{handler(e,i){this.returnData(e)},deep:!0}},mounted:function(){this.formatValue(this.value),this.uipData.options.multisite&&(this.queryType.site={value:"site",label:__("Sites","uipress-lite")})},computed:{returnAlignOptions(){return"horizontal"==this.options.direction?this.alignments:this.verticalAlignments},returnOrderOptions(){return"post"==this.options.type?this.orderByOptions:"user"==this.options.type?this.orderByOptionsUser:"site"==this.options.type?this.orderByOptionsSites:void 0}},methods:{formatValue(e){void 0!==e&&this.uipress.isObject(e)&&(this.options={...this.options,...e})},defaultMetaQuery:()=>structuredClone({key:"",value:"",compare:"=",type:"CHAR"}),defaultTaxQuery:()=>structuredClone({taxonomy:"",value:"",fieldType:"term_id",compare:"=",includeChildren:!0}),returnTaxPostTypes:e=>e.toString()},template:'\n      <div class="uip-flex uip-flex-column uip-row-gap-xs">\n        \n        \n        \x3c!--Type --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.type}}</span></div>\n            \n          <div class="uip-position-relative">\n            <toggle-switch :options="queryType" :activeValue="options.type" :returnValue="function(data){ options.type = data}"></toggle-switch>\n          </div>\n          \n        </div>\n        \n        \n        \n        \n        \n        \x3c!--Post Type --\x3e\n        <div v-if="options.type == \'post\'" class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.postType}}</span></div>\n            \n          <div class="uip-position-relative">\n            <post-type-select :selected="options.postType" :placeHolder="strings.postTypes"\n            :searchPlaceHolder="strings.searchPostTypes" :updateSelected="function(d){options.postType = d}" />\n          </div>\n          \n        </div>\n        \n        \n        \x3c!--Role select --\x3e\n        <div v-if="options.type == \'user\'" class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.roles}}</span></div>\n            \n          <div class="uip-position-relative">\n            <user-role-select type="roles" :selected="options.roles" :placeHolder="strings.roles"\n            :searchPlaceHolder="strings.searchRoles" :updateSelected="function(d){options.roles = d}" />\n          </div>\n          \n        </div>\n        \n        \n        \x3c!--Status --\x3e\n        <div class="uip-grid-col-1-3" v-if="options.type == \'post\'">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.status}}</span></div>\n          \n          <div class="uip-position-relative uip-flex uip-gap-xs">\n            <multi-select :availableOptions="uipData.options.post_statuses" :selected="options.status" :placeHolder="strings.postStatus"\n            :searchPlaceHolder="strings.seacrhPostStatus" :updateSelected="function(d){options.status = d}" />\n          </div>\n          \n        </div>\n        \n        \n        \x3c!--Order by--\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.order}}</span></div>\n            \n          <div class="uip-position-relative">\n            \n            <dropdown pos="left center" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p">\n              <template v-slot:trigger>\n                <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-padding-left-xs uip-flex uip-gap-xs uip-w-100p">\n                  <div class="uip-text-capitalize uip-flex uip-gap-xxs">\n                    <span>{{options.orderBy}}</span>\n                    <span class="uip-text-muted">|</span>\n                    <span class="uip-text-muted">{{options.order}}</span>\n                  </div>\n                </div>\n              </template>\n              <template v-slot:content>\n                <div class="uip-padding-s uip-border-bottom uip-text-bold">\n                  {{strings.orderBy}}\n                </div>\n                <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-xs">\n                \n                  \x3c!--ORDER--\x3e\n                  <div class="uip-grid-col-1-3">\n                    <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.order}}</span></div>\n                    <div class="uip-position-relative">\n                      <toggle-switch :options="orderDirectionsOptions" :activeValue="options.order" :returnValue="function(data){ options.order = data}"></toggle-switch>\n                    </div>\n                  </div>\n                  \n                  \x3c!--Orderby--\x3e\n                  <div class="uip-grid-col-1-3">\n                    <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.orderBy}}</span></div>\n                    <div class="uip-position-relative">\n                      <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="options.orderBy">\n                        <template v-for="item in returnOrderOptions">\n                          <option :value="item.value">{{item.label}}</option>\n                        </template>\n                      </select>\n                    </div>\n                  </div>\n                  \n                  \x3c!--Meta key--\x3e\n                  <div v-if="options.orderBy == \'meta_value\'" class="uip-grid-col-1-3">\n                    <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.metaKey}}</span></div>\n                    <div class="uip-position-relative">\n                      <input type="text" min="0" class="uip-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" v-model="options.orderBykEY">\n                    </div>\n                  </div>\n                  \n                </div>\n              </template>\n            </dropdown>\n            \n            \n          </div>\n          \n        </div>\n        \n        \n        \n        <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n        \n        \x3c!--Per page --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.perPage}}</span></div>\n            \n          <div class="uip-position-relative uip-flex uip-gap-xs">\n            <input type="number" min="1" class="uip-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" style="width: 30px;" v-model="options.perPage">\n            \n            <div class="uip-padding-xxs uip-border-rounder uip-background-muted uip-flex uip-gap-xxs uip-no-text-select">\n              <div class="uip-link-muted uip-icon uip-text-l" @click="options.perPage = parseInt(options.perPage) - 1">remove</div>\n              <div class="uip-border-right"></div>\n              <div class="uip-link-muted uip-icon uip-text-l" @click="options.perPage = parseInt(options.perPage) + 1">add</div>\n            </div>\n          </div>\n          \n        </div>\n        \n        \n        \n        \n        \n        \x3c!--Offset --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.offset}}</span></div>\n            \n          <div class="uip-position-relative uip-flex uip-gap-xs">\n            <input type="number" min="0" class="uip-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" style="width: 30px;" v-model="options.offset">\n            \n            <div class="uip-padding-xxs uip-border-rounder uip-background-muted uip-flex uip-gap-xxs uip-no-text-select">\n              <div class="uip-link-muted uip-icon uip-text-l" @click="options.offset = parseInt(options.offset) - 1">remove</div>\n              <div class="uip-border-right"></div>\n              <div class="uip-link-muted uip-icon uip-text-l" @click="options.offset = parseInt(options.offset) + 1">add</div>\n            </div>\n          </div>\n          \n        </div>\n        \n        <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n        \n        \n        \x3c!--Meta query--\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.metaQuery}}</span></div>\n            \n          <div v-if="options.metaQuery.length === 0" class="uip-position-relative">\n            \n            <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-w-100p" \n            @click="options.metaQuery.push(defaultMetaQuery())">add</button>\n            \n          </div>\n          \n          <template v-for="(meta, index) in options.metaQuery">\n          \n            <div v-if="index > 0"></div>\n          \n            <div class="uip-flex uip-gap-xs uip-row-gap-xs uip-flex-center">\n            \n              <dropdown pos="left center" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p">\n                <template v-slot:trigger>\n                  <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-padding-left-xs uip-flex uip-gap-xs uip-w-100p">\n                    <div class="uip-flex uip-gap-xxs">\n                      <span>{{meta.key}}</span>\n                      <span v-if="meta.type && meta.key" class="uip-text-muted">|</span>\n                      <span class="uip-text-muted">{{meta.type}}</span>\n                    </div>\n                  </div>\n                </template>\n                <template v-slot:content>\n                \n                \n                  <div class="uip-flex uip-flex-column uip-gap-s uip-padding-s">\n                  \n                    <div class="uip-text-bold">\n                      {{strings.metaQuery}}\n                    </div>\n                    \n                    <div class="uip-border-bottom"></div>\n                    \n                    <div class="uip-flex uip-flex-column uip-row-gap-xs">\n                    \n                      \x3c!--Meta key--\x3e\n                      <div class="uip-grid-col-1-3">\n                        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.metaKey}}</span></div>\n                        <div class="uip-position-relative">\n                          <input type="text" min="0" class="uip-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" v-model="meta.key">\n                        </div>\n                      </div>\n                      \n                      \x3c!--Meta value--\x3e\n                      <div class="uip-grid-col-1-3">\n                        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.metaValue}}</span></div>\n                        <div class="uip-position-relative">\n                          <input type="text" min="0" class="uip-input uip-remove-steps uip-background-remove uip-padding-xxxs uip-flex-grow" v-model="meta.value">\n                        </div>\n                      </div>\n                      \n                      \x3c!--Compare--\x3e\n                      <div class="uip-grid-col-1-3">\n                        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.compare}}</span></div>\n                        <div class="uip-position-relative">\n                          <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="meta.compare">\n                            <template v-for="item in comparisons">\n                              <option :value="item.value">{{item.label}}</option>\n                            </template>\n                          </select>\n                        </div>\n                      </div>\n                      \n                      \x3c!--Compare--\x3e\n                      <div class="uip-grid-col-1-3">\n                        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.type}}</span></div>\n                        <div class="uip-position-relative">\n                          <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="meta.type">\n                            <template v-for="item in dataTypes">\n                              <option :value="item.value">{{item.label}}</option>\n                            </template>\n                          </select>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  \n                  </div>\n                </template>\n              </dropdown>\n              \n              <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="options.metaQuery.splice(index, 1)">close</button>\n            \n            </div>\n          \n          \n          </template>\n          \n          \n          <template v-if="options.metaQuery.length > 0">\n          \n            <div></div>\n              \n            <div class="uip-position-relative">\n              \n              <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-w-100p" \n              @click="options.metaQuery.push(defaultMetaQuery())">add</button>\n              \n            </div>\n          \n          </template>\n          \n        </div>\n        \n        \n        \n        \n        \x3c!--Relation --\x3e\n        <div class="uip-grid-col-1-3" v-if="options.metaQuery.length > 0">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.relation}}</span></div>\n            \n          <div class="uip-position-relative">\n            <toggle-switch :options="relationOptions" :activeValue="options.relation" :returnValue="function(data){ options.relation = data}"></toggle-switch>\n          </div>\n          \n        </div>\n        \n        <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \x3c!--Tax query--\x3e\n        <template v-if="options.type == \'post\'">\n        \n          <div class="uip-grid-col-1-3">\n          \n            <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.taxQuery}}</span></div>\n              \n            <div v-if="options.taxQuery.length === 0" class="uip-position-relative">\n              \n              <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-w-100p" \n              @click="options.taxQuery.push(defaultTaxQuery())">add</button>\n              \n            </div>\n            \n            <template v-for="(tax, index) in options.taxQuery">\n            \n              <div v-if="index > 0"></div>\n            \n              <div class="uip-flex uip-gap-xs uip-row-gap-xs uip-flex-center">\n              \n                <dropdown pos="left center" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p">\n                  <template v-slot:trigger>\n                    <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-padding-left-xs uip-flex uip-gap-xs uip-w-100p">\n                      <div class="uip-flex uip-gap-xxs">\n                        <span class="uip-text-muted">{{tax.taxonomy}}</span>\n                        <span v-if="tax.taxonomy && tax.fieldType" class="uip-text-muted">|</span>\n                        <span class="uip-text-muted">{{tax.fieldType}}</span>\n                      </div>\n                    </div>\n                  </template>\n                  <template v-slot:content>\n                  \n                    <div class="uip-flex uip-flex-column uip-gap-s uip-padding-s">\n                    \n                      <div class="uip-text-bold">\n                        {{strings.taxQuery}}\n                      </div>\n                      \n                      <div class="uip-border-bottom"></div>\n                      \n                      <div class="uip-flex uip-flex-column uip-row-gap-xs">\n                      \n                        \x3c!--tax key--\x3e\n                        <div class="uip-grid-col-1-3">\n                          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.taxonomy}}</span></div>\n                          <div class="uip-position-relative">\n                          \n                            <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="tax.taxonomy">\n                              <template v-for="item in uipData.options.taxonomies">\n                                <option :value="item.name">\n                                  {{item.label}} \n                                  ({{returnTaxPostTypes(item.object_type)}})\n                                </option>\n                              </template>\n                            </select>\n                            \n                          </div>\n                         \n                        </div>\n                        \n                        \x3c!--tax value--\x3e\n                        <div class="uip-grid-col-1-3">\n                          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.taxValue}}</span></div>\n                          <div class="uip-position-relative">\n                            <input placeholder="term_1, term_2"\n                            type="text" min="0" class="uip-input-small uip-w-100p" v-model="tax.value">\n                          </div>\n                        </div>\n                        \n                        \n                        \n                        \n                        \x3c!--Field type--\x3e\n                        <div class="uip-grid-col-1-3">\n                          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.field}}</span></div>\n                          <div class="uip-position-relative">\n                            <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="tax.fieldType">\n                              <template v-for="item in fieldTypes">\n                                <option :value="item.value">{{item.label}}</option>\n                              </template>\n                            </select>\n                          </div>\n                        </div>\n                        \n                        \x3c!--Compare--\x3e\n                        <div class="uip-grid-col-1-3">\n                          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.compare}}</span></div>\n                          <div class="uip-position-relative">\n                            <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="tax.compare">\n                              <template v-for="item in comparisons">\n                                <option :value="item.value">{{item.label}}</option>\n                              </template>\n                            </select>\n                          </div>\n                        </div>\n                        \n                        \x3c!--Include children--\x3e\n                        <div class="uip-grid-col-1-3">\n                          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.includeChildren}}</span></div>\n                          <div class="uip-position-relative">\n                            <switch-select :args="{asText: true}" :activeValue="tax.includeChildren" :returnValue="function(data){ tax.includeChildren = data}"/>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    \n                    </div>\n                    \n                  </template>\n                </dropdown>\n                \n                <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="options.taxQuery.splice(index, 1)">close</button>\n              \n              </div>\n            \n            \n            </template>\n            \n            \n            <template v-if="options.taxQuery.length > 0">\n            \n              <div></div>\n                \n              <div class="uip-position-relative">\n                \n                <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-w-100p" \n                @click="options.taxQuery.push(defaultTaxQuery())">add</button>\n                \n              </div>\n            \n            </template>\n            \n          </div>\n          \n          \n          \n          \n          \x3c!--Relation --\x3e\n          <div class="uip-grid-col-1-3" v-if="options.taxQuery.length > 0">\n          \n            <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.relation}}</span></div>\n              \n            <div class="uip-position-relative">\n              <toggle-switch :options="relationOptions" :activeValue="options.taxRelation" :returnValue="function(data){ options.taxRelation = data}"></toggle-switch>\n            </div>\n            \n          </div>\n          \n          <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n        \n        \n        \n        \n        </template>\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \x3c!--Has own content --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.usersOwnContent}}</span></div>\n            \n          <div class="uip-position-relative">\n            <switch-select :args="{asText: true}" :activeValue="options.limitToAuthor" :returnValue="function(data){ options.limitToAuthor = data}"></switch-select>\n          </div>\n          \n        </div>\n        \n        \x3c!--Pagination --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.pagination}}</span></div>\n            \n          <div class="uip-position-relative">\n            <toggle-switch :options="showPagination" :activeValue="options.showPagination" :returnValue="function(data){ options.showPagination = data}"></toggle-switch>\n          </div>\n          \n        </div>\n        \n        \x3c!--Search --\x3e\n        <div class="uip-grid-col-1-3">\n        \n          <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.search}}</span></div>\n            \n          <div class="uip-position-relative">\n            <toggle-switch :options="showPagination" :activeValue="options.search" :returnValue="function(data){ options.search = data}"></toggle-switch>\n          </div>\n          \n        </div>\n        \n        \n        \n        \n        \n      </div>'}};