export default{props:{message:String,delay:Number,containerClass:String},data:()=>({showTip:!1,tipDisplayed:!1}),methods:{setPosition(){if(!this.$el)return;const t=this.$refs.tiptrigger;if(!t)return;const e=t.getBoundingClientRect(),i=e.bottom,s=e.width/2;return`top:${i+10}px;left:${this.$el.getBoundingClientRect().left+s}px;transform:translateX(-50%);`},justTheTip(){this.showTip=!0,setTimeout(()=>{this.showTip?this.tipDisplayed=!0:this.tipDisplayed=!1},this.delay)},hideTip(){this.showTip=!1,this.tipDisplayed=!1}},template:'\n  \n          <div :class="containerClass" @mouseover="justTheTip()" @mouseleave="hideTip()" ref="tiptrigger">\n      \n\t\t    <slot></slot>\n        \n            <template v-if="message && message != \'\'">\n\t\t          <div v-if="tipDisplayed" :style="setPosition()" class="uip-tooltip" ref="dynamictip">\n              {{message}}\n              </div>\n            </template>\n            \n\t      </div>\n        \n        '};