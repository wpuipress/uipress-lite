export default{props:{openOnTick:Boolean,titleClass:String,startOpen:Boolean,padding:Boolean},data:()=>({open:!1}),watch:{startOpen:{handler(e,i){this.open=e},immediate:!0}},computed:{hasFooterSlot(){return!!this.$slots.content},returnClasses(){return this.titleClass?this.titleClass:"uip-margin-bottom-xxs uip-text-bold uip-text-emphasis uip-link-default"}},methods:{toggleOpen(){this.open=!this.open}},template:'\n        <div>\n      \n          <div @click="toggleOpen()"\n          class="uip-flex uip-cursor-pointer uip-flex-middle uip-flex-center uip-flex-between uip-accordion-title uip-gap-s " :class="returnClasses">\n          \n            <slot name="title"></slot>\n            \n            <div v-if="hasFooterSlot" class="uip-ratio-1-1 uip-icon uip-padding-xxxs uip-accordion-trigger uip-icon-medium uip-text-l uip-line-height-1" type="button" >\n              <span v-if="!open">add</span>\n              <span v-if="open">remove</span>\n            </div>\n            \n          </div>\n          \n          <div v-if="open && hasFooterSlot" class="uip-padding-s uip-padding-right-remove uip-scale-in-top-right" :class="padding ? \'\' : \'uip-padding-left-remove\'">\n            <slot name="content"></slot>\n          </div>\n          \n        </div>\n      '};