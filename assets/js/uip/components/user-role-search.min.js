export default{props:{selected:Array,searchPlaceHolder:String,updateSelected:Function,returnType:String},data(){return{loading:!1,searchString:"",options:[],selectedOptions:this.selected,ui:{dropOpen:!1},strings:{userSearch:__("User search","uipress-lite")}}},computed:{formattedOptions(){return this.options}},watch:{searchString:{handler(e,i){this.searchRolesAndUsers()}}},methods:{async searchRolesAndUsers(){if(!this.searchString)return;this.loading=!0;let e=new FormData;e.append("action","uip_get_users_and_roles"),e.append("security",uip_ajax.security),e.append("searchString",this.searchString);const i=await this.sendServerRequest(uip_ajax.ajax_url,e);this.loading=!1,i.error?this.uipApp.notifications.notify(i.error,"error"):this.options="userrole"==this.returnType?i.roles:i.users},addSelected(e){switch(this.returnType){case"userrole":this.updateSelected(e.label);break;case"userlogin":this.updateSelected(e.login);break;case"userid":this.updateSelected(e.id);break;case"useremail":this.updateSelected(e.email)}this.$refs.userDropdown.close()}},template:'\n    \n    <dropdown pos="left center" :snapX="[\'#uip-block-settings\', \'#uip-template-settings\', \'#uip-global-settings\']" ref="userDropdown">\n    \n      <template v-slot:trigger>\n        <button class="uip-button-default uip-border-rounder uip-icon uip-padding-xxs uip-link-muted">search</button>\n      </template>\n      \n      <template v-slot:content>\n        \n        <div class="uip-flex uip-flex-column uip-row-gap-s uip-padding-s uip-w-240">\n        \n          <div class="uip-flex uip-flex-between uip-flex-center">\n            <div class="uip-text-emphasis uip-text-bold uip-text-s">{{strings.userSearch}}</div>\n            <div @click.prevent.stop="$refs.userDropdown.close()"\n            class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n              <span class="uip-icon">close</span>\n            </div>\n          </div>\n          \n          <div class="uip-flex uip-background-muted uip-border-rounder uip-padding-xxs uip-flex-center">\n           <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n           <input class="uip-blank-input uip-flex-grow uip-text-s" type="search"  \n           :placeholder="searchPlaceHolder" v-model="searchString" autofocus>\n          </div>\n          \n          <div class="uip-max-h-280" v-if="formattedOptions.length > 0 || loading" style="overflow:auto">\n          \n            <div v-if="loading" class="uip-padding-s uip-flex uip-flex-center uip-flex-middle"><loading-chart></loading-chart></div>\n            \n            <template v-if="!loading" v-for="option in formattedOptions">\n            \n              <div class="uip-background-default uip-padding-xxs uip-border-rounder uip-link-default hover:uip-background-muted" \n              @click="addSelected(option)" \n              style="cursor: pointer">\n              \n                <div class="uip-flex uip-gap-xxs uip-flex-center">\n                    <div class="uip-text-bold uip-text-emphasis">{{option.label}}</div>\n                    <div class="uip-text-muted">{{option.type}}</div>\n                </div>\n              \n              </div>\n              \n            </template>\n            \n          </div>\n          \n        </div>\n        \n      </template>\n    </dropdown>\n    '};