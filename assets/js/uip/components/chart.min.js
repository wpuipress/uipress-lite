import*as charts from"../../libs/charts.min.js";import{nextTick}from"../../libs/vue-esm.js";export default{props:{chartData:Object},data:()=>({chart:!1,loading:!1,acceptedData:!1,rendered:!0}),watch:{chartData:{handler(t,e){JSON.stringify(t)!=JSON.stringify(this.acceptedData)&&this.refreshChart()},deep:!0}},mounted(){this.acceptedData=this.chartData,this.createChart()},methods:{async refreshChart(){this.chart.destroy(),this.chart=!1,this.acceptedData=JSON.parse(JSON.stringify(this.chartData)),this.rendered=!1,await nextTick(),this.rendered=!0,this.createChart()},createChart(){if(this.chart)return;let t=this.getComputedOrOverriddenColor("--uip-color-accent",this.acceptedData.colors.main),e=this.getComputedOrOverriddenColor("--uip-color-red-lighter",this.acceptedData.colors.comp);const a=this.formatLabels(this.acceptedData.labels),o={dataBackground:"",fillDataBackground:!1,compBackground:"",fillCompBackground:!1};this.isObject(this.acceptedData.custom)&&(o.dataBackground=this.acceptedData.custom.dataBackground||"",o.fillDataBackground=Boolean(o.dataBackground),o.compBackground=this.acceptedData.custom.compBackground||"",o.fillCompBackground=Boolean(o.compBackground));const i={labels:a,datasets:[{label:this.acceptedData.title,backgroundColor:o.dataBackground,fill:o.fillDataBackground,borderColor:t,data:this.acceptedData.data.main}]};this.acceptedData.data.comparison.length>0&&i.datasets.push({label:this.acceptedData.title,backgroundColor:o.compBackground,fill:o.fillCompBackground,borderColor:e,data:this.acceptedData.data.comparison});const r={type:this.acceptedData.type,data:i,options:this.buildTheChartOptions()};this.chart=new Chart(this.$refs.uipChart,r)},getComputedOrOverriddenColor:(t,e)=>e&&""!==e?e:getComputedStyle(document.documentElement).getPropertyValue(t),formatLabels(t){let e=[];for(let[a,o]of t.main.entries()){let i=o;t.comparison&&t.comparison[a]&&(i=o+";"+t.comparison[a]),e.push(i)}return e},buildTheChartOptions(){let t=.15,e=!1,a=!1,o=!0,i=!1,r=3;return this.isObject(this.acceptedData.custom)&&(t=this.acceptedData.custom.tension,e=this.acceptedData.custom.showXaxis,a=this.acceptedData.custom.showYaxis,o=this.acceptedData.custom.showYaxisGrid,i=this.acceptedData.custom.showXaxisGrid,r=this.acceptedData.custom.borderWidth),{cutout:"0%",spacing:0,borderRadius:0,tension:t,pointRadius:0,pointHoverRadius:5,borderRadius:8,animation:!0,borderWidth:r,interaction:{mode:"nearest"},hover:{intersect:!1},borderSkipped:!1,plugins:{legend:{display:!1,position:"bottom"},tooltip:{position:"average",backgroundColor:"#fff",padding:20,bodySpacing:10,bodyFont:{size:12},titleFont:{size:14,weight:"bold"},mode:"index",intersect:!1,xAlign:"left",yAlign:"center",caretPadding:10,cornerRadius:4,borderColor:"rgba(162, 162, 162, 0.2)",borderWidth:1,titleColor:"#333",bodyColor:"#777",titleMarginBottom:10,bodyFontSize:100,usePointStyle:!0,enabled:!1,external:t=>{this.getTooltip(t)}}},scales:{x:{ticks:{display:e},grid:{borderWidth:0,display:o,borderDash:[10,8],color:"rgba(162, 162, 162, 0.4)"}},y:{beginAtZero:!0,ticks:{display:a},grid:{borderWidth:0,display:i}}}}},getTooltip(t){let e=this.getOrCreateTooltipElement();const a=t.tooltip;0!==a.opacity?(this.alignTooltip(e,a),a.body&&this.setTooltipContent(e,a,t)):e.style.opacity=0},getOrCreateTooltipElement(){let t=document.getElementById("chartjs-tooltip");return t||((t=document.createElement("div")).id="chartjs-tooltip",t.innerHTML="<div class='uip-background-default uip-border uip-shadow uip-border-rounder uip-overflow-hidden'></div>",document.body.appendChild(t)),t},alignTooltip(t,e){t.classList.remove("above","below","no-transform"),e.yAlign?t.classList.add(e.yAlign):t.classList.add("no-transform")},setTooltipContent(t,e,a){let o=`\n            <div class="uip-background-default">\n                <div class='uip-text-bold uip-padding-xs uip-border-bottom uip-body-font'>${e.dataPoints[0].dataset.label}</div>\n                <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n        `;e.dataPoints.forEach((t,a)=>{const i=t.label.split(";")[a],r=e.labelColors[a].borderColor;o+=`\n                <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-between uip-w-125">\n                    <div class="uip-text-bold" style="color:${r}">${t.formattedValue}</div>\n                    <div class="uip-text-s uip-text-muted uip-no-wrap">${i}</div>\n                </div>\n            `}),o+="</div></div>",t.querySelector("div").innerHTML=o;const i=a.chart.canvas.getBoundingClientRect();t.style.opacity=1,t.style.position="absolute",t.style.left=`${i.left+window.pageXOffset+e.caretX}px`,t.style.top=`${i.top+window.pageYOffset+e.caretY}px`,t.style.padding=`${e.padding}px ${e.padding}px`,t.style.pointerEvents="none"}},template:'\n       <canvas v-if="rendered" class="uip-min-w-100 uip-chart-canvas" ref="uipChart"></canvas>'};