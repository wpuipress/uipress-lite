export default{props:{options:Object,activeValue:[String,Boolean],default:String,returnValue:Function,small:Boolean,allowOptional:Boolean},data:()=>({optionValue:null,open:!1,showBack:!0,enabledOptions:{false:{label:__("No","uipress-lite"),value:!1},true:{label:__("Yes","uipress-lite"),value:!0}},bgStyle:{width:null,left:null}}),watch:{enabledOptions:{handler(){this.returnBGstyle()},deep:!0},activeValue:{handler(){this.optionValue=this.activeValue,requestAnimationFrame(()=>{this.returnBGstyle()})},deep:!0},options:{handler(){this.enabledOptions=this.options},deep:!0}},mounted(){this.optionValue=void 0===this.activeValue?this.default:this.activeValue,this.returnBGstyle(),this.options&&(this.enabledOptions=this.options)},computed:{returnItemStyle(){return`width:calc(${100/Object.keys(this.enabledOptions).length}%);`},returnbgStyle(){return this.bgStyle}},methods:{returnBGstyle(){let e=String(this.optionValue),t=Object.keys(this.enabledOptions).indexOf(e);if(t<0)return void(this.showBack=!1);this.showBack=!0;let i=100/Object.keys(this.enabledOptions).length,l=i*t;this.bgStyle.width=`calc(${i}% - 6px)`,this.bgStyle.left=`calc(${l}% + 2px)`},returnData(e){this.optionValue===e&&this.allowOptional?this.optionValue=null:this.optionValue=e,this.returnValue(this.optionValue),requestAnimationFrame(()=>{this.returnBGstyle()})},isLastItem(e){return e===this.enabledOptions[Object.keys(this.enabledOptions).length-1].value},returnTip:e=>e.tip||e.label,returnActiveClass(e){return e.value===this.optionValue?"uip-link-default uip-text-emphasis":"uip-link-muted uip-opacity-70"}},template:'\n    \n      <div class="uip-position-relative uip-background-muted uip-border-rounder uip-flex uip-flex-wrap uip-w-100p uip-h-27" \n        style="border-radius: calc(var(--uip-border-radius-large) + 2px)">\n      \n        <div v-if="showBack" class="uip-position-absolute uip-top-2 uip-bottom-2 uip-transition-all uip-background-highlight uip-border uip-border-rounder" \n        :style="{width: bgStyle.width, left: bgStyle.left}"></div>\n      \n        <template v-for="(item, index) in enabledOptions">\n            <a type="button" :title="returnTip(item)"\n              class="uip-no-wrap uip-z-index-1 uip-padding-xxs uip-padding-left-xs uip-padding-right-xs uip-text-center uip-cursor-pointer uip-border-box uip-flex uip-gap-xs uip-flex-center uip-flex-middle"\n              :style="returnItemStyle"\n              :class="returnActiveClass(item)"\n              @click="returnData(item.value)">\n               \n              <span class="uip-icon" v-if="item.icon" :class="{\'uip-text-l\' : !small}">{{item.icon}}</span>\n              <span class="" v-if="item.label">{{item.label}}</span>\n            </a>\n        </template>\n        \n      </div>\n      '};