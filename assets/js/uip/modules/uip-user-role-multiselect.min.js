const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{selected:Array,placeHolder:String,searchPlaceHolder:String,single:Boolean,updateSelected:Function,type:String},data:function(){return{loading:!1,thisSearchInput:"",options:[],all_roles:[],paged_users:[],page:1,totalUsers:0,selectedOptions:this.selected,activeTab:"roles",rendered:!1,switchOptions:{roles:{value:"roles",label:__("Roles","uipress-lite")},users:{value:"users",label:__("Users","uipress-lite")}},strings:{users:__("Users","uipress-lite"),roles:__("Roles","uipress-lite"),roleSelect:__("Role select","uipress-lite")},ui:{dropOpen:!1}}},inject:["uipress"],computed:{formattedOptions(){return this.options},formattedUsers(){return this.paged_users},formattedRoles(){return this.all_roles}},watch:{selectedOptions:{handler(e,i){},deep:!0},thisSearchInput:function(e,i){self=this,self.queryUsersRoles(e)}},created:function(){Array.isArray(this.selectedOptions)||(this.selectedOptions=[])},methods:{maybeQueryUsersRoles(){this.rendered||this.queryUsersRoles("")},queryUsersRoles(e){let i=this,t=this.type;t&&void 0!==t||(t="all");let s=new FormData;s.append("action","uip_get_user_roles"),s.append("security",uip_ajax.security),s.append("searchString",e),s.append("type",t),s.append("page",this.page),i.loading=!0,i.uipress.callServer(uip_ajax.ajax_url,s).then(e=>{i.rendered=!0,i.loading=!1,e.error?i.uipress.notify(e.error,"error"):(Array.isArray(e.roles)&&(i.options=e.roles),Array.isArray(e.all_roles)&&(i.all_roles=e.all_roles),Array.isArray(e.paged_users)&&(i.paged_users=e.paged_users),i.totalUsers=e.users_total)})},addSelected(e){this.ifSelected(e)?this.removeSelected(e):1==this.single?this.selectedOptions[0]=e:this.selectedOptions.push(e)},removeSelected(e){let i=this.selectedOptions.findIndex(i=>i.name===e.name&&i.type===e.type);i>-1&&this.selectedOptions.splice(i,1)},removeByIndex(e){this.selectedOptions.splice(e,1)},ifSelected(e){return this.selectedOptions.findIndex(i=>i.name===e.name&&i.type===e.type)>-1},ifInSearch(e,i){let t=e.name.toLowerCase(),s=i.toLowerCase();return!!t.includes(s)},onClickOutside(e){const i=e.path||(e.composedPath?e.composedPath():void 0);!i||i.includes(this.$el)||this.$el.contains(e.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)},pageDown(){1!=this.page&&(this.page-=1,this.queryUsersRoles(this.thisSearchInput))},pageUp(){this.page+=1,this.queryUsersRoles(this.thisSearchInput)}},template:'\n    \n    <dropdown pos="left center" class="uip-w-100p" ref="userDropdown">\n    \n      <template v-slot:trigger>\n      \n        <div class="uip-padding-xxs uip-background-muted uip-border-rounder uip-w-100p uip-max-w-400 uip-cursor-pointer uip-border-box" :class="{\'uip-active-outline\' : ui.dropOpen}"> \n          <div class="uip-flex uip-flex-center">\n          \n            <div class="uip-flex-grow uip-margin-right-s" v-if="selectedOptions.length < 1">\n              <div>\n              <span class="uip-text-muted">{{placeHolder}}...</span>\n              </div>\n            </div>\n            \n            <div v-else class="uip-flex-grow uip-flex uip-flex-row uip-row-gap-xxs uip-gap-xxs uip-margin-right-s uip-flex-wrap">\n              <template v-for="(item, index) in selectedOptions">\n                <div class=" uip-padding-left-xxs uip-padding-right-xxs uip-background-highlight uip-border-rounder uip-border uip-flex uip-gap-xxs uip-flex-center uip-shadow-small">\n                  <span class="uip-text-s">{{item.name}}</span>\n                  <a @click="removeByIndex(index)" class="uip-link-muted uip-no-underline uip-icon">close</a>\n                </div>\n              </template>\n            </div>\n            <span class="uip-icon uip-text-muted">add</span>\n          </div>\n        </div>\n      \n      </template>\n      \n      <template v-slot:content>\n      \n        {{maybeQueryUsersRoles(\'\')}}\n      \n        <div class="uip-flex uip-flex-column uip-row-gap-s uip-padding-s uip-w-240">\n        \n          <div class="uip-flex uip-flex-between uip-flex-center">\n            <div class="uip-text-emphasis uip-text-bold uip-text-s">{{strings.roleSelect}}</div>\n            <div @click="$refs.userDropdown.close()"\n            class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n              <span class="uip-icon">close</span>\n            </div>\n          </div>\n          \n          <toggle-switch :options="switchOptions" :activeValue="activeTab" :dontAccentActive="true" :returnValue="function(data){ activeTab = data}"></toggle-switch>\n          \n          <div class="uip-flex uip-background-muted uip-border-rounder uip-padding-xxs uip-flex-center">\n            <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n            <input class="uip-blank-input uip-flex-grow uip-text-s" type="search"  \n            :placeholder="searchPlaceHolder" v-model="thisSearchInput" autofocus>\n          </div>\n          \n          \n          <div v-if="loading" class="uip-padding-s uip-flex uip-flex-center uip-flex-middle uip-h-200">\n            <loading-chart></loading-chart>\n          </div>\n          \n          <div class="uip-max-h-200" style="overflow:auto" v-if="formattedOptions.length > 0">\n            \n            \x3c!--Roles--\x3e\n            <template v-if="!loading && activeTab == \'roles\'" v-for="option in formattedRoles">\n              <div class="uip-background-default uip-padding-xxs hover:uip-background-muted uip-border-rounder uip-flex uip-flex-center uip-gap-xs uip-link-muted" \n              @click="addSelected(option)" \n              v-if="ifInSearch(option, thisSearchInput) && !ifSelected(option)" \n              style="cursor: pointer">\n              \n                    <div class="uip-flex-grow uip-text-s uip-text-bold">{{option.label}}</div>\n                    <div class="uip-icon">add</div>\n                \n              </div>\n            </template>\n            \n            \x3c!--Users--\x3e\n            <template v-if="!loading && activeTab == \'users\'" v-for="option in formattedUsers">\n              <div class="uip-background-default uip-padding-xxs hover:uip-background-muted uip-border-rounder uip-flex uip-flex-center uip-gap-xs uip-link-muted" \n              @click="addSelected(option)" \n              v-if="ifInSearch(option, thisSearchInput) && !ifSelected(option)" \n              style="cursor: pointer">\n              \n                    <div class="uip-flex-grow uip-text-s uip-text-bold">{{option.label}}</div>\n                    <div class="uip-icon">add</div>\n                \n              </div>\n            </template>\n            \n          </div>\n          \n          <div class="uip-flex uip-gap-xs" v-if="activeTab == \'users\' && totalUsers > formattedUsers.length">\n            <button class="uip-button-default uip-icon uip-nav-button uip-padding-xxs" :class="{\'uip-disabled\' : page == 1}" @click="pageDown()">chevron_left</button>\n            <button class="uip-button-default uip-icon uip-nav-button uip-padding-xxs" @click="pageUp()">chevron_right</button>\n          </div>\n        \n        </div>\n      \n      </template>\n    \n    </dropdown>\n    '}};