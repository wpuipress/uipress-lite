export function moduleData(){return{props:{display:String,block:Object,itemIndex:Number,currentContent:Array},data:function(){return{hover:!1,delay:200,tips:[],windowWidth:window.innerWidth,blockStyles:"",darkTheme:this.uipData.userPrefs.darkTheme}},inject:["uipData","uiTemplate","router","uipress"],watch:{"uipData.userPrefs.darkTheme":{handler(t,e){this.darkTheme=t,this.updateBlockStyle()},deep:!0}},mounted:function(){let t=this;this.updateBlockStyle(),window.addEventListener("resize",function(){t.windowWidth=window.innerWidth})},computed:{getBlockStyles(){return this.updateBlockStyle()}},methods:{updateBlockStyle(){return this.blockStyles=this.uipress.render_block_styles(this.block.settings,this.block.uid,this.darkTheme,this.windowWidth),this.blockStyles},ifHasCss(){return!!(this.block.settings.advanced&&this.block.settings.advanced.options.css&&this.block.settings.advanced.options.css.value)},ifHasJS(){return!!(this.block.settings.advanced&&this.block.settings.advanced.options.js&&this.block.settings.advanced.options.js.value)},removeTooltip(){this.hover=!1;for(const t of this.tips)t.remove();this.tips=[]},showTooltip(){let t=this;if(t.hover=!0,!("tooltip"in this.block))return;if(!("message"in this.block.tooltip))return;if(""==this.block.tooltip.message)return;let e=this.block.tooltip.message,i=document.getElementById(t.block.uid),o="bottom";i.getBoundingClientRect().bottom>window.innerHeight-100&&(o="top");let s=document.createElement("div");s.classList.add("uip-tooltip"),s.classList.add("uip-fade-in"),s.classList.add("uip-hidden"),"top"==o&&s.classList.add("uip-tooltip-top"),s.setAttribute("id","tooltip-"+t.block.uid),s.innerHTML=e;let n=document.body.appendChild(s);t.tips.push(n);let l=i.getBoundingClientRect().top,d=i.getBoundingClientRect().bottom,c=i.getBoundingClientRect().width/2,a=window.innerHeight-l+10,r=d+10,p=i.getBoundingClientRect().left;"bottom"==o?s.style.top=r+"px":s.style.bottom=a+"px",s.style.left=p+c+"px",s.style.transform="translateX(-50%)",t.delay=200,this.block.tooltip.delay&&Number.isInteger(parseInt(this.block.tooltip.delay))&&(t.delay=this.block.tooltip.delay),setTimeout(function(){if(!t.hover){let e=document.getElementById("tooltip-"+t.block.uid);return void(e&&e.remove())}document.getElementById("tooltip-"+t.block.uid).classList.remove("uip-hidden"),setTimeout(function(){t.removeTooltip()},3e3)},t.delay)},responsiveHidden(t){if(void 0===t)return!0;let e=this.windowWidth;return!(1==t.mobile&&e<699)&&(!(1==t.tablet&&e<990&&e>=699)&&!(1==t.desktop&&e>990))}},template:'<div ref="container" v-if="responsiveHidden(block.responsive)"  class="uip-position-relative uip-inline-flex" :style="uipress.explodeBlockSettings(block.settings.container.options, \'style\', uipData.templateDarkMode)" :id="\'container-\' + block.uid" @mouseenter="showTooltip(block, block.uid)" @mouseleave="removeTooltip()" >        <component is="style" scoped>          {{getBlockStyles}}        </component>        <component is="style" v-if="ifHasCss()" scoped>{{block.settings.advanced.options.css.value}}</component>        <component is="script" scoped v-if="ifHasJS()">          {{block.settings.advanced.options.js.value}}        </component>\t  \t\t<slot></slot>\t\t  </div>'}};