export function moduleData(){return{props:{selected:Array,availableOptions:Array,placeHolder:String,searchPlaceHolder:String,single:Boolean,updateSelected:Function,metaKey:String},data:function(){return{thisSearchInput:"",options:this.availableOptions,selectedOptions:this.selected,ui:{dropOpen:!1}}},mounted:function(){},computed:{formattedOptions(){return this.options}},watch:{selected:{handler(e,t){JSON.stringify(this.selected)!=JSON.stringify(this.selectedOptions)&&(this.selectedOptions=this.selected)},deep:!0},selectedOptions:{handler(e,t){this.updateSelected(this.selectedOptions),console.log("we returned")},deep:!0}},methods:{addSelected(e,t){this.ifSelected(e,t)?this.removeSelected(e,t):1==this.single?t[0]=e:t.push(e)},removeByIndex(e){this.selectedOptions.splice(e,1)},removeSelected(e,t){let i=t.indexOf(e);i>-1&&(t=t.splice(i,1))},ifSelected:(e,t)=>t.indexOf(e)>-1,ifInSearch(e,t){let i=e.toLowerCase(),n=t.toLowerCase();return!!i.includes(n)},onClickOutside(e){const t=e.path||(e.composedPath?e.composedPath():void 0);!t||t.includes(this.$el)||this.$el.contains(e.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'\n      <div class="uip-position-relative uip-w-100p" @click="openThisComponent">\n      \n\t\t      <div class="uip-padding-xxs uip-background-muted uip-border-rounder uip-w-100p uip-max-w-400 uip-cursor-pointer uip-border-box" :class="{\'uip-active-outline\' : ui.dropOpen}"> \n\t\t        \n            <div class="uip-flex uip-flex-center">\n            \n              <div class="uip-flex-grow uip-margin-right-s" v-if="selectedOptions.length < 1">\n                <div>\n                <span class="uk-text-meta">{{placeHolder}}...</span>\n                </div>\n              </div>\n              \n              <div v-else class="uip-flex-grow uip-flex uip-flex-row uip-row-gap-xxs uip-gap-xxs uip-margin-right-s uip-flex-wrap">\n                <template v-for="(item, index) in selectedOptions">\n                  <div class="uip-padding-left-xxs uip-padding-right-xxs uip-background-highlight uip-border-rounder uip-border uip-flex uip-gap-xxs uip-flex-center uip-shadow-small">\n                    <span class="uip-text-s">{{item}}</span>\n                    <a @click="removeByIndex(index)" class="uip-link-muted uip-no-underline uip-icon">close</a>\n                  </div>\n                </template>\n              </div>\n            \n              <span class="uip-icon uip-text-muted">add</span>\n            \n            </div>\n            \n\t\t      </div>\n\t\t      <div v-if="ui.dropOpen" class="uip-position-absolute uip-background-default uip-border-rounder uip-border uip-w-400 uip-max-w-100p uip-border-box uip-z-index-9 uip-margin-top-xs uip-overflow-hidden">\n\t\t        <div class="uip-flex uip-background-default uip-padding-xs uip-border-bottom">\n\t\t\t      <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n\t\t\t      <input class="uip-blank-input uip-flex-grow" type="search"  \n\t\t\t      :placeholder="searchPlaceHolder" v-model="thisSearchInput" autofocus>\n\t\t        </div>\n\t\t        <div class="uip-max-h-280 uip-overflow-auto">\n\t\t\t      <template v-for="option in formattedOptions">\n\t\t\t        <div class="uip-background-default uip-padding-xs hover:uip-background-muted" \n\t\t\t        @click="addSelected(option.name, selectedOptions)" \n\t\t\t        v-if="ifInSearch(option.name, thisSearchInput)" \n\t\t\t        style="cursor: pointer">\n\t\t\t\t      <div class="uip-flex uip-flex-row uip-flex-center uip-gap-xs">\n\t\t\t\t        <div class="uip-flex uip-flex-center uip-flex-middle">\n\t\t\t\t\t        <input type="checkbox" :name="option.name" :value="option.name" class="uip-checkbox" :checked="ifSelected(option.name, selectedOptions)">\n\t\t\t\t        </div>\n\t\t\t\t        <div class="uip-flex-grow uip-flex uip-flex-column">\n\t\t\t\t\t        <div class="uip-text-bold uip-text-emphasis">{{option.label}}</div>\n\t\t\t\t\t        <div v-if="!metaKey" class="uip-text-muted">{{option.name}}</div>\n                  <div v-if="metaKey != \'\'" class="uip-text-muted">{{option[metaKey]}}</div>\n\t\t\t\t        </div>\n\t\t\t\t      </div>\n\t\t\t        </div>\n\t\t\t      </template>\n\t\t        </div>\n\t\t      </div>\n          \n\t  </div>'}};