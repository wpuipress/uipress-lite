export function moduleData(){return{props:{},inject:["uipData","router","uipress"],data:function(){return{template:{display:"prod",notifications:[],settings:this.formatTemplate(uipUserTemplate.settings),content:this.formatTemplate(uipUserTemplate.content),globalSettings:this.formatTemplate(uipUserTemplate.settings),updated:this.formatTemplate(uipUserTemplate.updated),id:uipUserTemplate.id,styles:uipUserStyles,iconFile:"./"},loading:!0,updateAvailable:!1,blocksForUpdating:[],windowWidth:window.innerWidth,iconsLoading:!0}},watch:{blocksForUpdating:{handler(t,e){let i=this;i.updating||(i.updating=!0,i.uipress.updateBlocksV312(i.blocksForUpdating).then(t=>{for(let t of i.blocksForUpdating){let e=i.blocksForUpdating.findIndex(e=>e.uid===t.uid);e>-1&&i.blocksForUpdating.splice(e,1)}i.blocksForUpdating=[],requestAnimationFrame(()=>{i.updating=!1})}))}}},provide(){return{uiTemplate:this.template}},mounted:function(){let t=this;t.blocksForUpdating=[],t.uipress.findOutdatedBlocks(t.template.content,t.blocksForUpdating),requestAnimationFrame(()=>{t.loading=!1}),"ui-template"==this.template.globalSettings.type&&setInterval(function(){t.checkForUpdates()},6e4),window.addEventListener("resize",function(){t.windowWidth=window.innerWidth}),document.addEventListener("uip_page_change_loaded",e=>{t.getNotifications()},{once:!1})},computed:{returnTemplateJS(){if(void 0!==this.template.globalSettings.options)return"advanced"in this.template.globalSettings.options&&"js"in this.template.globalSettings.options.advanced?this.template.globalSettings.options.advanced.js:void 0},returnTemplateCSS(){if(void 0!==this.template.globalSettings.options)return"advanced"in this.template.globalSettings.options&&"css"in this.template.globalSettings.options.advanced?this.template.globalSettings.options.advanced.css:void 0},returnResponsiveClass(){return this.windowWidth>=990?"uip-desktop-view":this.windowWidth>=699?"uip-tablet-view":this.windowWidth<699?"uip-phone-view":void 0},isLoading(){return!!this.loading}},methods:{getNotifications(){let t,e=document.getElementsByClassName("uip-page-content-frame");if(e[0]){t=e[0].contentWindow.document.querySelectorAll(".notice:not(#message):not(.inline):not(.update-message),.wp-analytify-notification")}else t=document.querySelectorAll(".notice:not(#message):not(.inline):not(.update-message),.wp-analytify-notification");if(this.template.notifications=[],!t)return;let i=!1;JSON.stringify(this.template.content).includes("site-notifications")&&(i=!0);for(const e of t)this.template.notifications.push(e.outerHTML.replace("uip-framed-page=1","")),i&&e.setAttribute("style","display:none !important; visibility: hidden !important; opacity: 0 !important;");this.uipData.dynamicOptions.notificationCount.value=this.template.notifications.length},checkForUpdates(){let t=this;if(this.updateAvailable)return;let e=new FormData;e.append("action","uip_check_for_template_updates"),e.append("security",uip_ajax.security),e.append("template_id",t.template.id),t.uipress.callServer(uip_ajax.ajax_url,e).then(e=>{if(e.error,e.success&&e.updated>t.template.updated)return this.updateAvailable=!0,void t.updateNotification()})},updateNotification(){let t=`\n        <div class="uip-margin-bottom-s uip-margin-top-xs uip-max-w-260">${__("Changes have been made to your current app. Refresh the page to update","uipress-lite")}</div>\n        <button class="uip-button-primary" type='button' onclick="location.reload()">${__("Update","uipress-lite")}</button>\n        `;this.uipress.notify(__("Update available","uipress-lite"),t,"",!0)},formatTemplate(t){return this.uipress.uipParsJson(JSON.stringify(t))},componentExists(t){return!!this.$root._.appContext.components[t]},appReady(){this.iconsLoading=!1}},template:'\n    \n    <component is="style" scoped >\n      .uip-user-frame:not(.uip-app-frame){\n        <template v-for="(item, index) in template.styles">\n          <template v-if="item.value">{{index}}:{{item.value}};</template>\n        </template>\n      }\n      [data-theme="dark"] :not(.uip-app-frame) *{\n        <template v-for="(item, index) in template.styles">\n          <template v-if="item.darkValue"> {{index}}:{{item.darkValue}};</template>\n        </template>\n      }\n      {{returnTemplateCSS}}\n    </component>\n    \n    <component is="script" scoped>\n      {{returnTemplateJS}}\n    </component>\n    \n    <component is="style">\n      .v-enter-active, .v-leave-active {transition: opacity 0.6s ease;}\n      .v-enter-from, .v-leave-to {opacity: 0;}\n    </component>\n    \n    \x3c!--<link rel="stylesheet" :href="uipData.options.pluginURL + \'assets/css/uip-icons.css\'" id="uip-icons" @load="appReady">--\x3e\n    \n    <TransitionGroup>\n    \n      <div v-if="isLoading" class="uip-background-default uip-body-font uip-h-viewport uip-max-h-viewport uip-flex uip-flex-center uip-flex-middle uip-position-fixed uip-z-index-9" \n      style="min-height: 100vh; max-height: 100vh; min-width: 100vw; max-width: 100vw">\n        <loading-chart></loading-chart>\n      </div>\n      \n      <uip-content-area v-else :content="template.content" :class="returnResponsiveClass"\n      :returnData="function(data) {template.content = data} ">\n      </uip-content-area>\n    \n    </TransitionGroup>\n    \n   \n    \n    \n    \n    \x3c!--Import plugins --\x3e\n    <template v-for="plugin in uipData.plugins">\n      <component v-if="componentExists(plugin.component) && plugin.loadInApp"\n      :is="plugin.component">\n      </component>\n    </template>\n    \x3c!-- end plugin import --\x3e'}};