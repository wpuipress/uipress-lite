const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{},data:function(){return{loading:!1,search:"",allErrrors:[],perPage:20,order:"desc",page:0,totalFound:0,totalPages:0,error:{state:!1,message:"",description:""},strings:{pixels:__("Pixels","uipress-lite"),searchErrors:__("Search errors","uipress-lite"),errorLog:__("Error log","uipress-lite"),misc:__("Misc","uipress-lite"),fatal:__("Fatal","uipress-lite"),warning:__("Warning","uipress-lite"),syntax:__("Syntax","uipress-lite"),notice:__("Notice","uipress-lite"),exception:__("Exception","uipress-lite"),results:__("entries","uipress-lite"),newestFirst:__("Newest first","uipress-lite"),oldestFirst:__("Oldest first","uipress-lite"),sortBy:__("Sort by","uipress-lite"),line:__("line","uipress-lite"),refreshLog:__("Refresh log","uipress-lite"),stackTrace:__("Stack trace","uipress-lite"),noErrrors:__("No PHP errors to display!","uipress-lite")}}},inject:["uipData","uipress"],watch:{order:{handler(i,e){this.fetchErrorLog()},deep:!0},search:{handler(i,e){this.fetchErrorLog()},deep:!0}},mounted:function(){this.fetchErrorLog()},methods:{fetchErrorLog(){let i=this;if(i.loading)return;i.loading=!0,i.error.state=!1;let e=new FormData;e.append("action","uip_get_php_errors"),e.append("security",uip_ajax.security),e.append("perPage",i.perPage),e.append("search",i.search),e.append("order",i.order),e.append("page",i.page),i.uipress.callServer(uip_ajax.ajax_url,e).then(e=>{i.loading=!1,e.error&&(i.error.state=!0,i.error.message=e.message,i.error.description=e.description,i.loading=!1),e.success&&(i.allErrrors=e.errors,i.totalFound=e.totalFound,i.totalPages=e.totalPages)})},goBack(){this.page>0&&(this.page=this.page-1,this.fetchErrorLog())},goForward(){this.page<this.totalPages&&(this.page=this.page+1,this.fetchErrorLog())}},template:'\n      <div class="uip-body-font uip-h-100p uip-flex uip-max-h-100p uip-overflow-hidden" style="font-size:14px">\n       \n        \n        <div class="uip-flex uip-flex-column uip-h-100p uip-flex uip-flex-column uip-h-100p uip-max-h-100p uip-w-100p uip-overflow-hidden">\n          \n          \n          \x3c!-- Titles and search --\x3e\n          <div class="uip-flex uip-cursor-pointer uip-margin-bottom-xs uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-bold uip-text-emphasis">{{strings.errorLog}}</div>\n        \n          <div class="uip-flex uip-gap-xxs uip-flex-center uip-padding-xs">\n            \n            <dropdown pos="bottom left">\n              <template v-slot:trigger>\n                <div class="uip-icon uip-text-l hover:uip-background-muted uip-padding-xxxs uip-border-round uip-cursor-pointer">sort</div>\n              </template>\n              <template v-slot:content>\n                  <div class="uip-padding-xxs uip-flex uip-flex-column uip-row-gap-xxs uip-w-200"> \n                  \n                    <div class="uip-text-s uip-text-muted">{{strings.sortBy}}</div>\n                  \n                    <div class="uip-flex uip-flex-between uip-gap-l hover:uip-background-muted uip-padding-xxs uip-border-round uip-flex-center uip-cursor-pointer"\n                    :class="{\'uip-background-grey\' : order == \'desc\'}" @click="order = \'desc\'">\n                      <div class="">{{strings.newestFirst}}</div>\n                      <div v-if="order == \'desc\'" class="uip-icon uip-text-l">done</div>\n                    </div>\n                    \n                    <div class="uip-flex uip-flex-between uip-gap-l hover:uip-background-muted uip-padding-xxs uip-border-round uip-flex-center uip-cursor-pointer" \n                    :class="{\'uip-background-grey\' : order == \'asc\'}" @click="order = \'asc\'">\n                      <div class="">{{strings.oldestFirst}}</div>\n                      <div v-if="order == \'asc\'" class="uip-icon uip-text-l">done</div>\n                    </div>\n                    \n                  </div>\n              </template>\n            </dropdown>\n            \n            \n            \n            <div class="uip-flex uip-padding-xxs uip-search-block uip-border-round uip-flex-grow">\n              <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon-medium">search</span>\n              <input class="uip-blank-input uip-flex-grow uip-text-s" type="search" :placeholder="strings.searchErrors" v-model="search" autofocus="">\n            </div>\n            \n            <uip-tooltip :message="strings.refreshLog">\n              <div class="uip-icon uip-text-l hover:uip-background-muted uip-padding-xxxs uip-border-round uip-cursor-pointer" @click="fetchErrorLog()">refresh</div>\n            </uip-tooltip>\n            \n          </div>\n          \n          \x3c!--End title and search --\x3e\n          \n          <div class="uip-flex uip-flex-column uip-gap-s uip-padding-xs uip-flex-grow uip-overflow-auto">\n          \n            \n            \n            <div v-if="error.state" class="uip-padding-xs uip-background-orange-wash uip-border-round uip-flex uip-flex-column uip-row-gap-xxs">\n              <div class="uip-text-">{{error.message}}</div>\n              <div class="uip-text-s uip-text-muted">{{error.description}}</div>\n            </div>\n            \n            <div class="uip-padding-m uip-flex uip-flex-center uip-flex-middle uip-w-100p" v-if="loading"><loading-chart></loading-chart></div>\n            \n            <template v-else v-for="err in allErrrors" >\n            \n                <div class="uip-flex uip-flex-column uip-gap-xxs">\n                \n                  <div class="uip-flex uip-flex-column uip-gap-xxs uip-cursor-pointer" @click="err.open = !err.open" v-if="err">\n                \n                    <div class="uip-flex uip-flex-row uip-gap-xxs">\n                     \n                      \n                      <span v-if="err.type == \'UNKNOWN\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s">{{strings.misc}}</span>\n                      <span v-if="err.type == \'FATAL\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s uip-background-red-wash uip-color-danger">{{strings.fatal}}</span>\n                      <span v-if="err.type == \'WARNING\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s uip-background-orange-wash">{{strings.warning}}</span>\n                      <span v-if="err.type == \'SYNTAX\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s uip-background-orange-wash">{{strings.syntax}}</span>\n                      <span v-if="err.type == \'NOTICE\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s uip-background-primary-wash">{{strings.notice}}</span>\n                      <span v-if="err.type == \'EXCEPTION\'" class="uip-background-muted uip-border-round uip-padding-xxxs uip-text-s uip-background-orange-wash">{{strings.exception}}</span>\n                      \n                      <span class="uip-background-mute uip-border-round uip-padding-xxxs uip-text-muted uip-text-s">{{err.date}} @{{err.time}}</span>\n                      \n                      \n                    </div>\n                    \n                    <div class="uip-overflow-hidden uip-text-ellipsis uip-text-s uip-padding-xxxs" :class="!err.open ? \'uip-no-wrap\' : \'\'">{{err.message}}</div>\n                  \n                  </div>\n                  \n                  <div v-if="err.open && err" class="uip-flex uip-flex-column uip-row-gap-xs uip-scale-in-top uip-margin-bottom-s">\n                    \n                    <div class="uip-text-s uip-padding-xxs uip-background-muted uip-border-round uip-text-muted">{{err.file}} @{{strings.line}} {{err.line}}</div>\n                    \n                    <template v-if="err.stackTrace &&  err.stackTrace.length > 0">\n                    \n                      <div class="uip-text-s uip-padding-xxxs">{{strings.stackTrace}}</div>\n                      \n                      <div class="uip-flex uip-flex-column uip-padding-left-xxs">\n                        <template v-for="(item, index) in err.stackTrace">\n                          <div class="uip-text-xs uip-text-muted uip-padding-xxs uip-border-left uip-padding-left-s uip-circle-before uip-position-relative" \n                          :class="[{\'uip-padding-remove-top\' : index == 0},{\'uip-padding-remove-bottom uip-border-transparent\' : index == (err.stackTrace.length - 1)}]">{{item}}</div>\n                        </template>\n                      </div>\n                    \n                    </template>\n                    \n                  \n                  </div>\n                \n                </div>\n                \n            </template>\n            \n            <div v-if="allErrrors.length < 1 && !loading" class="uip-padding-xs uip-text-muted uip-background-green-wash uip-border-round uip-text-s">\n              {{strings.noErrrors}}\n            </div>\n            \n          </div>\n          \n          \n          <div class="uip-flex uip-flex-row uip-flex-between uip-flex-center uip-padding-xs uip-padding-remove-bottom uip-margin-top-s">\n            <div class="uip-text-muted">{{totalFound + \' \' + strings.results}}</div>\n            <div class="uip-flex uip-gap-xs" v-if="totalPages > 0">\n              <button @click="goBack" v-if="totalPages >= 1" class="uip-button-default uip-icon uip-search-nav-button">chevron_left</button>\n              <button @click="goForward" v-if="page < totalPages" class="uip-button-default uip-icon uip-search-nav-button">chevron_right</button>\n            </div>\n          </div>\n          \n          \n        \n        </div>\n        \n        \n        \n      </div>\n    '};