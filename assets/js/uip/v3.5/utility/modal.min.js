export default{props:{closeFunction:Function,disableTeleport:Boolean,startOpen:Boolean},data:()=>({isVisible:!1}),mounted(){this.startOpen&&this.open()},methods:{open(){this.isVisible=!0},close(){this.isVisible=!1},maybe_close(t){if(this.isVisible&&this.$refs.modalinner&&!this.$refs.modalinner.contains(t.target))return this.closeFunction?this.closeFunction():void this.close()}},template:'\n\t\n\t<teleport to="body" v-if="isVisible" :disabled="disableTeleport">\n\t\n\t  <component is="style" scoped>\n\t\t.fade-enter-active,\n\t\t.fade-leave-active {\n\t\t\ttransition: opacity 0.3s;\n\t\t}\n\t\t.fade-enter,\n\t\t.fade-leave-to {\n\t\t\topacity: 0;\n\t\t}\n\t  </component>\n\t\n\t  <transition name="fade">\n\t\t  <div ref="modalwrapper" @click.stop="maybe_close($event)" class="uip-position-fixed uip-top-0 uip-left-0 uip-h-viewport uip-w-vw uip-background-black-wash uip-flex uip-flex-center uip-flex-middle uip-fade-in uip-z-index-9 uip-body-font">\n\t\t\t  <div ref="modalinner" style="border-radius:calc(var(--uip-border-radius-large) + var(--uip-padding-xs));"\n\t\t\t  class="uip-background-default uip-border uip-flex uip-flex-column uip-max-w-100p uip-text-normal uip-position-relative uip-modal-body">\n\t\t\t\t  <slot></slot>\n\t\t\t  </div>\n\t\t  </div>\n\t  </transition>\n\t\n\t</teleport>\n\t\t'};