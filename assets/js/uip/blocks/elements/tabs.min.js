const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{display:String,name:String,block:Object},data:()=>({activeTab:0,contentIndex:0}),inject:["uipress"],watch:{"block.settings.block.options.tabs.value.tabs":{handler(t,e){this.processContent()},deep:!0}},mounted(){this.processContent()},computed:{returnTabs(){const t=this.uipress.get_block_option(this.block,"block","tabs",!0);return this.isObject(t)&&t.tabs?t.tabs:[]},returnBlockContent(){return this.block.content},returnActiveTabContent(){return this.block.content[this.activeTab]?this.block.content[this.activeTab].content:[]},returnTabContent(){return this.block.content[this.returnCurrentIndex].content},returnCurrentIndex(){const t=this.returnTabs[this.activeTab].id;return this.contentIndex=this.block.content.findIndex(e=>e.uid===t),this.contentIndex<0&&(this.contentIndex=0),this.contentIndex}},methods:{returnNewContentArea(t){return{name:this.returnTabs[t].name,moduleName:"uip-container",icon:"view_agenda",settings:{block:{options:{flexAlignSelf:{value:"",settingName:"flexAlignSelf"},flexJustifyContent:{value:"",settingName:"flexJustifyContent"},flexAlignItems:{value:"",settingName:"flexAlignItems"},flexDirection:{value:"",settingName:"flexDirection"},flexWrap:{value:{value:"wrap"},settingName:"flexWrap"},columnGap:{value:{value:"",units:"%"},settingName:"columnGap"},rowGap:{value:{value:"",units:"%"},settingName:"rowGap"}},name:"block"},container:{options:{verticalAlign:{value:{value:"none"},settingName:"verticalAlign"},horizontalAlign:{value:{value:"none"},settingName:"horizontalAlign"},flexGrow:{value:{value:"none"},settingName:"flexGrow"},stretchDirection:{value:{value:"none"},settingName:"stretchDirection"},dimensions:{settingName:"dimensions"}},styleType:"style",class:"",name:"container"},style:{options:{colorSelect:{settingName:"colorSelect"},imageSelect:{settingName:"imageSelect"},dimensions:{settingName:"dimensions"},padding:{settingName:"padding"},margin:{settingName:"margin "},textFormat:{settingName:"textFormat"},border:{settingName:"border"},positionDesigner:{settingName:"positionDesigner"},shadow:{settingName:"shadow"}},styleType:"style",class:"",name:"style"},advanced:{options:{classes:{value:"",settingName:"classes"},conditionalShow:{component:"conditionalShow ",label:"Conditional show "},customTemplate:{component:"customTemplate ",label:"Custom block template "},css:{value:"",settingName:"customCode "},js:{value:"",settingName:"customCode "}},name:"advanced"}},content:[],uid:this.returnTabs[t].id}},processContent(){let t=this.returnTabs,e=this.returnBlockContent;if(t||(t=[]),t.length<1)return;for(const[n,i]of t.entries()){const t=i.id?i.id:this.uipress.createUID();i.id=t;const a=e.filter(e=>e.uid===t);0===a.length?e[n]=this.returnNewContentArea(n):a[0].name=i.name}for(const[n,a]of e.entries()){0===t.filter(t=>t.id===a.uid).length&&e.splice(i,1)}this.activeTab>this.returnTabs.length-1&&(this.activeTab=0);let n=this.returnTabs[this.activeTab].id;this.contentIndex=this.block.content.findIndex(t=>t.uid===n),this.contentIndex<0&&(this.contentIndex=0),this.block.settings.block.options.tabs.value.tabs=t},updateIndex(t){this.activeTab=t},updateBlockContent(t){this.block.content[this.activeTab]&&(this.block.content[this.activeTab].content=t)}},template:'\n      <div class="uip-text-normal">\n      \n       <div class="uip-flex uip-flex-row">\n         <template v-for="(tab, index) in returnTabs">\n            <div class="uip-padding-xs uip-cursor-pointer uip-tab-item" @click="updateIndex(index)"\n            :class="{\'uip-border-bottom-primary uip-text-bold uip-tab-item-active\' : index == activeTab}">{{tab.name}}</div>\n         </template>\n       </div>\n       \n      <uip-content-area\n      class="uip-tab-content-area"\n      :content="returnActiveTabContent" :returnData="(data)=>{updateBlockContent(data)} "/>\n        \n      </div>\n      '};