const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{display:String,name:String,block:Object},data:()=>({activeTab:0,contentIndex:0}),watch:{"block.settings.block.options.tabs.value.tabs":{handler(t,e){},deep:!0}},mounted(){this.block.content.length||this.pushNewContentBlock()},computed:{returnTabs(){return this.block.content?(console.log(this.block.content),this.block.content.map(t=>t.name)):[]},returnBlockContent(){return this.block.content},returnActiveTabContent(){if(!this.block.content[this.activeTab])return[];const t=this.block.content[this.activeTab].content;return Array.isArray(t)?t:[]}},methods:{pushNewContentBlock(){const t=this.uipApp.data.blocks.filter(t=>"uip-container"==t.moduleName);let e=JSON.parse(JSON.stringify(t[0]));delete e.path,delete e.args,delete e.category,delete e.description,delete e.optionsEnabled,e.uid=this.createUID(),e.name=__("Tab","uipress-lite"),e.settings={},e.tooltip={},this.block.content.push(e)},updateIndex(t){this.activeTab=t},updateBlockContent(t){this.block.content[this.activeTab]&&(this.block.content[this.activeTab].content=t)}},template:'\n      <div class="uip-text-normal">\n      \n       <div class="uip-flex uip-flex-row">\n         <template v-for="(tab, index) in returnTabs">\n            <div class="uip-padding-xs uip-cursor-pointer uip-tab-item" @click="updateIndex(index)"\n            :class="{\'uip-border-bottom-primary uip-text-bold uip-tab-item-active\' : index == activeTab}">{{tab}}</div>\n         </template>\n       </div>\n       \n      <uip-content-area\n      class="uip-tab-content-area"\n      :content="returnActiveTabContent" :returnData="(data)=>{updateBlockContent(data)} "/>\n        \n      </div>\n      '};