const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{display:String,name:String,block:Object},data(){return{darkToggle:this.returnSetting}},inject:["uipData","uipress"],watch:{"block.settings.block.options.prefersColorScheme.value":{handler(e,t){this.checkAutoDark()},deep:!0},"uipData.userPrefs.darkTheme":{handler(e,t){this.setTheme(),this.uipress.saveUserPreference("darkTheme",e,!1)},deep:!0}},mounted(){this.checkAutoDark(),this.setTheme()},computed:{returnSetting(){return!!this.uipData.userPrefs.darkTheme},returnAutoDetect(){const e=this.uipress.get_block_option(this.block,"block","prefersColorScheme",!0);if(e)return this.isObject(e)?e.value?e.value:void 0:e}},methods:{setTheme(){const e=this.uipData.userPrefs.darkTheme?"dark":"light";document.documentElement.setAttribute("data-theme",e);const t=document.querySelectorAll("iframe");if(t)for(const r of t){const t=r.contentWindow.document.documentElement;t&&t.setAttribute("data-theme",e)}},checkAutoDark(){const e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches;if(!this.returnAutoDetect)return;const t=!!e;this.uipData.userPrefs.darkTheme=t}},template:'\n    \n          <label class="uip-dark-switch uip-overflow-hidden">\n            <input type="checkbox" v-model=\'uipData.userPrefs.darkTheme\' >\n            <span class="uip-slider"></span>\n          </label>\n          \n          '}};