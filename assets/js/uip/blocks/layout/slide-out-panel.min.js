const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{display:String,name:String,block:Object},data:()=>({}),inject:["uipress"],computed:{returnText(){const e=this.uipress.get_block_option(this.block,"block","buttonText",!0);return e?this.isObject(e)?e.string?e.string:"":e:""},closeOnPageChange(){let e=this.uipress.get_block_option(this.block,"block","closeOnPageChange");return!!e&&(this.isObject(e)?!!e.value&&e.value:e)},getPanelPos(){const e=this.uipress.get_block_option(this.block,"block","panelSide");return e?e.value:"right"},getPanelStyle(){const e=this.uipress.get_block_option(this.block,"block","panelSide");return e?e.value:"slide"},returnIcon(){let e=this.uipress.get_block_option(this.block,"block","iconSelect");return e?this.isObject(e)?e.value?e.value:"":e:""},getShortcut(){const e=this.getShortcutValue;if(e)return this.uipress.renderKeyShortCut(e.selected)},getShortcutValue(){const e=this.uipress.get_block_option(this.block,"block","keyboardShortcut");if(this.isObject(e)){if(!e.enabled||!e.display||!e.selected)return!1;if(!(e.selected.length<1))return e.selected}},returnClasses(){const e=this.uipress.get_block_option(this.block,"block","iconPosition");if(e)return this.isObject(e)||"right"!=e?e.value&&"right"==e.value?"uip-flex-reverse":void 0:"uip-flex-reverse"}},template:'\n        <uip-offcanvas :position="getPanelPos" :shortCut="getShortcutValue" :overlayStyle="getPanelStyle" :closeOnLoad="closeOnPageChange">\n        \n          <template #trigger>\n          \n            <button class="uip-button-default uip-flex uip-gap-xxs uip-flex-center uip-panel-trigger"\n            :class="returnClasses">\n            \n              <span class="uip-icon" v-if="returnIcon">{{returnIcon}}</span>\n              <span class="uip-flex-grow" v-if="returnText != \'\'">{{returnText}}</span>\n              \n              <div v-if="getShortcut" class="uip-flex uip-flex-row uip-padding-left-xxxs uip-padding-right-xxxs uip-border uip-border-round uip-text-s uip-flex-row uip-inline-flex uip-flex-center" v-html="getShortcut"></div>\n              \n            </button>\n            \n          </template>\n          \n          <template #content>\n          \n            <uip-content-area :content="block.content" :returnData="(data)=>{block.content = data}"/>\n            \n          </template>\n          \n        </uip-offcanvas>\n        '}};