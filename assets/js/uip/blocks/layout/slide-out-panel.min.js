const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{display:String,name:String,block:Object},data:function(){return{loading:!0,dynamics:this.uipData.dynamicOptions,open:!1}},inject:["uipData","uipress","uiTemplate"],watch:{},mounted:function(){},computed:{returnText(){let e=this.uipress.get_block_option(this.block,"block","buttonText",!0);return e?this.uipress.isObject(e)?"string"in e?e.string:"":e:""},closeOnPageChange(){let e=this.uipress.get_block_option(this.block,"block","closeOnPageChange");return!!e&&("value"in e?e.value:e)},getPanelPos(){let e=this.uipress.get_block_option(this.block,"block","panelSide");return e?e.value:"right"},getPanelStyle(){let e=this.uipress.get_block_option(this.block,"block","overlayStyle");return e?e.value:"slide"},getIcon(){let e=this.uipress.get_block_option(this.block,"block","iconSelect");return e?"value"in e?e.value:e:""},getShortcut(){let e=this.uipress.get_block_option(this.block,"block","keyboardShortcut");return!!e&&("enabled"in e&&(!!e.enabled&&("selected"in e?!(e.selected.length<1)&&(!!e.display&&this.uipress.renderKeyShortCut(e.selected)):void 0)))},getShortcutValue(){let e=this.uipress.get_block_option(this.block,"block","keyboardShortcut");return!!e&&("enabled"in e&&(!!e.enabled&&("selected"in e?!(e.selected.length<1)&&e.selected:void 0)))}},methods:{returnIconPos(){let e="",t=this.uipress.get_block_option(this.block,"block","iconPosition");return t&&"right"==t.value&&(e+="uip-flex-reverse"),e}},template:'\n        <uip-offcanvas :position="getPanelPos" :shortCut="getShortcutValue" :overlayStyle="getPanelStyle" :closeOnLoad="closeOnPageChange">\n          <template v-slot:trigger>\n            <button class="uip-button-default uip-flex uip-gap-xxs uip-flex-center uip-panel-trigger"\n            :class="returnIconPos()" >\n              <span class="uip-icon" v-if="getIcon">{{getIcon}}</span>\n              <span class="uip-flex-grow" v-if="returnText != \'\'">{{returnText}}</span>\n              <div v-if="getShortcut" class="uip-flex uip-flex-row uip-padding-left-xxxs uip-padding-right-xxxs uip-border uip-border-round uip-text-s uip-flex-row uip-inline-flex uip-flex-center" v-html="getShortcut">\n              </div>\n            </button>\n          </template>\n          <template v-slot:content>\n            <uip-content-area :content="block.content" :returnData="function(data) {block.content = data} " layout="vertical"></uip-content-area>\n          </template>\n        </uip-offcanvas>\n        '}};